{"version":3,"file":"mini3d.js","sources":["../src/event/eventManager.js","../src/event/systemEvent.js","../src/input/inputManager.js","../src/core/gl.js","../src/math/math.js","../src/math/vector3.js","../src/math/matrix4.js","../src/math/matrix3.js","../src/math/quaternion.js","../src/core/shader.js","../src/core/vertexFormat.js","../src/core/vertexBuffer.js","../src/core/indexBuffer.js","../src/core/mesh.js","../src/core/texture.js","../src/core/renderTexture.js","../src/assets/imageAsset.js","../src/assets/textAsset.js","../src/assets/assetManager.js","../src/core/textureManager.js","../src/geometry/geometryHelper.js","../src/core/objFileLoader.js","../src/scene/systemComps.js","../src/material/renderPass.js","../src/material/material.js","../src/scene/components/component.js","../src/scene/components/light.js","../src/scene/components/meshRenderer.js","../src/scene/components/Component.js","../src/geometry/screenQuard.js","../src/postprocessing/material/matPP_Base.js","../src/postprocessing/postProcessingChain.js","../src/scene/components/camera.js","../src/material/matProjector.js","../src/scene/components/projector.js","../src/scene/sceneNode.js","../src/scene/SceneNode.js","../src/scene/sceneForwardRenderer.js","../src/scene/scene.js","../src/geometry/cube.js","../src/geometry/plane.js","../src/material/matVertexLight.js","../src/material/matPixelLight.js","../src/material/matSolidColor.js","../src/material/matNormalMap.js","../src/material/matNormalMapW.js","../src/material/matMirror.js","../src/postprocessing/postEffectLayer.js","../src/postprocessing/postEffectLayerOnePass.js","../src/postprocessing/material/matPP_Blur.js","../src/postprocessing/postEffectBlur.js","../src/postprocessing/material/matPP_Bloom.js","../src/postprocessing/postEffectBloom.js","../src/postprocessing/material/matPP_Wave.js","../src/postprocessing/material/matPP_Grayscale.js","../src/postprocessing/material/matPP_ColorBSC.js","../src/postprocessing/material/matPP_Vignette.js","../src/postprocessing/material/matPP_EdgeDetection.js"],"sourcesContent":["\r\nclass EventManager{\r\n    constructor(){\r\n        this._eventHandlers = {};\r\n    }\r\n\r\n    addEventHandler(event, handler){\r\n        let handlers = this._eventHandlers[event];\r\n        if(handlers==null){\r\n            this._eventHandlers[event] = [];\r\n            handlers = this._eventHandlers[event];\r\n        }\r\n\r\n        if(handlers.indexOf(handler)!==-1){\r\n            console.warn(\"event hander already added.\");\r\n            return;\r\n        }\r\n        \r\n        handlers.push(handler);\r\n    }\r\n\r\n    removeEventHandler(event, handler){\r\n        let handlers = this._eventHandlers[event];\r\n        if(handlers!=null && handlers.length>0){\r\n            let idx = handlers.indexOf(handler);\r\n            if(idx>=0){\r\n                handlers.splice(idx, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    removeAllEventHandlers(event){\r\n        this._eventHandlers[event] = null;\r\n    }\r\n\r\n    emitEvent(event, data){        \r\n        let handlers = this._eventHandlers[event];\r\n        if(handlers!=null && handlers.length>0){\r\n            for(let handler of handlers){\r\n                handler(event, data);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlet eventManager = new EventManager();\r\nexport { eventManager };","\r\nlet SystemEvent = {\r\n    touchStart:'touchStart',\r\n    touchMove:'touchMove',\r\n    touchEnd:'touchEnd',\r\n    touchOut:'touchOut'\r\n}\r\n\r\nexport { SystemEvent };","import { eventManager } from '../event/eventManager';\r\nimport { SystemEvent } from '../event/systemEvent';\r\n\r\n\r\nclass InputManager{\r\n    constructor(){        \r\n    }\r\n\r\n    init(canvas){\r\n        let dragging = false;\r\n        let lastX = -1, lastY = -1;                  \r\n    \r\n        let onTouchStart = function(event){   \r\n            let x,y;\r\n            if(event.touches){\r\n                let touch = event.touches[0];\r\n                x = touch.clientX;\r\n                y = touch.clientY;\r\n            } else {\r\n                x = event.clientX;\r\n                y = event.clientY;\r\n            }          \r\n                        \r\n            let rect = event.target.getBoundingClientRect();\r\n            if(x>=rect.left && x<rect.right && y>=rect.top && y<rect.bottom){\r\n                lastX = x;\r\n                lastY = y;\r\n                dragging = true;  \r\n                \r\n                eventManager.emitEvent(SystemEvent.touchStart, {x:x,y:y});\r\n            }\r\n        }\r\n    \r\n        let onTouchEnd = function(event){\r\n            dragging = false;  \r\n            eventManager.emitEvent(SystemEvent.touchEnd);      \r\n        }\r\n    \r\n        let onTouchMove = function(event){            \r\n            let x,y;\r\n            if(event.touches){\r\n                let touch = event.touches[0];\r\n                x = touch.clientX;\r\n                y = touch.clientY;\r\n            } else {\r\n                x = event.clientX;\r\n                y = event.clientY;\r\n            } \r\n            \r\n            if(dragging){                \r\n                let dx = (x-lastX);\r\n                let dy = (y-lastY);\r\n                eventManager.emitEvent(SystemEvent.touchMove, {x:x,y:y,dx:dx,dy:dy});                         \r\n            }\r\n            lastX = x;\r\n            lastY = y;\r\n        }\r\n\r\n        canvas.onmousedown = onTouchStart;\r\n        canvas.onmouseup = onTouchEnd;\r\n        canvas.onmousemove = onTouchMove;\r\n\r\n        canvas.ontouchstart = onTouchStart;\r\n        canvas.ontouchend = onTouchEnd;\r\n        canvas.ontouchmove = onTouchMove;\r\n    }\r\n\r\n\r\n}\r\n\r\nlet inputManager = new InputManager();\r\nexport { inputManager };","import { inputManager } from \"../input/inputManager\";\r\n\r\nlet gl = null;\r\nlet canvas = null;\r\nlet _app = null;\r\nlet _prevTime = Date.now();\r\n\r\nlet glAbility = {};\r\nlet glExt = {};\r\nlet sysConfig = {};\r\n\r\nfunction init(canvasId, app, config=null){    \r\n    if(canvasId != null){\r\n        canvas = document.getElementById(canvasId);\r\n        if(canvas === undefined){\r\n            console.error(\"cannot find a canvas named:\"+canvasId);\r\n            return;\r\n        }\r\n    } else {\r\n        canvas = document.createElement(\"canvas\");       \r\n        document.body.appendChild(canvas);       \r\n    }   \r\n\r\n    gl = canvas.getContext(\"webgl2\");\r\n    if(gl!=null){        \r\n        glAbility.WebGL2 = true;\r\n    } else {\r\n        let names = [\"webgl\", \"experimental-webgl\", \"webkit-3d\", \"moz-webgl\"];        \r\n        for(let i=0; i<names.length; ++i){\r\n            try{\r\n                gl = canvas.getContext(names[i]);\r\n            } catch(e){}\r\n            if(gl){\r\n                break;\r\n            }\r\n        }        \r\n        if(gl==null){\r\n            console.error(\"WebGL not supported.\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    \r\n    glCheck();\r\n\r\n    //Extensions\r\n    glExt.sRGB = gl.getExtension('EXT_sRGB');\r\n\r\n    if(config==null){\r\n        sysConfig.gammaCorrection = true;\r\n    } else {\r\n        sysConfig = config;\r\n    }\r\n\r\n    if(glAbility.WebGL2==null && glExt.sRGB==null){\r\n        glAbility._NO_sRGB = true;\r\n    }\r\n\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1); //Flip the image's y axis    \r\n\r\n    gl.enable(gl.CULL_FACE); //TODO: 状态管理和shadow states\r\n\r\n    _app = app;\r\n\r\n    inputManager.init(canvas);\r\n\r\n    if(_app){\r\n        _app.onInit();    \r\n    }\r\n\r\n    window.onresize = onResize;\r\n    console.log(navigator.userAgent);\r\n\r\n    onResize();\r\n    loop();\r\n};\r\n\r\n//检查gl能力\r\nfunction glCheck(){    \r\n    glAbility.MAX_TEXTURE_SIZE = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n    glAbility.MAX_VIEWPORT_DIMS = gl.getParameter(gl.MAX_VIEWPORT_DIMS);\r\n    glAbility.MAX_CUBE_MAP_TEXTURE_SIZE = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\r\n    glAbility.MAX_RENDERBUFFER_SIZE = gl.getParameter(gl.MAX_RENDERBUFFER_SIZE);\r\n    //Shaders\r\n    glAbility.MAX_VERTEX_ATTRIBS = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\r\n    glAbility.MAX_VERTEX_UNIFORM_VECTORS = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\r\n    glAbility.MAX_VARYING_VECTORS = gl.getParameter(gl.MAX_VARYING_VECTORS);\r\n    glAbility.MAX_COMBINED_TEXTURE_IMAGE_UNITS = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\r\n    glAbility.MAX_VERTEX_TEXTURE_IMAGE_UNITS = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\r\n    glAbility.MAX_TEXTURE_IMAGE_UNITS = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\r\n    glAbility.MAX_FRAGMENT_UNIFORM_VECTORS = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\r\n\r\n    //WebGL 2\r\n    if(glAbility.WebGL2){\r\n        glAbility.MAX_3D_TEXTURE_SIZE = gl.getParameter(gl.MAX_3D_TEXTURE_SIZE);\r\n        glAbility.MAX_ELEMENTS_VERTICES = gl.getParameter(gl.MAX_ELEMENTS_VERTICES);\r\n        glAbility.MAX_ELEMENTS_INDICES = gl.getParameter(gl.MAX_ELEMENTS_INDICES);\r\n        glAbility.MAX_TEXTURE_LOD_BIAS = gl.getParameter(gl.MAX_TEXTURE_LOD_BIAS);\r\n        glAbility.MAX_FRAGMENT_UNIFORM_COMPONENTS = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_COMPONENTS);\r\n        glAbility.MAX_VERTEX_UNIFORM_COMPONENTS = gl.getParameter(gl.MAX_VERTEX_UNIFORM_COMPONENTS);\r\n        glAbility.MAX_ARRAY_TEXTURE_LAYERS = gl.getParameter(gl.MAX_ARRAY_TEXTURE_LAYERS);\r\n        glAbility.MIN_PROGRAM_TEXEL_OFFSET = gl.getParameter(gl.MIN_PROGRAM_TEXEL_OFFSET);\r\n        glAbility.MAX_PROGRAM_TEXEL_OFFSET = gl.getParameter(gl.MAX_PROGRAM_TEXEL_OFFSET);\r\n        glAbility.MAX_VARYING_COMPONENTS = gl.getParameter(gl.MAX_VARYING_COMPONENTS);\r\n        glAbility.MAX_VERTEX_OUTPUT_COMPONENTS = gl.getParameter(gl.MAX_VERTEX_OUTPUT_COMPONENTS);\r\n        glAbility.MAX_FRAGMENT_INPUT_COMPONENTS = gl.getParameter(gl.MAX_FRAGMENT_INPUT_COMPONENTS);\r\n        glAbility.MAX_SERVER_WAIT_TIMEOUT = gl.getParameter(gl.MAX_SERVER_WAIT_TIMEOUT);\r\n        glAbility.MAX_ELEMENT_INDEX = gl.getParameter(gl.MAX_ELEMENT_INDEX);\r\n\r\n        //draw buffers\r\n        glAbility.MAX_DRAW_BUFFERS = gl.getParameter(gl.MAX_DRAW_BUFFERS);\r\n        glAbility.MAX_COLOR_ATTACHMENTS = gl.getParameter(gl.MAX_COLOR_ATTACHMENTS);\r\n\r\n        //Samplers\r\n        glAbility.MAX_SAMPLES = gl.getParameter(gl.MAX_SAMPLES);\r\n\r\n        //Transform feedback\r\n        glAbility.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = gl.getParameter(gl.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS);\r\n        glAbility.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = gl.getParameter(gl.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS);\r\n        glAbility.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = gl.getParameter(gl.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS);\r\n\r\n        //Uniforms\r\n        glAbility.MAX_VERTEX_UNIFORM_BLOCKS = gl.getParameter(gl.MAX_VERTEX_UNIFORM_BLOCKS);\r\n        glAbility.MAX_FRAGMENT_UNIFORM_BLOCKS = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_BLOCKS);\r\n        glAbility.MAX_COMBINED_UNIFORM_BLOCKS = gl.getParameter(gl.MAX_COMBINED_UNIFORM_BLOCKS);\r\n        glAbility.MAX_UNIFORM_BUFFER_BINDINGS = gl.getParameter(gl.MAX_UNIFORM_BUFFER_BINDINGS);\r\n        glAbility.MAX_UNIFORM_BLOCK_SIZE = gl.getParameter(gl.MAX_UNIFORM_BLOCK_SIZE);\r\n        glAbility.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = gl.getParameter(gl.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS);\r\n        glAbility.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = gl.getParameter(gl.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS);\r\n    }\r\n\r\n    \r\n\r\n    for(let key in glAbility){\r\n        console.log('===>',key, glAbility[key]);\r\n    }\r\n    \r\n}\r\n\r\nfunction onResize(){\r\n    canvas.width = Math.floor(canvas.clientWidth * window.devicePixelRatio);\r\n    canvas.height = Math.floor(canvas.clientHeight * window.devicePixelRatio); \r\n    \r\n    gl.viewport(0, 0, canvas.width, canvas.height);\r\n\r\n    if(_app){\r\n        _app.onResize(canvas.width, canvas.height);\r\n    }\r\n}\r\n\r\nfunction loop(){\r\n    let now = Date.now();\r\n    let dt = now - _prevTime;\r\n    _prevTime = now;\r\n\r\n    if(_app){\r\n        _app.onUpdate(dt);\r\n    }\r\n    requestAnimationFrame(loop);\r\n}\r\n\r\nlet isMobile = function(){    \r\n    if(navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i)){\r\n        return true;\r\n    }else{\r\n        return false;\r\n    }        \r\n}();\r\n\r\nexport { init, gl, glExt, canvas, glAbility, sysConfig, isMobile };\r\n\r\n","\r\nclass MathUtils{\r\n    constructor(){\r\n        this.Pi = 3.141592654;\r\n        this.TwoPi = 6.283185307;\r\n        this.HalfPi = 1.570796327;\r\n\r\n        this.Epsilon = 0.000001;\r\n        this.ZeroEpsilon = 32.0 * 1.175494351e-38; // Very small epsilon for checking against 0.0f\r\n    }\r\n\r\n    degToRad(degree){\r\n        return degree * 0.017453293;\r\n    }\r\n\r\n    radToDeg(rad){\r\n        return rad * 57.29577951;\r\n    }\r\n\r\n    clamp(f, min, max){\r\n        if(f<min) f = min;\r\n        else if(f>max) f = max;\r\n        return f;\r\n    }\r\n}\r\n\r\nlet math = new MathUtils();\r\n\r\nexport { math };","import { math } from \"./math\";\r\n\r\nclass Vector3{\r\n    constructor(x=0,y=0,z=0){\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    clone(){\r\n        return new Vector3(this.x, this.y, this.z);\r\n    }\r\n\r\n    set(x,y,z){\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    length(){\r\n        return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);\r\n    }\r\n\r\n    lengthSquare(){\r\n        return this.x*this.x+this.y*this.y+this.z*this.z;\r\n    }\r\n\r\n    equals(rhs){\r\n        let eps = math.Epsilon;\r\n        return (this.x > rhs.x - eps && this.x < rhs.x + eps &&\r\n                this.y > rhs.y - eps && this.y < rhs.y + eps &&\r\n                this.z > rhs.z - eps && this.z < rhs.z + eps);\r\n    }\r\n\r\n    copyFrom(rhs){\r\n        this.x = rhs.x;\r\n        this.y = rhs.y;\r\n        this.z = rhs.z;\r\n        return this;\r\n    }\r\n\r\n    negative(){\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        this.z = -this.z;\r\n        return this;\r\n    }\r\n\r\n    add(rhs){\r\n        this.x += rhs.x;\r\n        this.y += rhs.y;\r\n        this.z += rhs.z;\r\n        return this;\r\n    }\r\n\r\n    sub(rhs){\r\n        this.x -= rhs.x;\r\n        this.y -= rhs.y;\r\n        this.z -= rhs.z;\r\n        return this;\r\n    }\r\n\r\n    multiply(rhs){\r\n        this.x *= rhs.x;\r\n        this.y *= rhs.y;\r\n        this.z *= rhs.z;\r\n        return this;\r\n    }\r\n\r\n    scale(s){\r\n        this.x *= s;\r\n        this.y *= s;\r\n        this.z *= s;\r\n        return this;\r\n    }\r\n\r\n    normalize(){\r\n        let lensq =this.x*this.x+this.y*this.y+this.z*this.z;\r\n        if(lensq > 0){\r\n           let g = 1/Math.sqrt(lensq);\r\n           this.x *= g;\r\n           this.y *= g;\r\n           this.z *= g;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    static copyTo(src, dst){\r\n        dst.x = src.x;\r\n        dst.y = src.y;\r\n        dst.z = src.z;\r\n        return dst;\r\n    }\r\n\r\n    static negativeTo(src, dst){\r\n        dst.x = -src.x;\r\n        dst.y = -src.y;\r\n        dst.z = -src.z;\r\n        return dst;\r\n    }\r\n\r\n    static add(a, b, dst){\r\n        dst.x = a.x + b.x;\r\n        dst.y = a.y + b.y;\r\n        dst.z = a.z + b.z;\r\n        return dst;\r\n    }\r\n\r\n    static sub(a, b, dst){\r\n        dst.x = a.x - b.x;\r\n        dst.y = a.y - b.y;\r\n        dst.z = a.z - b.z;\r\n        return dst;\r\n    }\r\n\r\n    static multiply(a, b, dst){\r\n        dst.x = a.x * b.x;\r\n        dst.y = a.y * b.y;\r\n        dst.z = a.z * b.z;\r\n        return dst;\r\n    }\r\n\r\n    static scaleTo(a, s, dst){\r\n        dst.x = a.x * s;\r\n        dst.y = a.y * s;\r\n        dst.z = a.z * s;\r\n        return dst;\r\n    }\r\n\r\n    static dot(a, b){\r\n        return a.x * b.x + a.y * b.y + a.z * b.z;\r\n    }\r\n\r\n    static cross(a, b, dst){\r\n        dst.x = a.y * b.z - a.z * b.y;\r\n        dst.y = a.z * b.x - a.x * b.z;\r\n        dst.z = a.x * b.y - a.y * b.x;\r\n        return dst;\r\n    }\r\n\r\n    static lerp(a, b, f, dst){\r\n        dst.x = a.x + (b.x-a.x)*f;\r\n        dst.y = a.y + (b.y-a.y)*f;\r\n        dst.z = a.z + (b.z-a.z)*f;\r\n        return dst;\r\n    }\r\n\r\n    static distance(a,b){\r\n        let dx = a.x - b.x;\r\n        let dy = a.y - b.y;\r\n        let dz = a.z - b.z;\r\n        return Math.sqrt(dx*dx+dy*dy+dz*dz);\r\n    }\r\n\r\n    static distanceSquare(a,b){\r\n        let dx = a.x - b.x;\r\n        let dy = a.y - b.y;\r\n        let dz = a.z - b.z;\r\n        return dx*dx+dy*dy+dz*dz;\r\n    }\r\n}\r\n\r\nVector3.Right = new Vector3(1, 0, 0);\r\nVector3.Up = new Vector3(0, 1, 0);\r\n\r\nexport { Vector3 };","import { Vector3 } from \"./vector3\";\r\n\r\nclass Matrix4 {\r\n    constructor(){\r\n        this.elements = new Float32Array([1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1]);\r\n    }\r\n\r\n    /**\r\n     * Set the identity matrix.\r\n     */\r\n    setIdentity(){\r\n        let e = this.elements;\r\n        e[0] = 1; e[4] = 0; e[8] = 0;  e[12] = 0;\r\n        e[1] = 0; e[5] = 1; e[9] = 0;  e[13] = 0;\r\n        e[2] = 0; e[6] = 0; e[10] = 1; e[14] = 0;\r\n        e[3] = 0; e[7] = 0; e[11] = 0; e[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Copy matrix.\r\n     */\r\n    set(other){\r\n        let src = other.elements;\r\n        let dst = this.elements;\r\n        if(src === dst){\r\n            return this;\r\n        }\r\n\r\n        for(let i=0; i<16; i++){\r\n            dst[i] = src[i];\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Multiply the matrix from the right.\r\n     * @param {Matrix4} other The multiply matrix\r\n     * @returns this \r\n     */\r\n    multiply(other){\r\n        let i, e, a, b, ai0, ai1, ai2, ai3;\r\n  \r\n        // Calculate e = a * b\r\n        e = this.elements;\r\n        a = this.elements;\r\n        b = other.elements;\r\n        \r\n        // If e equals b, copy b to temporary matrix.\r\n        if (e === b) {\r\n            b = new Float32Array(16);\r\n            for (i = 0; i < 16; ++i) {\r\n                b[i] = e[i];\r\n            }\r\n        }\r\n        \r\n        for (i = 0; i < 4; i++) {\r\n            ai0=a[i];  ai1=a[i+4];  ai2=a[i+8];  ai3=a[i+12];\r\n            e[i]    = ai0 * b[0]  + ai1 * b[1]  + ai2 * b[2]  + ai3 * b[3];\r\n            e[i+4]  = ai0 * b[4]  + ai1 * b[5]  + ai2 * b[6]  + ai3 * b[7];\r\n            e[i+8]  = ai0 * b[8]  + ai1 * b[9]  + ai2 * b[10] + ai3 * b[11];\r\n            e[i+12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\r\n        }\r\n        \r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the matrix for translation.\r\n     */\r\n    setTranslate(x,y,z){\r\n        let e = this.elements;\r\n        e[0] = 1; e[4] = 0; e[8] = 0;  e[12] = x;\r\n        e[1] = 0; e[5] = 1; e[9] = 0;  e[13] = y;\r\n        e[2] = 0; e[6] = 0; e[10] = 1; e[14] = z;\r\n        e[3] = 0; e[7] = 0; e[11] = 0; e[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Multiply the matrix for translation from the right. \r\n     */\r\n    translate(x, y, z) {\r\n        let e = this.elements;\r\n        e[12] += e[0] * x + e[4] * y + e[8]  * z;\r\n        e[13] += e[1] * x + e[5] * y + e[9]  * z;\r\n        e[14] += e[2] * x + e[6] * y + e[10] * z;\r\n        e[15] += e[3] * x + e[7] * y + e[11] * z;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Set the matrix for scaling.\r\n     */\r\n    setScale(sx, sy, sz){\r\n        let e = this.elements;\r\n        e[0] = sx; e[4] = 0;  e[8] = 0;   e[12] = 0;\r\n        e[1] = 0;  e[5] = sy; e[9] = 0;   e[13] = 0;\r\n        e[2] = 0;  e[6] = 0;  e[10] = sz; e[14] = 0;\r\n        e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n        return this;\r\n    }  \r\n    \r\n    /**\r\n     * Multiply the matrix for scaling from the right.\r\n     */\r\n    scale(sx, sy, sz){\r\n        let e = this.elements;\r\n        e[0] *= sx; e[4] *= sy;  e[8] *= sz;\r\n        e[1] *= sx; e[5] *= sy;  e[9] *= sz;\r\n        e[2] *= sx; e[6] *= sy;  e[10] *= sz;\r\n        e[3] *= sx; e[7] *= sy;  e[11] *= sz;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the matrix for rotation.\r\n     * The vector of rotation axis may not be normalized.\r\n     * @param angle The angle of rotation (degrees)\r\n     * @param x The X coordinate of vector of rotation axis. \r\n     * @param y The Y coordinate of vector of rotation axis.\r\n     * @param z The Z coordinate of vector of rotation axis.\r\n     */\r\n    setRotate(angle, x, y, z){\r\n        let e, s, c, len, rlen, nc, xy, yz, zx, xs, ys, zs;\r\n\r\n        angle = Math.PI * angle / 180;\r\n        e = this.elements;\r\n\r\n        s = Math.sin(angle);\r\n        c = Math.cos(angle);\r\n\r\n        if (0 !== x && 0 === y && 0 === z) {\r\n            // Rotation around X axis\r\n            if (x < 0) {\r\n            s = -s;\r\n            }\r\n            e[0] = 1;  e[4] = 0;  e[ 8] = 0;  e[12] = 0;\r\n            e[1] = 0;  e[5] = c;  e[ 9] =-s;  e[13] = 0;\r\n            e[2] = 0;  e[6] = s;  e[10] = c;  e[14] = 0;\r\n            e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n        } else if (0 === x && 0 !== y && 0 === z) {\r\n            // Rotation around Y axis\r\n            if (y < 0) {\r\n            s = -s;\r\n            }\r\n            e[0] = c;  e[4] = 0;  e[ 8] = s;  e[12] = 0;\r\n            e[1] = 0;  e[5] = 1;  e[ 9] = 0;  e[13] = 0;\r\n            e[2] =-s;  e[6] = 0;  e[10] = c;  e[14] = 0;\r\n            e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n        } else if (0 === x && 0 === y && 0 !== z) {\r\n            // Rotation around Z axis\r\n            if (z < 0) {\r\n            s = -s;\r\n            }\r\n            e[0] = c;  e[4] =-s;  e[ 8] = 0;  e[12] = 0;\r\n            e[1] = s;  e[5] = c;  e[ 9] = 0;  e[13] = 0;\r\n            e[2] = 0;  e[6] = 0;  e[10] = 1;  e[14] = 0;\r\n            e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n        } else {\r\n            // Rotation around another axis\r\n            len = Math.sqrt(x*x + y*y + z*z);\r\n            if (len !== 1) {\r\n            rlen = 1 / len;\r\n            x *= rlen;\r\n            y *= rlen;\r\n            z *= rlen;\r\n            }\r\n            nc = 1 - c;\r\n            xy = x * y;\r\n            yz = y * z;\r\n            zx = z * x;\r\n            xs = x * s;\r\n            ys = y * s;\r\n            zs = z * s;\r\n\r\n            e[ 0] = x*x*nc +  c;\r\n            e[ 1] = xy *nc + zs;\r\n            e[ 2] = zx *nc - ys;\r\n            e[ 3] = 0;\r\n\r\n            e[ 4] = xy *nc - zs;\r\n            e[ 5] = y*y*nc +  c;\r\n            e[ 6] = yz *nc + xs;\r\n            e[ 7] = 0;\r\n\r\n            e[ 8] = zx *nc + ys;\r\n            e[ 9] = yz *nc - xs;\r\n            e[10] = z*z*nc +  c;\r\n            e[11] = 0;\r\n\r\n            e[12] = 0;\r\n            e[13] = 0;\r\n            e[14] = 0;\r\n            e[15] = 1;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Multiply the matrix for rotation from the right.\r\n     * The vector of rotation axis may not be normalized.\r\n     */\r\n    rotate(angle, x, y, z){\r\n        return this.multiply(new Matrix4().setRotate(angle, x, y, z));\r\n    }\r\n\r\n    /**\r\n     * Set the viewing matrix.\r\n     * @param eyeX, eyeY, eyeZ The position of the eye point.\r\n     * @param centerX, centerY, centerZ The position of the reference point.\r\n     * @param upX, upY, upZ The direction of the up vector.\r\n     * @return this\r\n     */\r\n    setViewByLookAt(eyeX, eyeY, eyeZ, targetX, targetY, targetZ, upX, upY, upZ){\r\n        // N = eye - target\r\n        let nx, ny, nz;\r\n        nx = eyeX - targetX;\r\n        ny = eyeY - targetY;\r\n        nz = eyeZ - targetZ;\r\n        let rl = 1/Math.sqrt(nx*nx+ny*ny+nz*nz);\r\n        nx *= rl;\r\n        ny *= rl;\r\n        nz *= rl;\r\n        // U = UP cross N\r\n        let ux, uy, uz;\r\n        ux = upY * nz - upZ * ny;\r\n        uy = upZ * nx - upX * nz;\r\n        uz = upX * ny - upY * nx;\r\n        rl = 1/Math.sqrt(ux*ux+uy*uy+uz*uz);\r\n        ux *= rl;\r\n        uy *= rl;\r\n        uz *= rl;\r\n        // V = N cross U\r\n        let vx, vy, vz;\r\n        vx = ny * uz - nz * uy;\r\n        vy = nz * ux - nx * uz;\r\n        vz = nx * uy - ny * ux;\r\n        rl = 1/Math.sqrt(vx*vx+vy*vy+vz*vz);\r\n        vx *= rl;\r\n        vy *= rl;\r\n        vz *= rl;\r\n    \r\n        let e = this.elements;\r\n        e[0] = ux;\r\n        e[1] = vx;\r\n        e[2] = nx;\r\n        e[3] = 0;\r\n    \r\n        e[4] = uy;\r\n        e[5] = vy;\r\n        e[6] = ny;\r\n        e[7] = 0;\r\n    \r\n        e[8] = uz;\r\n        e[9] = vz;\r\n        e[10] = nz;\r\n        e[11] = 0;\r\n    \r\n        e[12] = 0;\r\n        e[13] = 0;\r\n        e[14] = 0;\r\n        e[15] = 1;\r\n    \r\n        return this.translate(-eyeX, -eyeY, -eyeZ);\r\n    }\r\n\r\n    setOrtho(left, right, bottom, top, near, far){ \r\n        if (left === right || bottom === top || near === far) {\r\n            console.error(\"wrong param\");\r\n            return;\r\n        }\r\n\r\n        let rw = 1 / (right - left);\r\n        let rh = 1 / (top - bottom);\r\n        let rd = 1 / (far - near);\r\n\r\n        let e = this.elements;\r\n\r\n        e[0]  = 2 * rw;\r\n        e[1]  = 0;\r\n        e[2]  = 0;\r\n        e[3]  = 0;\r\n\r\n        e[4]  = 0;\r\n        e[5]  = 2 * rh;\r\n        e[6]  = 0;\r\n        e[7]  = 0;\r\n\r\n        e[8]  = 0;\r\n        e[9]  = 0;\r\n        e[10] = -2 * rd;\r\n        e[11] = 0;\r\n\r\n        e[12] = -(right + left) * rw;\r\n        e[13] = -(top + bottom) * rh;\r\n        e[14] = -(far + near) * rd;\r\n        e[15] = 1;\r\n\r\n        return this;\r\n    }\r\n\r\n    setFrustum(left, right, bottom, top, near, far){\r\n        if (left === right || bottom === top || near === far) {\r\n            console.error(\"wrong param\");\r\n            return;\r\n        }\r\n        if(near <= 0){\r\n            console.error(\"wrong near\");\r\n            return;\r\n        }\r\n        if(far <= 0){\r\n            console.error(\"wrong far\");\r\n            return;\r\n        }\r\n\r\n        let rw = 1 / (right - left);\r\n        let rh = 1 / (top - bottom);\r\n        let rd = 1 / (far - near);\r\n\r\n        let e = this.elements;\r\n\r\n        e[0]  = 2 * near * rw;\r\n        e[1]  = 0;\r\n        e[2]  = 0;\r\n        e[3]  = 0;\r\n\r\n        e[4]  = 0;\r\n        e[5]  = 2 * near * rh;\r\n        e[6]  = 0;\r\n        e[7]  = 0;\r\n\r\n        e[8]  = (right + left) * rw;\r\n        e[9]  = (top + bottom) * rh;\r\n        e[10] = -(far + near) * rd;\r\n        e[11] = -1;\r\n\r\n        e[12] = 0\r\n        e[13] = 0\r\n        e[14] = -2 * near * far * rd;\r\n        e[15] = 0;\r\n\r\n        return this;\r\n    }\r\n\r\n    setPerspective(fovy, aspect, near, far){\r\n        if(near === far || aspect === 0 || near <= 0 || far <= 0){\r\n            console.error(\"wrong param\");\r\n            return;\r\n        }\r\n\r\n        let radius = fovy * Math.PI / 180 / 2;\r\n        let sin = Math.sin(radius);\r\n        if(sin === 0){\r\n            console.error(\"wrong param\");\r\n            return;\r\n        }\r\n        let cot = Math.cos(radius) / sin;\r\n        let rd = 1 / (far - near);\r\n       \r\n        let e =  this.elements;\r\n        e[0] = cot / aspect;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n        e[3] = 0;\r\n\r\n        e[4] = 0;\r\n        e[5] = cot;\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n\r\n        e[8] = 0;\r\n        e[9] = 0;\r\n        e[10] = -(far + near) * rd;\r\n        e[11] = -1;\r\n\r\n        e[12] = 0;\r\n        e[13] = 0;\r\n        e[14] = -2 * near * far * rd;\r\n        e[15] = 0;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Calculate the inverse matrix of source matrix, and set to this.\r\n     * @param {Matrix4} source The source matrix.\r\n     * @returns this\r\n     */\r\n    setInverseOf(source){        \r\n        let s = source.elements;\r\n        let d = this.elements;\r\n        let inv = new Float32Array(16);\r\n\r\n        //使用标准伴随阵法计算逆矩阵：\r\n        //标准伴随阵 = 方阵的代数余子式组成的矩阵的转置矩阵\r\n        //逆矩阵 = 标准伴随阵/方阵的行列式\r\n\r\n        //计算代数余子式并转置后放入inv矩阵中\r\n        inv[0]  =   s[5]*s[10]*s[15] - s[5] *s[11]*s[14] - s[9] *s[6]*s[15]\r\n                  + s[9]*s[7] *s[14] + s[13]*s[6] *s[11] - s[13]*s[7]*s[10];\r\n        inv[4]  = - s[4]*s[10]*s[15] + s[4] *s[11]*s[14] + s[8] *s[6]*s[15]\r\n                  - s[8]*s[7] *s[14] - s[12]*s[6] *s[11] + s[12]*s[7]*s[10];\r\n        inv[8]  =   s[4]*s[9] *s[15] - s[4] *s[11]*s[13] - s[8] *s[5]*s[15]\r\n                  + s[8]*s[7] *s[13] + s[12]*s[5] *s[11] - s[12]*s[7]*s[9];\r\n        inv[12] = - s[4]*s[9] *s[14] + s[4] *s[10]*s[13] + s[8] *s[5]*s[14]\r\n                  - s[8]*s[6] *s[13] - s[12]*s[5] *s[10] + s[12]*s[6]*s[9];\r\n\r\n        inv[1]  = - s[1]*s[10]*s[15] + s[1] *s[11]*s[14] + s[9] *s[2]*s[15]\r\n                  - s[9]*s[3] *s[14] - s[13]*s[2] *s[11] + s[13]*s[3]*s[10];\r\n        inv[5]  =   s[0]*s[10]*s[15] - s[0] *s[11]*s[14] - s[8] *s[2]*s[15]\r\n                  + s[8]*s[3] *s[14] + s[12]*s[2] *s[11] - s[12]*s[3]*s[10];\r\n        inv[9]  = - s[0]*s[9] *s[15] + s[0] *s[11]*s[13] + s[8] *s[1]*s[15]\r\n                  - s[8]*s[3] *s[13] - s[12]*s[1] *s[11] + s[12]*s[3]*s[9];\r\n        inv[13] =   s[0]*s[9] *s[14] - s[0] *s[10]*s[13] - s[8] *s[1]*s[14]\r\n                  + s[8]*s[2] *s[13] + s[12]*s[1] *s[10] - s[12]*s[2]*s[9];\r\n\r\n        inv[2]  =   s[1]*s[6]*s[15] - s[1] *s[7]*s[14] - s[5] *s[2]*s[15]\r\n                  + s[5]*s[3]*s[14] + s[13]*s[2]*s[7]  - s[13]*s[3]*s[6];\r\n        inv[6]  = - s[0]*s[6]*s[15] + s[0] *s[7]*s[14] + s[4] *s[2]*s[15]\r\n                  - s[4]*s[3]*s[14] - s[12]*s[2]*s[7]  + s[12]*s[3]*s[6];\r\n        inv[10] =   s[0]*s[5]*s[15] - s[0] *s[7]*s[13] - s[4] *s[1]*s[15]\r\n                  + s[4]*s[3]*s[13] + s[12]*s[1]*s[7]  - s[12]*s[3]*s[5];\r\n        inv[14] = - s[0]*s[5]*s[14] + s[0] *s[6]*s[13] + s[4] *s[1]*s[14]\r\n                  - s[4]*s[2]*s[13] - s[12]*s[1]*s[6]  + s[12]*s[2]*s[5];\r\n\r\n        inv[3]  = - s[1]*s[6]*s[11] + s[1]*s[7]*s[10] + s[5]*s[2]*s[11]\r\n                  - s[5]*s[3]*s[10] - s[9]*s[2]*s[7]  + s[9]*s[3]*s[6];\r\n        inv[7]  =   s[0]*s[6]*s[11] - s[0]*s[7]*s[10] - s[4]*s[2]*s[11]\r\n                  + s[4]*s[3]*s[10] + s[8]*s[2]*s[7]  - s[8]*s[3]*s[6];\r\n        inv[11] = - s[0]*s[5]*s[11] + s[0]*s[7]*s[9]  + s[4]*s[1]*s[11]\r\n                  - s[4]*s[3]*s[9]  - s[8]*s[1]*s[7]  + s[8]*s[3]*s[5];\r\n        inv[15] =   s[0]*s[5]*s[10] - s[0]*s[6]*s[9]  - s[4]*s[1]*s[10]\r\n                  + s[4]*s[2]*s[9]  + s[8]*s[1]*s[6]  - s[8]*s[2]*s[5];\r\n\r\n        //计算行列式，选择方阵的第一列，对该列中的四个元素S[0],s[1],s[2],s[3]分别乘以对应的代数余子式，然后相加\r\n        let det = s[0]*inv[0] + s[1]*inv[4] + s[2]*inv[8] + s[3]*inv[12];\r\n        //注：选择任意一行，例如第一行，也是可以的\r\n        //let det = s[0]*inv[0] + s[4]*inv[1] + s[8]*inv[2] + s[12]*inv[3];\r\n        \r\n        if(det===0){\r\n            return this;\r\n        }\r\n\r\n        det = 1 / det;\r\n        for(let i=0; i<16; ++i){\r\n            d[i] = inv[i] * det;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Invert this matrix\r\n     * @returns this\r\n     */\r\n    invert(){\r\n        return this.setInverseOf(this);\r\n    }\r\n\r\n    /**\r\n     * Transpose this matrix.\r\n     * @returns this\r\n     */\r\n    transpose(){\r\n        let e = this.elements;\r\n\r\n        //转置4x4矩阵，分别交换 1,4; 2,8; 3,12; 6,9; 7,13; 11,14\r\n        let t;\r\n        t = e[1]; e[1] = e[4]; e[4] = t;\r\n        t = e[2]; e[2] = e[8]; e[8] = t;\r\n        t = e[3]; e[3] = e[12]; e[12] = t;\r\n        t = e[6]; e[6] = e[9]; e[9] = t;        \r\n        t = e[7]; e[7] = e[13]; e[13] = t;\r\n        t = e[11]; e[11] = e[14]; e[14] = t;\r\n\r\n        return this;\r\n    }\r\n\r\n    static multiply(m1,m2,dst){\r\n        let i, e, a, b, ai0, ai1, ai2, ai3;\r\n  \r\n        // Calculate e = a * b\r\n        e = dst.elements;\r\n        a = m1.elements;\r\n        b = m2.elements;\r\n        \r\n        // If e equals b, copy b to temporary matrix.\r\n        if (e === b) {\r\n            b = new Float32Array(16);\r\n            for (i = 0; i < 16; ++i) {\r\n                b[i] = e[i];\r\n            }\r\n        }\r\n        \r\n        for (i = 0; i < 4; i++) {\r\n            ai0=a[i];  ai1=a[i+4];  ai2=a[i+8];  ai3=a[i+12];\r\n            e[i]    = ai0 * b[0]  + ai1 * b[1]  + ai2 * b[2]  + ai3 * b[3];\r\n            e[i+4]  = ai0 * b[4]  + ai1 * b[5]  + ai2 * b[6]  + ai3 * b[7];\r\n            e[i+8]  = ai0 * b[8]  + ai1 * b[9]  + ai2 * b[10] + ai3 * b[11];\r\n            e[i+12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\r\n        }\r\n        \r\n        return dst;\r\n    }\r\n\r\n    static transformVec4(mat4, vec4){\r\n        let i, ai0, ai1, ai2, ai3;\r\n        let a = mat4.elements;\r\n        let dst = [];\r\n\r\n        for(i=0; i<4; ++i){\r\n            ai0=a[i];  ai1=a[i+4];  ai2=a[i+8];  ai3=a[i+12];\r\n            dst[i] = ai0 * vec4[0] + ai1 * vec4[1] + ai2 * vec4[2] + ai3 * vec4[3];\r\n        }\r\n\r\n        return dst;\r\n    }\r\n\r\n    static transformPoint(mat4, vec3, dstVec3){\r\n        let vec4 = [vec3.x, vec3.y, vec3.z, 1];\r\n        let dst = Matrix4.transformVec4(mat4, vec4);\r\n        if(dstVec3==null){\r\n            dstVec3 = new Vector3();\r\n        }\r\n        dstVec3.set(dst[0], dst[1], dst[2]);\r\n        return dstVec3;\r\n    }\r\n\r\n    static transformDirection(mat4, vec3, dstVec3){\r\n        let vec4 = [vec3.x, vec3.y, vec3.z, 0];\r\n        let dst = Matrix4.transformVec4(mat4, vec4);\r\n        if(dstVec3==null){\r\n            dstVec3 = new Vector3();\r\n        }\r\n        dstVec3.set(dst[0], dst[1], dst[2]);\r\n        return dstVec3;\r\n    }\r\n}\r\n\r\nexport { Matrix4 };","import { math } from \"./math\";\r\n\r\nclass Matrix3 {\r\n    constructor(){\r\n        this.elements = new Float32Array([1,0,0, 0,1,0, 0,0,1]);\r\n    }\r\n\r\n    /**\r\n     * Set the identity matrix.\r\n     */\r\n    setIdentity(){\r\n        let e = this.elements;\r\n        e[0] = 1; e[3] = 0; e[6] = 0;\r\n        e[1] = 0; e[4] = 1; e[7] = 0;\r\n        e[2] = 0; e[5] = 0; e[8] = 1;        \r\n        return this;\r\n    }\r\n\r\n    setValue(m0, m1, m2, m3, m4, m5, m6, m7, m8){\r\n        let e = this.elements;\r\n        e[0] = m0; e[3] = m3; e[6] = m6;\r\n        e[1] = m1; e[4] = m4; e[7] = m7;\r\n        e[2] = m2; e[5] = m5; e[8] = m8;        \r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Copy matrix.\r\n     */\r\n    set(other){\r\n        let src = other.elements;\r\n        let dst = this.elements;\r\n        if(src === dst){\r\n            return this;\r\n        }\r\n\r\n        for(let i=0; i<9; i++){\r\n            dst[i] = src[i];\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set value from Matrix4\r\n     * @param {Matrix4} mat4 \r\n     */\r\n    setFromMatrix4(mat4){\r\n        let src = mat4.elements;\r\n        let e = this.elements;\r\n        e[0] = src[0];  e[3] = src[4]; e[6] = src[8];\r\n        e[1] = src[1];  e[4] = src[5]; e[7] = src[9];\r\n        e[2] = src[2];  e[5] = src[6]; e[8] = src[10];  \r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Multiply the matrix from the right.\r\n     * @param {Matrix3} other The multiply matrix\r\n     * @returns this \r\n     */\r\n    multiply(other){\r\n        let i, e, a, b, ai0, ai1, ai2;\r\n  \r\n        // Calculate e = a * b\r\n        e = this.elements;\r\n        a = this.elements;\r\n        b = other.elements;\r\n        \r\n        // If e equals b, copy b to temporary matrix.\r\n        if (e === b) {\r\n            b = new Float32Array(9);\r\n            for (i = 0; i < 9; ++i) {\r\n                b[i] = e[i];\r\n            }\r\n        }\r\n        \r\n        for (i = 0; i < 3; i++) {\r\n            ai0=a[i];  ai1=a[i+3];  ai2=a[i+6];\r\n            e[i]    = ai0 * b[0]  + ai1 * b[1]  + ai2 * b[2];\r\n            e[i+3]  = ai0 * b[3]  + ai1 * b[4]  + ai2 * b[5];\r\n            e[i+6]  = ai0 * b[6]  + ai1 * b[7]  + ai2 * b[8];\r\n        }\r\n        \r\n        return this;\r\n    }\r\n\r\n    \r\n    /**\r\n     * Set the Look at matrix.\r\n     * 根据lookAt和up方向构建旋转矩阵。注意此矩阵不是camera的lookAt view matrix。\r\n     * 它是一个UVN矩阵。而camera的lookAt矩阵是camera世界矩阵的逆矩阵。\r\n     * @param eyeX, eyeY, eyeZ The position of the eye point.\r\n     * @param targetX, targetY, targetZ The position of the target point.\r\n     * @param upX, upY, upZ The direction of the up vector.\r\n     * @return this\r\n     */\r\n    setLookAt(eyeX, eyeY, eyeZ, targetX, targetY, targetZ, upX, upY, upZ){\r\n        // N = eye - target\r\n        const eps = math.ZeroEpsilon;\r\n        let nx, ny, nz;\r\n        let rl;\r\n        nx = targetX - eyeX;\r\n        ny = targetY - eyeY;\r\n        nz = targetZ - eyeZ;\r\n        let lenSqr = nx*nx+ny*ny+nz*nz;\r\n        if(lenSqr < eps){\r\n            // eye and target are in the same position\r\n            nz = 1;\r\n        } else {\r\n            rl = 1/Math.sqrt(lenSqr);\r\n            nx *= rl;\r\n            ny *= rl;\r\n            nz *= rl;\r\n        }\r\n        \r\n        // U = UP cross N\r\n        let ux, uy, uz;\r\n        ux = upY * nz - upZ * ny;\r\n        uy = upZ * nx - upX * nz;\r\n        uz = upX * ny - upY * nx;\r\n        lenSqr = ux*ux+uy*uy+uz*uz;\r\n        if(lenSqr < eps){\r\n            // UP and N are parallel\r\n            if(Math.abs(upZ)===1){\r\n                nx += 0.0001;\r\n            } else {\r\n                nz += 0.0001; \r\n            }\r\n            rl = 1/Math.sqrt(nx*nx+ny*ny+nz*nz);\r\n            nx *= rl;\r\n            ny *= rl;\r\n            nz *= rl;\r\n\r\n            ux = upY * nz - upZ * ny;\r\n            uy = upZ * nx - upX * nz;\r\n            uz = upX * ny - upY * nx;\r\n            lenSqr = ux*ux+uy*uy+uz*uz;\r\n        } \r\n\r\n        rl = 1/Math.sqrt(lenSqr);\r\n        ux *= rl;\r\n        uy *= rl;\r\n        uz *= rl;\r\n        \r\n        \r\n        // V = N cross U\r\n        let vx, vy, vz;\r\n        vx = ny * uz - nz * uy;\r\n        vy = nz * ux - nx * uz;\r\n        vz = nx * uy - ny * ux;\r\n        rl = 1/Math.sqrt(vx*vx+vy*vy+vz*vz);\r\n        vx *= rl;\r\n        vy *= rl;\r\n        vz *= rl;\r\n    \r\n        let e = this.elements;\r\n        e[0] = ux;\r\n        e[1] = uy;\r\n        e[2] = uz;       \r\n    \r\n        e[3] = vx;\r\n        e[4] = vy;\r\n        e[5] = vz;        \r\n    \r\n        e[6] = nx;\r\n        e[7] = ny;\r\n        e[8] = nz;        \r\n    }\r\n\r\n   \r\n\r\n    /**\r\n     * Calculate the inverse matrix of source matrix, and set to this.\r\n     * @param {Matrix3} source The source matrix.\r\n     * @returns this\r\n     */\r\n    setInverseOf(source){        \r\n        let s = source.elements;\r\n        let d = this.elements;\r\n        let inv = new Float32Array(9);\r\n\r\n        //使用标准伴随阵法计算逆矩阵：\r\n        //标准伴随阵 = 方阵的代数余子式组成的矩阵的转置矩阵\r\n        //逆矩阵 = 标准伴随阵/方阵的行列式\r\n\r\n        //计算代数余子式并转置后放入inv矩阵中（先计算第一列的代数余子式，因为计算det要用）\r\n        inv[0] = s[4]*s[8] - s[5]*s[7];  \r\n        inv[3] = -(s[3]*s[8] - s[5]*s[6]);\r\n        inv[6] = s[3]*s[7] - s[4]*s[6];        \r\n        \r\n        //计算行列式，选择方阵的第一列，对该列中的三个元素S[0],s[1],s[2]分别乘以对应的代数余子式，然后相加\r\n        let det = s[0]*inv[0] + s[1]*inv[3] + s[2]*inv[6];\r\n        //注：选择任意一行，例如第一行，也是可以的        \r\n        \r\n        if(det===0){\r\n            return this;\r\n        }\r\n\r\n        //继续计算其他列的代数余子式\r\n        inv[1] = -(s[1]*s[8] - s[2]*s[7]);\r\n        inv[4] = s[0]*s[8] - s[2]*s[6];\r\n        inv[7] = -(s[0]*s[7] - s[1]*s[6]);\r\n\r\n        inv[2] = s[1]*s[5] - s[2]*s[4];\r\n        inv[5] = -(s[0]*s[5] - s[2]*s[3]);\r\n        inv[8] = s[0]*s[4] - s[1]*s[3];\r\n\r\n\r\n        det = 1 / det;\r\n        for(let i=0; i<9; ++i){\r\n            d[i] = inv[i] * det;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Invert this matrix\r\n     * @returns this\r\n     */\r\n    invert(){\r\n        return this.setInverseOf(this);\r\n    }\r\n\r\n    /**\r\n     * Transpose this matrix.\r\n     * @returns this\r\n     */\r\n    transpose(){\r\n        let e = this.elements;\r\n\r\n        //转置3x3矩阵，分别交换 1,3; 2,6; 5,7\r\n        let t;\r\n        t = e[1]; e[1] = e[3]; e[3] = t;\r\n        t = e[2]; e[2] = e[6]; e[6] = t;\r\n        t = e[5]; e[5] = e[7]; e[7] = t;                \r\n\r\n        return this;\r\n    }\r\n\r\n    static multiply(m1,m2,dst){\r\n        let i, e, a, b, ai0, ai1, ai2;\r\n  \r\n        // Calculate e = a * b\r\n        e = dst.elements;\r\n        a = m1.elements;\r\n        b = m2.elements;\r\n        \r\n        // If e equals b, copy b to temporary matrix.\r\n        if (e === b) {\r\n            b = new Float32Array(9);\r\n            for (i = 0; i < 9; ++i) {\r\n                b[i] = e[i];\r\n            }\r\n        }\r\n\r\n        for (i = 0; i < 3; i++) {\r\n            ai0=a[i];  ai1=a[i+3];  ai2=a[i+6];\r\n            e[i]    = ai0 * b[0]  + ai1 * b[1]  + ai2 * b[2];\r\n            e[i+3]  = ai0 * b[3]  + ai1 * b[4]  + ai2 * b[5];\r\n            e[i+6]  = ai0 * b[6]  + ai1 * b[7]  + ai2 * b[8];\r\n        }               \r\n        \r\n        return dst;\r\n    }\r\n}\r\n\r\nexport { Matrix3 };","import { math } from \"./math\";\r\nimport { Matrix4 } from \"./matrix4\";\r\nimport { Matrix3 } from \"./matrix3\";\r\nimport { Vector3 } from \"./vector3\";\r\n\r\nlet _tmpMatrix3 = new Matrix3();\r\n\r\nclass Quaternion {\r\n    constructor(x = 0, y = 0, z = 0, w = 1) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    /**\r\n     * Return a clone of this quaternion.\r\n     */\r\n    clone() {\r\n        return new Quaternion(this.x, this.y, this.z, this.w);\r\n    }\r\n\r\n    /**\r\n     * Set the x,y,z,w of this quaternion.\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {Number} z \r\n     * @param {Number} w \r\n     */\r\n    set(x, y, z, w) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Copy the x,y,z,w from rhs to this quaternion.\r\n     * @param {Quaternion} rhs \r\n     */\r\n    copyFrom(rhs) {\r\n        this.x = rhs.x;\r\n        this.y = rhs.y;\r\n        this.z = rhs.z;\r\n        this.w = rhs.w;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Make this quaternion identity.\r\n     */\r\n    identity() {\r\n        this.x = 0.0;\r\n        this.y = 0.0;\r\n        this.z = 0.0;\r\n        this.w = 1.0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Check if the quaternion rhs is equal to this quaternion.\r\n     * @param {Quaternion} rhs \r\n     */\r\n    equals(rhs) {\r\n        let eps = math.Epsilon;\r\n        return (this.x > rhs.x - eps && this.x < rhs.x + eps &&\r\n            this.y > rhs.y - eps && this.y < rhs.y + eps &&\r\n            this.z > rhs.z - eps && this.z < rhs.z + eps &&\r\n            this.w > rhs.w - eps && this.w < rhs.w + eps);\r\n    }\r\n\r\n    setFromAxisAngle(axis, angle) {\r\n        let halfAngle = math.degToRad(angle * 0.5);\r\n        let s = Math.sin(halfAngle);\r\n        return this.set(s * axis.x, s * axis.y, s * axis.z, Math.cos(halfAngle));\r\n    }\r\n\r\n    /**\r\n     * Sets the euler angle representation of the rotation.\r\n     * @param {Vector3} eulerAngles order is ZXY \r\n     */\r\n    setFromEulerAngles(eulerAngles) {\r\n        let ex = math.degToRad(eulerAngles.x * 0.5);\r\n        let ey = math.degToRad(eulerAngles.y * 0.5);\r\n        let ez = math.degToRad(eulerAngles.z * 0.5);\r\n\r\n        let cx = Math.cos(ex);\r\n        let sx = Math.sin(ex);\r\n        let cy = Math.cos(ey);\r\n        let sy = Math.sin(ey);\r\n        let cz = Math.cos(ez);\r\n        let sz = Math.sin(ez);\r\n\r\n        let qx = new Quaternion(sx, 0.0, 0.0, cx);\r\n        let qy = new Quaternion(0.0, sy, 0.0, cy);\r\n        let qz = new Quaternion(0.0, 0.0, sz, cz);\r\n\r\n        // q = (qy * qx) * qz        \r\n        Quaternion.multiply(qy, qx, this);\r\n        Quaternion.multiply(this, qz, this);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the quaternion from a 3X3 rotation matrix.\r\n     * @param {Matrix3} matrix3 \r\n     */\r\n    setFromRotationMatrix(matrix3) {\r\n        let e = matrix3.elements;\r\n        let m00 = e[0]; let m01 = e[3]; let m02 = e[6];\r\n        let m10 = e[1]; let m11 = e[4]; let m12 = e[7];\r\n        let m20 = e[2]; let m21 = e[5]; let m22 = e[8];\r\n\r\n        let trace = m00 + m11 + m22;\r\n        if (trace > 0) {\r\n            let s = 0.5 / Math.sqrt(trace + 1.0);\r\n\r\n            this.w = 0.25 / s;\r\n            this.x = (m21 - m12) * s;\r\n            this.y = (m02 - m20) * s;\r\n            this.z = (m10 - m01) * s;\r\n\r\n        } else if ((m00 > m11) && (m00 > m22)) {\r\n            let s = 2.0 * Math.sqrt(1.0 + m00 - m11 - m22);\r\n\r\n            this.w = (m21 - m12) / s;\r\n            this.x = 0.25 * s;\r\n            this.y = (m01 + m10) / s;\r\n            this.z = (m02 + m20) / s;\r\n\r\n        } else if (m11 > m22) {\r\n            let s = 2.0 * Math.sqrt(1.0 + m11 - m00 - m22);\r\n\r\n            this.w = (m02 - m20) / s;\r\n            this.x = (m01 + m10) / s;\r\n            this.y = 0.25 * s;\r\n            this.z = (m12 + m21) / s;\r\n\r\n        } else {\r\n            let s = 2.0 * Math.sqrt(1.0 + m22 - m00 - m11);\r\n\r\n            this.w = (m10 - m01) / s;\r\n            this.x = (m02 + m20) / s;\r\n            this.y = (m12 + m21) / s;\r\n            this.z = 0.25 * s;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Create a rotation which rotates from fromDir to toDir.\r\n     * @param {Vector3} fromDir \r\n     * @param {Vector3} toDir \r\n     */\r\n    setFromToRotation(fromDir, toDir) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Create a rotation which looks in forward and the up direction is upwards.\r\n     * @param {Vector3} eye The eye position.\r\n     * @param {Vector3} target The target position to look in.\r\n     * @param {Vector3} upwards The up direction.\r\n     */\r\n    setLookRotation(eye, target, upwards) {\r\n        _tmpMatrix3.setLookAt(eye.x, eye.y, eye.z, target.x, target.y, target.z, upwards.x, upwards.y, upwards.z);\r\n        this.setFromRotationMatrix(_tmpMatrix3);\r\n        this.normalize();\r\n    }\r\n\r\n    /**\r\n     * Normalize this quaternion.\r\n     */\r\n    normalize() {\r\n        let mag = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n        if (mag > 0.0) {\r\n            let g = 1.0 / mag;\r\n            this.x *= g;\r\n            this.y *= g;\r\n            this.z *= g;\r\n            this.w *= g;\r\n        } else {\r\n            this.identity();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Converts a rotation to angle-axis representation. (angeles in degrees)\r\n     * @returns { angle:Number, axis:[x,y,z]}\r\n     */\r\n    toAngleAxis() {\r\n\r\n    }\r\n\r\n    invert(){\r\n        this.x *=-1;\r\n        this.y *=-1;\r\n        this.z *=-1;         \r\n    }\r\n\r\n    setInverseOf(source){ \r\n        this.x = -source.x;\r\n        this.y = -source.y;\r\n        this.z = -source.z;\r\n        this.w = source.w;\r\n    }\r\n\r\n    /**\r\n     * Create a rotation which rotates angle degrees around axis.\r\n     * @param {Vector3} axis The rotation axis.\r\n     * @param {Number} angle Rotation angle in degrees.\r\n     * @returns {Quaternion} The rotation quaternion.\r\n     */\r\n    static axisAngle(axis, angle) {\r\n        let halfAngle = math.degToRad(angle * 0.5);\r\n        let s = Math.sin(halfAngle);\r\n        return new Quaternion(s * axis.x, s * axis.y, s * axis.z, Math.cos(halfAngle));\r\n    }\r\n\r\n    /**\r\n     * Returns a rotation that rotates z degrees around the z axis,\r\n     * x degrees around the x axis, and y degrees around the y axis; applied in that order.\r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {Number} z \r\n     * @returns {Quaternion} The rotation quaternion.\r\n     */\r\n    static euler(x, y, z) {\r\n        let ex = math.degToRad(x * 0.5);\r\n        let ey = math.degToRad(y * 0.5);\r\n        let ez = math.degToRad(z * 0.5);\r\n\r\n        let cx = Math.cos(ex);\r\n        let sx = Math.sin(ex);\r\n        let cy = Math.cos(ey);\r\n        let sy = Math.sin(ey);\r\n        let cz = Math.cos(ez);\r\n        let sz = Math.sin(ez);\r\n\r\n        let qx = new Quaternion(sx, 0.0, 0.0, cx);\r\n        let qy = new Quaternion(0.0, sy, 0.0, cy);\r\n        let qz = new Quaternion(0.0, 0.0, sz, cz);\r\n\r\n        // q = (qy * qx) * qz    \r\n        let q = new Quaternion();\r\n        Quaternion.multiply(qy, qx, q);\r\n        Quaternion.multiply(q, qz, q);\r\n        return q;\r\n    }\r\n\r\n    /**\r\n     * Create a rotation which rotates from fromDir to toDir.\r\n     * @param {Vector3} fromDir \r\n     * @param {Vector3} toDir \r\n     * @returns {Quaternion} The rotation quaternion.\r\n     */\r\n    static fromToRotation(fromDir, toDir) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Create a rotation which looks in forward and the up direction is upwards.\r\n     * @param {Vector3} forward The direction to look in.\r\n     * @param {Vector3} upwards The up direction.\r\n     * @returns {Quaternion} The rotation quaternion. \r\n     *  Returns identity if forward or upwards magnitude is zero or forward and upwards are colinear.\r\n     */\r\n    static lookRotation(forward, upwards) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Rotates a rotation from towards to.\r\n     * The from quaternion is rotated towards to by an angular step of maxDegreesDelta.\r\n     * Negative values of maxDegreesDelta will move away from to until the rotation is exactlly the opposite direction.\r\n     * @param {Quaternion} from \r\n     * @param {Quaternion} to \r\n     * @param {Number} maxDegreesDelta \r\n     * @returns The rotatoin quaternion.\r\n     */\r\n    static rotateTowards(from, to, maxDegreesDelta) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Returns the conjugate of q.\r\n     * @param {Quaternion} q \r\n     */\r\n    static conjugate(q) {\r\n        return new Quaternion(-q.x, -q.y, -q.z, q.w);\r\n    }\r\n\r\n    /**\r\n     * Returns the inverse of q.\r\n     * @param {Quaternion} q \r\n     */\r\n    static inverse(q) {\r\n        return Quaternion.conjugate(q);\r\n    }\r\n\r\n    /**\r\n     * Returns the angle in degrees between two quaternion qa & qb.\r\n     * @param {Quaternion} qa \r\n     * @param {Quaternion} ab\r\n     * @returns {Number} The angle in degrees.\r\n     */\r\n    static angleBetween(qa, ab) {\r\n\r\n    }\r\n\r\n    /**\r\n     * The dot product between two quaternions.\r\n     * @param {Quaternion} qa \r\n     * @param {Quaternion} qb \r\n     * @returns {Number} The dot product.\r\n     */\r\n    static dot(qa, qb) {\r\n        return qa.x * qb.x + qa.y * qb.y + qa.z * qb.z + qa.w * qb.w;\r\n    }\r\n\r\n    /**\r\n     * Multiply the quaternion qa and qb.\r\n     * @param {Quaternion} qa \r\n     * @param {Quaternion} qb \r\n     * @param {Quaternion} dst The result set to dst.\r\n     */\r\n    static multiply(qa, qb, dst) {\r\n        dst.set(\r\n            qa.w * qb.x + qa.x * qb.w + qa.y * qb.z - qa.z * qb.y,\r\n            qa.w * qb.y + qa.y * qb.w + qa.z * qb.x - qa.x * qb.z,\r\n            qa.w * qb.z + qa.z * qb.w + qa.x * qb.y - qa.y * qb.x,\r\n            qa.w * qb.w - qa.x * qb.x - qa.y * qb.y - qa.z * qb.z\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Rotate the vector by quaternion.\r\n     * @param {Quaternion} q\r\n     * @param {Vector3} v \r\n     * @param {Vector3} dst\r\n     */\r\n    static rotateVector(q, v, dst) {\r\n        // dst = q * v * inv_q\r\n\r\n        // t = q * v\r\n        let tx = q.w * v.x + q.y * v.z - q.z * v.y;\r\n        let ty = q.w * v.y + q.z * v.x - q.x * v.z;\r\n        let tz = q.w * v.z + q.x * v.y - q.y * v.x;\r\n        let tw = -q.x * v.x - q.y * v.y - q.z * v.z;\r\n\r\n        //  dst = t * inv_q\r\n        dst.x = tw * -q.x + tx * q.w + ty * -q.z - tz * -q.y;\r\n        dst.y = tw * -q.y + ty * q.w + tz * -q.x - tx * -q.z;\r\n        dst.z = tw * -q.z + tz * q.w + tx * -q.y - ty * -q.x;\r\n        return dst;\r\n    }\r\n\r\n    /**\r\n     * Convert quaternion to rotatoin matrix.\r\n     * @param {Matrix4} matrix The rotation matrix.\r\n     */\r\n    static toMatrix4(q, matrix) {\r\n        let x = q.x * 2.0;\r\n        let y = q.y * 2.0;\r\n        let z = q.z * 2.0;\r\n        let xx = q.x * x;\r\n        let yy = q.y * y;\r\n        let zz = q.z * z;\r\n        let xy = q.x * y;\r\n        let xz = q.x * z;\r\n        let yz = q.y * z;\r\n        let wx = q.w * x;\r\n        let wy = q.w * y;\r\n        let wz = q.w * z;\r\n\r\n        let e = matrix.elements;\r\n        e[0] = 1.0 - (yy + zz);\r\n        e[1] = xy + wz;\r\n        e[2] = xz - wy;\r\n        e[3] = 0.0;\r\n\r\n        e[4] = xy - wz;\r\n        e[5] = 1.0 - (xx + zz);\r\n        e[6] = yz + wx;\r\n        e[7] = 0.0;\r\n\r\n        e[8] = xz + wy;\r\n        e[9] = yz - wx;\r\n        e[10] = 1.0 - (xx + yy);\r\n        e[11] = 0.0;\r\n\r\n        e[12] = 0.0;\r\n        e[13] = 0.0;\r\n        e[14] = 0.0;\r\n        e[15] = 1.0;\r\n    }\r\n\r\n    /**\r\n     * Interpolates between qa and qb by t and normalizes the result afterwards.\r\n     * This is faster then slerp but looks worse if the rotations are far apart.\r\n     * @param {Quaternion} qa \r\n     * @param {Quaternion} qb \r\n     * @param {Number} t The interpolation factor.\r\n     * @returns The result quaternion.\r\n     */\r\n    static lerp(qa, qb, t) {\r\n        let result = new Quaternion();\r\n        // If dot < 0, qa and qb are more than 360 degrees apart.\r\n        // The quaternions are 720 degrees of freedom, so negative all components when lerping.\r\n        if (Quaternion.dot(qa, qb) < 0) {\r\n            result.set(qa.x + t * (-qb.x - qa.x),\r\n                qa.y + t * (-qb.y - qa.y),\r\n                qa.z + t * (-qb.z - qa.z),\r\n                qa.w + t * (-qb.w - qa.w));\r\n        } else {\r\n            result.set(qa.x + t * (qb.x - qa.x),\r\n                qa.y + t * (qb.y - qa.y),\r\n                qa.z + t * (qb.z - qa.z),\r\n                qa.w + t * (qb.w - qa.w));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Spherically interpolates between qa and qb by t.\r\n     * Use this to create a rotation which smoothly interpolates between qa to qb.\r\n     * If the value of t is close to 0, the output will be close to qa, if it is close to 1, the output will be close to qb.\r\n     * @param {Quaternion} qa \r\n     * @param {Quaternion} qb \r\n     * @param {Number} t The interpolation factor.\r\n     * @returns The result quaternion.\r\n     */\r\n    static slerp(qa, qb, t) {\r\n        let dot = Quaternion.dot(qa, qb);\r\n        let result = new Quaternion();\r\n\r\n        if (dot < 0.0) {\r\n            dot = -dot;\r\n            result.set(-qb.x, -qb.y, -qb.z, -qb.w);\r\n        } else {\r\n            result.copyFrom(qb);\r\n        }\r\n\r\n        let scale0 = 0;\r\n        let scale1 = 0;\r\n\r\n        if (dot < 0.95) {\r\n            let angle = Math.acos(dot);\r\n            let sin_div = 1.0 / Math.sin(angle);\r\n            scale1 = Math.sin(angle * t) * sin_div;\r\n            scale0 = Math.sin(angle * (1.0 - t)) * sin_div;\r\n        } else {\r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n\r\n        result.set(qa.x * scale0 + result.x * scale1,\r\n            qa.y * scale0 + result.y * scale1,\r\n            qa.z * scale0 + result.z * scale1,\r\n            qa.w * scale0 + result.w * scale1);\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * The identity rotation.\r\n */\r\nQuaternion.Identity = new Quaternion();\r\n\r\nexport { Quaternion };","import { gl } from \"./gl\";\r\n\r\nclass UniformInfo{\r\n    constructor(name, location, type, size, isArray){\r\n        this.name = name;\r\n        this.location = location; //WebGLUniformLocation\r\n        this.type = type;\r\n        this.size = size;   \r\n        this.isArray = isArray;     \r\n    }\r\n}\r\n\r\nclass Shader{\r\n    \r\n    constructor(){          \r\n        this.program = null;   \r\n        this._semanticToAttribName = {}; // {[semantic:string]:string}\r\n        this._attributes = {}; // {[name:string]:number}\r\n        this._uniforms = {};  // {[name:string]:WebGLUniformLocation}\r\n    }\r\n\r\n    mapAttributeSemantic(semantic, attribName){\r\n        this._semanticToAttribName[semantic] = attribName;\r\n    }\r\n\r\n    //set the semantic to attribute map from a list of {'semantic':semanticName, 'name':attributeName}\r\n    setAttributesMap(attributesMap){\r\n        for(let attr of attributesMap){\r\n            let semantic = attr['semantic'];\r\n            let name = attr['name'];\r\n            this.mapAttributeSemantic(semantic, name);\r\n        }\r\n    }\r\n\r\n    create(vshader, fshader){\r\n        let vertexShader = this.loadShader(gl.VERTEX_SHADER, vshader);\r\n        let fragmentShader = this.loadShader(gl.FRAGMENT_SHADER, fshader);\r\n        if (!vertexShader || !fragmentShader) {\r\n            return false;\r\n        }\r\n\r\n        // Create a program object\r\n        this.program = gl.createProgram();\r\n        if (!this.program) {\r\n            return false;\r\n        }\r\n\r\n        // Attach the shader objects\r\n        gl.attachShader(this.program, vertexShader);\r\n        gl.attachShader(this.program, fragmentShader);\r\n\r\n        // Link the program object\r\n        gl.linkProgram(this.program);\r\n\r\n        // Check the result of linking\r\n        let linked = gl.getProgramParameter(this.program, gl.LINK_STATUS);\r\n        if (!linked) {\r\n            let error = gl.getProgramInfoLog(this.program);\r\n            console.log('Failed to link program: ' + error);\r\n            gl.deleteProgram(this.program);\r\n            gl.deleteShader(fragmentShader);\r\n            gl.deleteShader(vertexShader);\r\n            this.program = null;    \r\n            return false;        \r\n        }\r\n\r\n        gl.deleteShader(fragmentShader);\r\n        gl.deleteShader(vertexShader);\r\n\r\n        this.findoutAttributes();\r\n        this.findoutUniforms();\r\n\r\n        return true;\r\n    }\r\n\r\n    destroy(){\r\n        gl.deleteProgram(this.program);\r\n        this.program = null;\r\n    }\r\n\r\n    loadShader(type, source){\r\n        let shader = gl.createShader(type);\r\n        if (shader == null) {\r\n            console.log('unable to create shader');\r\n            return null;\r\n        }\r\n\r\n        // Set the shader program\r\n        gl.shaderSource(shader, source);\r\n\r\n         // Compile the shader\r\n        gl.compileShader(shader);\r\n\r\n        // Check the result of compilation\r\n        let compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n        if (!compiled) {\r\n            let error = gl.getShaderInfoLog(shader);\r\n            console.error('Failed to compile shader: ' + error);\r\n            console.log('---------shader source----------');\r\n            console.log(source);\r\n            gl.deleteShader(shader);\r\n            return null;\r\n        }\r\n\r\n        return shader;\r\n    }\r\n\r\n    findoutAttributes(){\r\n        let attributeCount = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\r\n        for(let i=0; i<attributeCount; ++i){\r\n            let info = gl.getActiveAttrib(this.program, i);\r\n            if(!info){\r\n                break;\r\n            }\r\n\r\n            this._attributes[info.name] = gl.getAttribLocation(this.program, info.name);\r\n        }\r\n\r\n        console.log('attributes',this._attributes);\r\n    }\r\n\r\n    findoutUniforms(){\r\n        let uniformCount = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\r\n        for(let i=0; i<uniformCount; ++i){\r\n            let info = gl.getActiveUniform(this.program, i);\r\n            if(!info){\r\n                break;\r\n            }\r\n\r\n            let location = gl.getUniformLocation(this.program, info.name);\r\n            let isArray = info.size > 1 && info.name.substr(-3) === '[0]';\r\n            let uniformInfo = new UniformInfo(info.name, location, info.type, info.size, isArray);\r\n            this._uniforms[info.name] = uniformInfo;\r\n        }\r\n\r\n        console.log('uniforms',this._uniforms);\r\n    }\r\n\r\n    hasUniform(name){\r\n        return this._uniforms[name]!=null;\r\n    }\r\n\r\n    setUniformSafe(name, value){\r\n        if(this.hasUniform(name)){\r\n            this.setUniform(name, value);\r\n        }   \r\n    }\r\n\r\n    setUniform(name, value){\r\n        let info = this._uniforms[name];\r\n        if(!info){\r\n            console.error('can not find uniform named '+name);\r\n            return;\r\n        }\r\n        switch(info.type){\r\n            case gl.INT:{\r\n                if(info.isArray){\r\n                    gl.uniform1iv(info.location, value);\r\n                } else {\r\n                    gl.uniform1i(info.location, value);\r\n                }\r\n                break;\r\n            }\r\n            case gl.FLOAT:{\r\n                if(info.isArray){\r\n                    gl.uniform1fv(info.location, value);\r\n                } else {\r\n                    gl.uniform1f(info.location, value);\r\n                }\r\n                break;\r\n            }\r\n            case gl.FLOAT_VEC2:{\r\n                gl.uniform2fv(info.location, value);\r\n                break;\r\n            }\r\n            case gl.FLOAT_VEC3:{\r\n                gl.uniform3fv(info.location, value);\r\n                break;\r\n            }\r\n            case gl.FLOAT_VEC4:{\r\n                gl.uniform4fv(info.location, value);\r\n                break;\r\n            }\r\n            case gl.FLOAT_MAT3:{\r\n                gl.uniformMatrix3fv(info.location, false, value);\r\n                break;\r\n            }\r\n            case gl.FLOAT_MAT4:{\r\n                gl.uniformMatrix4fv(info.location, false, value);\r\n                break;\r\n            }\r\n            case gl.SAMPLER_2D:{\r\n                gl.uniform1i(info.location, value);\r\n                break;\r\n            }\r\n            default:{\r\n                console.error('uniform type not support', info.type)\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    getAttributeLocation(semantic){\r\n        let name = this._semanticToAttribName[semantic];\r\n        if(name){\r\n            let location = this._attributes[name];\r\n            return location;\r\n        } else {\r\n            //console.warn('Shader: can not find attribute for semantic '+semantic);\r\n            return -1;\r\n        }\r\n    }    \r\n\r\n    use(){\r\n        if(this.program){\r\n            gl.useProgram(this.program);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport { Shader };\r\n","\r\nlet VertexSemantic = {    \r\n    POSITION : 'position',        \r\n    NORMAL : 'normal',\r\n    TANGENT : 'tangent',\r\n    COLOR : 'color',\r\n    UV0 : 'uv0',\r\n    UV1 : 'uv1',  \r\n    UV2 : 'uv2', \r\n    UV3 : 'uv3'\r\n}\r\n\r\n//mini3d顶点使用float32类型\r\n\r\nclass VertexFormat{\r\n    constructor(){\r\n        this.attribs = [];\r\n        this.attribSizeMap = {};\r\n        this._vertexSize = 0;\r\n    }\r\n\r\n    addAttrib(attribSemantic, size){       \r\n        this.attribs.push(attribSemantic); \r\n        this.attribSizeMap[attribSemantic] = size;        \r\n    }\r\n\r\n    getVertexSize(){\r\n        if(this._vertexSize === 0){          \r\n            for(let i=0; i<this.attribs.length; ++i){\r\n                let semantic = this.attribs[i];\r\n                this._vertexSize += this.attribSizeMap[semantic];\r\n            }\r\n        }        \r\n        return this._vertexSize;\r\n    }\r\n}\r\n\r\nexport { VertexFormat, VertexSemantic};","import { gl } from \"./gl\";\r\nimport { VertexSemantic } from \"./vertexFormat\";\r\n\r\nclass VertexAttribInfo{\r\n    constructor(attribSemantic, attribSize){\r\n        this.semantic = attribSemantic;\r\n        this.size = attribSize;\r\n        this.offset = 0;\r\n        this.data = null;\r\n    }\r\n}\r\n\r\nclass VertexBuffer{\r\n    constructor(vertexFormat){\r\n        this._vertexCount = 0;\r\n        this._vertexStride = 0; // vertex data size in byte\r\n        this._vertexFormat = vertexFormat;\r\n        this._attribsInfo = {};\r\n        this._bufferData = null;\r\n\r\n        this.BYTES_PER_ELEMENT = 4; // for Float32Array\r\n\r\n        let attribNum = this._vertexFormat.attribs.length;\r\n        for(let i=0; i<attribNum; ++i){\r\n            let semantic = this._vertexFormat.attribs[i];\r\n            let size = this._vertexFormat.attribSizeMap[semantic];\r\n            if(size==null){\r\n                console.error('VertexBuffer: bad semantic');\r\n            } else {\r\n                let info = new VertexAttribInfo(semantic, size);\r\n                this._attribsInfo[semantic] = info;\r\n            }            \r\n        }\r\n\r\n        this._vbo = gl.createBuffer();\r\n    }\r\n\r\n    setData(semantic, data){\r\n        this._attribsInfo[semantic].data = data;\r\n    }\r\n\r\n    get vbo(){\r\n        return this._vbo;\r\n    }\r\n\r\n    get vertexCount(){\r\n        return this._vertexCount;\r\n    }\r\n\r\n    get vertexStride(){\r\n        return this._vertexStride;\r\n    }\r\n\r\n    destroy(){\r\n        gl.deleteBuffer(this._vbo);  \r\n        this._vbo = 0;      \r\n    }\r\n\r\n    //combine vertex attribute datas to a data array\r\n    _compile(){\r\n        let positionInfo = this._attribsInfo[VertexSemantic.POSITION];\r\n        if(positionInfo == null){\r\n            console.error('VertexBuffer: no attrib position');\r\n            return;\r\n        }\r\n        if(positionInfo.data == null || positionInfo.data.length===0){\r\n            console.error('VertexBuffer: position data is empty');\r\n            return;\r\n        }\r\n\r\n        this._vertexCount = positionInfo.data.length / positionInfo.size;  \r\n        this._vertexStride = this._vertexFormat.getVertexSize() * this.BYTES_PER_ELEMENT; \r\n        \r\n        this._bufferData = [];\r\n        for(let i=0; i<this._vertexCount; ++i){\r\n            for(let semantic of this._vertexFormat.attribs){\r\n                let info = this._attribsInfo[semantic];\r\n                if(info==null || info.data==null){\r\n                    console.error('VertexBuffer: bad semantic '+semantic);\r\n                    continue;\r\n                }\r\n                for(let k=0; k<info.size; ++k){\r\n                    let value = info.data[ i * info.size + k ];\r\n                    if(value===undefined){\r\n                        console.error('VertexBuffer: missing value for '+semantic);\r\n                    }\r\n                    this._bufferData.push(value);\r\n                }\r\n            }            \r\n        }\r\n\r\n        //compute offset for attrib info, and free info.data\r\n        let offset = 0;\r\n        for(let semantic of this._vertexFormat.attribs){\r\n            let info = this._attribsInfo[semantic];\r\n            info.offset = offset;\r\n            info.data = null;\r\n            offset += info.size * this.BYTES_PER_ELEMENT;\r\n        }\r\n    }\r\n\r\n    //upload data to webGL, add free buffer data\r\n    upload(){\r\n        this._compile();\r\n\r\n        let buffer = new Float32Array(this._bufferData);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vbo);\r\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n                  \r\n        this._bufferData = null;\r\n    }\r\n\r\n    bindAttrib(shader){\r\n        for(let semantic of this._vertexFormat.attribs){\r\n            let info = this._attribsInfo[semantic];\r\n            \r\n            let location = shader.getAttributeLocation(semantic);\r\n            if(location>=0){\r\n                gl.vertexAttribPointer(location, \r\n                    info.size, \r\n                    gl.FLOAT, //type \r\n                    false, //normalized, \r\n                    this._vertexStride, \r\n                    info.offset);\r\n                gl.enableVertexAttribArray(location);\r\n            }                          \r\n        }\r\n    }\r\n\r\n    unbindAttrib(shader){\r\n        for(let semantic of this._vertexFormat.attribs){            \r\n            let location = shader.getAttributeLocation(semantic);\r\n            if(location>=0){\r\n                gl.disableVertexAttribArray(location);\r\n            }                          \r\n        }        \r\n    }\r\n}\r\n\r\nexport { VertexBuffer };","import { gl } from \"./gl\";\r\n\r\nclass IndexBuffer{\r\n    constructor(wireframe=false){\r\n        this._wireframe = wireframe;\r\n        this._indexCount = 0;\r\n        this._mode = this._wireframe? gl.LINES : gl.TRIANGLES;\r\n        this._type = gl.UNSIGNED_SHORT;\r\n        this._vbo = gl.createBuffer();\r\n        this._bufferData = null;\r\n    }\r\n\r\n    setData(data){\r\n        if(this._wireframe){\r\n            this._bufferData = [];\r\n            let vcnt = data.length/3;\r\n            for(let i=0; i<vcnt; i++){\r\n                let a = data[i*3];\r\n                let b = data[i*3+1];\r\n                let c = data[i*3+2];\r\n                this._bufferData.push(a,b,b,c,c,a);\r\n            }\r\n        } else {\r\n            this._bufferData = data;\r\n        }\r\n    }\r\n\r\n    get vbo(){\r\n        return this._vbo;\r\n    }\r\n\r\n    get indexCount(){\r\n        return this._indexCount;\r\n    }\r\n\r\n    get mode(){\r\n        return this._mode;\r\n    }\r\n\r\n    get type(){\r\n        return this._type;\r\n    }\r\n\r\n    destroy(){\r\n        gl.deleteBuffer(this._vbo);  \r\n        this._vbo = 0;\r\n    }\r\n\r\n    upload(){\r\n        if(this._bufferData==null){\r\n            console.error(\"buffer data is null.\");\r\n            return;\r\n        }\r\n        let useByte = this._bufferData.length<=256;\r\n        let buffer = useByte ? new Uint8Array(this._bufferData) : new Uint16Array(this._bufferData);\r\n        this._type = useByte ? gl.UNSIGNED_BYTE : gl.UNSIGNED_SHORT;\r\n        \r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._vbo);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n\r\n        this._indexCount = buffer.length;\r\n        this._bufferData = null;\r\n    }\r\n}\r\n\r\nexport { IndexBuffer };","import { gl } from \"./gl\";\r\nimport { VertexBuffer } from \"./vertexBuffer\";\r\nimport { IndexBuffer } from \"./indexBuffer\";\r\n\r\nclass Mesh{    \r\n    constructor(vertexFormat, wireframe=false){        \r\n        this._vertexBuffer = new VertexBuffer(vertexFormat);\r\n        this._indexBuffer = null;\r\n        this._wireframe = wireframe;\r\n    }\r\n\r\n    setVertexData(semantic, data){\r\n        this._vertexBuffer.setData(semantic, data);        \r\n    }  \r\n    \r\n    setTriangles(data){\r\n        if(this._indexBuffer==null){\r\n            this._indexBuffer = new IndexBuffer(this._wireframe);            \r\n        }\r\n        this._indexBuffer.setData(data);\r\n    }\r\n\r\n    destroy(){\r\n        this._vertexBuffer.destroy();    \r\n    }      \r\n\r\n    upload(){        \r\n        this._vertexBuffer.upload();   \r\n        if(this._indexBuffer){\r\n            this._indexBuffer.upload();\r\n        }                            \r\n    }\r\n\r\n    render(shader){\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer.vbo);\r\n        \r\n        this._vertexBuffer.bindAttrib(shader);\r\n                  \r\n        if(this._indexBuffer){\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer.vbo);\r\n            gl.drawElements(this._indexBuffer.mode, this._indexBuffer.indexCount, this._indexBuffer.type, 0);\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n        } else {\r\n            gl.drawArrays(gl.TRIANGLES, 0, this._vertexBuffer.vertexCount);\r\n        }\r\n        \r\n        this._vertexBuffer.unbindAttrib(shader);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    }\r\n}\r\n\r\nexport { Mesh };\r\n","import { gl, glExt, glAbility, sysConfig } from \"./gl\";\r\n\r\nclass Texture2D {\r\n    constructor(){\r\n        this._id = gl.createTexture();\r\n        this._width = 2;\r\n        this._height = 2;\r\n\r\n        if (!this._id) {\r\n            console.error('Failed to create the texture object');            \r\n        }\r\n    }\r\n\r\n    destroy(){\r\n        gl.deleteTexture(this._id);\r\n        this._id = 0;\r\n    }\r\n\r\n    get width(){\r\n        return this._width;\r\n    }\r\n\r\n    get height(){\r\n        return this._height;\r\n    }\r\n\r\n    get texelSize(){\r\n        return [1.0/this._width, 1.0/this._height];\r\n    }\r\n\r\n    create(image, withAlpha=false){\r\n        this._width = image.width;\r\n        this._height = image.height;\r\n\r\n        // Bind the texture object to the target\r\n        gl.bindTexture(gl.TEXTURE_2D, this._id);\r\n        \r\n        // Set the texture parameters\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        \r\n        this.setClamp();\r\n        \r\n        // Set the texture image data\r\n        const level = 0;\r\n        let internalFormat = withAlpha ? gl.RGBA : gl.RGB;\r\n        let srcFormat = withAlpha ? gl.RGBA : gl.RGB;\r\n\r\n        //TODO:暂时不使用sRGB，因为还要区分是普通diffuse贴图还是mask, normal map等贴图，只有颜色相关的贴图需要使用sRGB\r\n        //实际上贴图是否使用sRGB需要根据贴图类型指定，暂时不设置，直接在shader里面处理贴图\r\n        // if(sysConfig.gammaCorrection){\r\n        //     if(glAbility.WebGL2){\r\n        //         internalFormat = withAlpha ? gl.SRGB8_ALPHA8 : gl.SRGB8;\r\n        //     } else if(glExt.sRGB){\r\n        //         internalFormat = withAlpha ? glExt.sRGB.SRGB_ALPHA_EXT : glExt.sRGB.SRGB_EXT;\r\n        //         srcFormat = withAlpha ? glExt.sRGB.SRGB_ALPHA_EXT : glExt.sRGB.SRGB_EXT;\r\n        //     }\r\n        // }\r\n        \r\n        const srcType = gl.UNSIGNED_BYTE;\r\n        gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n    }\r\n\r\n    createEmpty(width, height, withAlpha=false){\r\n        const level = 0;\r\n        const internalFormat = withAlpha ? gl.RGBA : gl.RGB;        \r\n        const border = 0;\r\n        const srcFormat = withAlpha ? gl.RGBA : gl.RGB;\r\n        const srcType = gl.UNSIGNED_BYTE;\r\n\r\n        this._width = width;\r\n        this._height = height;\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, this._id);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, null);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n        this.setClamp();\r\n    }\r\n\r\n    createDefault(){\r\n        const level = 0;\r\n        const internalFormat = gl.RGBA;  \r\n        let n = 8;\r\n        const width = n;\r\n        const height = n;    \r\n        const border = 0;\r\n        const srcFormat = gl.RGBA;\r\n        const srcType = gl.UNSIGNED_BYTE;\r\n        let colors = [];        \r\n        for(let i=0; i<n; ++i){\r\n            for(let j=0; j<n; ++j){\r\n                (i+j)%2==0 ? colors.push(255,255,255,255) : colors.push(0,0,0,255); //RGBA                \r\n            }\r\n        }\r\n        const pixelData = new Uint8Array(colors);\r\n\r\n        this._width = width;\r\n        this._height = height;\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, this._id);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixelData);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n    }\r\n\r\n    createDefaultBump(){\r\n        const level = 0;\r\n        const internalFormat = gl.RGB;  \r\n        let n = 4;\r\n        const width = n;\r\n        const height = n;    \r\n        const border = 0;\r\n        const srcFormat = gl.RGB;\r\n        const srcType = gl.UNSIGNED_BYTE;\r\n        let colors = [];        \r\n        for(let i=0; i<n; ++i){\r\n            for(let j=0; j<n; ++j){            \r\n                colors.push(128,128,255); //RGB                          \r\n            }\r\n        }\r\n        const pixelData = new Uint8Array(colors);\r\n\r\n        this._width = width;\r\n        this._height = height;\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, this._id);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixelData);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n    }\r\n\r\n    get id(){\r\n        return this._id;\r\n    }\r\n\r\n    bind(unit=0){\r\n        gl.activeTexture(gl.TEXTURE0 + unit);\r\n        gl.bindTexture(gl.TEXTURE_2D, this._id);\r\n    }\r\n\r\n    unbind(){\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n    }\r\n\r\n    setRepeat(){\r\n        gl.bindTexture(gl.TEXTURE_2D, this._id);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\r\n    }\r\n\r\n    setClamp(){\r\n        gl.bindTexture(gl.TEXTURE_2D, this._id);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    }\r\n}\r\n\r\nexport { Texture2D };","import { gl, canvas, glAbility } from \"./gl\";\r\nimport { Texture2D } from \"./texture\";\r\n\r\nclass RenderTexture{\r\n    constructor(width, height, fullScreen=false){\r\n        this._width = width;\r\n        this._height = height;\r\n        this.clampTextureSize();\r\n        this._fullScreen = fullScreen;\r\n        this._fbo = null;\r\n        this._texture2D = null;\r\n        this._depthBuffer = null;\r\n        this._init();\r\n    }\r\n\r\n    clampTextureSize(){\r\n        while(this._width>glAbility.MAX_TEXTURE_SIZE || this._height>glAbility.MAX_TEXTURE_SIZE){\r\n            this._width /= 2;\r\n            this._height /= 2;\r\n        }\r\n    }\r\n\r\n    get width(){\r\n        return this._width;\r\n    }\r\n\r\n    get height(){\r\n        return this._height;\r\n    }\r\n\r\n    get isFullScreen(){\r\n        return this._fullScreen;\r\n    }\r\n\r\n    get texture2D(){\r\n        return this._texture2D;\r\n    }\r\n\r\n    onScreenResize(width, height){\r\n        if(this._fullScreen){\r\n            this.destroy();\r\n            this._width = width;\r\n            this._height = height;\r\n            this.clampTextureSize();\r\n            this._init();\r\n        }\r\n    }\r\n\r\n    destroy(){\r\n        if(this._fbo){\r\n            gl.deleteFramebuffer(this._fbo);\r\n            this._fbo = null;\r\n        } \r\n        if(this._texture2D){\r\n            this._texture2D.destroy();\r\n            this._texture2D = null;\r\n        } \r\n        if(this._depthBuffer){\r\n            gl.deleteRenderbuffer(this._depthBuffer);  \r\n            this._depthBuffer = null;\r\n        } \r\n    }\r\n\r\n    _init(){\r\n        // Create FBO\r\n        this._fbo = gl.createFramebuffer();\r\n        if(!this._fbo){\r\n            console.error('Failed to create frame buffer object');\r\n            this.destroy();\r\n            return;\r\n        }\r\n\r\n        // Create a texture object and set its size and parameters\r\n        this._texture2D = new Texture2D();\r\n        if(!this._texture2D.id){\r\n            console.error('Failed to create texture object');\r\n            this.destroy();\r\n            return;\r\n        }\r\n        this._texture2D.createEmpty(this._width, this._height);\r\n\r\n        // Create a renderbuffer object and set its size and parameters\r\n        this._depthBuffer = gl.createRenderbuffer();\r\n        if(!this._depthBuffer){\r\n            console.error('Failed to create renderbuffer object');\r\n            this.destroy();\r\n            return;\r\n        }\r\n\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, this._depthBuffer);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this._width, this._height);\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n\r\n        // Attach the texture and the renderbuffer object to the FBO\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._fbo);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this._texture2D.id, 0);\r\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this._depthBuffer);\r\n\r\n        // Check if FBO is configured correctly\r\n        let e = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n        if(gl.FRAMEBUFFER_COMPLETE !== e){\r\n            console.error('Frame buffer object is incomplete: '+ e.toString());\r\n            this.destroy();\r\n            return;\r\n        }\r\n\r\n        // Unbind the buffer object\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);        \r\n    }\r\n\r\n    bind(){\r\n        if(!this._fbo || !this._texture2D || !this._depthBuffer){\r\n            return;\r\n        }\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._fbo);\r\n        gl.viewport(0, 0, this._width, this._height);\r\n    }\r\n\r\n    unbind(){\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.viewport(0, 0, canvas.width, canvas.height);\r\n    }\r\n}\r\n\r\nexport { RenderTexture };","class ImageAsset{\r\n    constructor(name, data){\r\n        this.name = name;\r\n        this.data = data;        \r\n    }\r\n\r\n    get width(){\r\n        return this.data.width;\r\n    }\r\n\r\n    get height(){\r\n        return this.data.height;\r\n    }\r\n}\r\n\r\nclass ImageLoader {\r\n    loadAsset(name, onComplete){\r\n        let image = new Image();\r\n        image.onload = function(){\r\n            let asset = new ImageAsset(name, image);\r\n            if(onComplete){\r\n                onComplete(asset);\r\n            }            \r\n        };\r\n        image.src = name;\r\n    }\r\n}\r\n\r\nexport { ImageAsset, ImageLoader };","class TextAsset{\r\n    constructor(name, data){\r\n        this.name = name;\r\n        this.data = data;        \r\n    }    \r\n}\r\n\r\nclass TextLoader {\r\n    loadAsset(name, onComplete){\r\n        let request = new XMLHttpRequest();\r\n        request.onreadystatechange = function(){\r\n            if(request.readyState === XMLHttpRequest.DONE && request.status !== 404){\r\n                let asset = new TextAsset(name, request.responseText);\r\n                if(onComplete){\r\n                    onComplete(asset);\r\n                }   \r\n            }\r\n        }       \r\n        request.open('GET', name, true);\r\n        request.send();\r\n    }\r\n}\r\n\r\nexport { TextAsset, TextLoader };","import { ImageLoader } from \"./imageAsset\";\r\nimport { TextLoader } from \"./textAsset\";\r\n\r\nlet AssetType = {\r\n    Text : 'text',\r\n    Image : 'image'    \r\n}\r\n\r\nclass AssetManager {\r\n    \r\n    constructor(){\r\n        this._loaders = {};\r\n        this._assets = {};\r\n\r\n        this.addLoader(AssetType.Image, new ImageLoader());\r\n        this.addLoader(AssetType.Text, new TextLoader());\r\n    }\r\n\r\n    addLoader(assetType, loader){\r\n        this._loaders[assetType] = loader;\r\n    }\r\n\r\n    loadAsset(name, type, onComplete){\r\n        if(this._assets[name]){\r\n            if(onComplete){\r\n                onComplete(this._assets[name]);\r\n            }\r\n            return;\r\n        }\r\n\r\n        let loader = this._loaders[type];\r\n        if(loader){\r\n            loader.loadAsset(name, function(asset){\r\n                this._assets[name] = asset;\r\n                if(onComplete){\r\n                    onComplete(asset);\r\n                }\r\n            }.bind(this));\r\n        } else {\r\n            console.error(\"missing loader for asset type \"+type);\r\n        }\r\n    }\r\n\r\n    getAsset(name){\r\n        return this._assets[name];        \r\n    }\r\n\r\n    //assetList: [[name,type]]\r\n    loadAssetList(assetList, onAllComplete){\r\n        let remainCount = assetList.length;\r\n        for(let listItem of assetList){\r\n            let name = listItem[0];\r\n            let type = listItem[1];\r\n            this.loadAsset(name, type, function(asset){\r\n                if(asset){\r\n                    remainCount--;\r\n                    if(remainCount===0 && onAllComplete){\r\n                        onAllComplete();\r\n                    }\r\n                } else {\r\n                    console.error('fail to load asset '+name);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n\r\nlet assetManager = new AssetManager();\r\n\r\nexport { AssetType, assetManager };","import { Texture2D } from \"./texture\";\r\nimport { assetManager } from \"../assets/assetManager\";\r\n\r\nclass SharedTexture{\r\n    constructor(texture){\r\n        this.texture = texture;\r\n        this.refCount = 1;\r\n    }\r\n}\r\n\r\n//TODO: LRU or LFU cache, if the GPU texture memory is out of some limit, remove from GPU and cache data in RAM\r\n\r\nclass TextureManager {\r\n    constructor(){\r\n        this._textures = {};\r\n    }\r\n\r\n    getTexture(texturePath){\r\n        if(this._textures[texturePath] == null){\r\n            let texture = new Texture2D();\r\n            texture.create(assetManager.getAsset(texturePath).data);\r\n            this._textures[texturePath] = new SharedTexture(texture);\r\n        } else {\r\n            this._textures[texturePath].refCount++;\r\n        }\r\n\r\n        return this._textures[texturePath].texture;\r\n    }\r\n\r\n    releaseTexture(texturePath){\r\n        if(this._textures[texturePath] == null){\r\n            console.error(\"releaseTexture: texture not found: \"+texturePath);            \r\n        } else {\r\n            this._textures[texturePath].refCount--;\r\n            if(this._textures[texturePath].refCount < 1){\r\n                this._textures[texturePath].texture.destroy();\r\n                this._textures[texturePath] = null;\r\n                delete this._textures[texturePath];\r\n            }\r\n        }\r\n    }\r\n\r\n    getDefaultTexture(){\r\n        if(this._defaultTexture==null){\r\n            this._defaultTexture = new Texture2D();\r\n            this._defaultTexture.createDefault();\r\n        }\r\n        return this._defaultTexture;\r\n    }\r\n\r\n    getDefaultBumpTexture(){\r\n        if(this._defaultBumpTexture==null){\r\n            this._defaultBumpTexture = new Texture2D();\r\n            this._defaultBumpTexture.createDefaultBump();\r\n        }\r\n        return this._defaultBumpTexture;\r\n    }\r\n\r\n}\r\n\r\nlet textureManager = new TextureManager();\r\n\r\nexport { textureManager };","import { Vector3 } from \"../math/vector3\";\r\n\r\n// 计算几何体的法线和切线\r\n// 输入的 triangels， positions, uvs都是js数组\r\n\r\nclass GeomertyHelper{\r\n    // normals ////////////\r\n    static calcMeshNormals(triangels, positions, normals){\r\n        let triangleCount = triangels.length/3;\r\n        let vertexNormals = [];\r\n        let t = 0;\r\n        for(let i=0; i<triangleCount; ++i){                \r\n            let idx0 = triangels[t];\r\n            let idx1 = triangels[t+1];\r\n            let idx2 = triangels[t+2];\r\n            t+=3;\r\n\r\n            let p0x = positions[idx0*3];\r\n            let p0y = positions[idx0*3+1];\r\n            let p0z = positions[idx0*3+2];\r\n\r\n            let p1x = positions[idx1*3];\r\n            let p1y = positions[idx1*3+1];\r\n            let p1z = positions[idx1*3+2];\r\n\r\n            let p2x = positions[idx2*3];\r\n            let p2y = positions[idx2*3+1];\r\n            let p2z = positions[idx2*3+2];\r\n\r\n            let p0 = new Vector3(p0x, p0y, p0z);\r\n            let p1 = new Vector3(p1x, p1y, p1z);\r\n            let p2 = new Vector3(p2x, p2y, p2z);\r\n\r\n            let faceN = GeomertyHelper._calcFaceNormal(p0, p1, p2);          \r\n            let faceArea = GeomertyHelper._calcFaceArea(p0, p1, p2);      \r\n\r\n            if(vertexNormals[idx0]==null){\r\n                vertexNormals[idx0] = new Vector3();\r\n            }\r\n            let angle = GeomertyHelper._calcAngle(new Vector3(p1x-p0x, p1y-p0y, p1z-p0z), new Vector3(p2x-p0x, p2y-p0y, p2z-p0z));                \r\n            vertexNormals[idx0].add(Vector3.scaleTo(faceN, angle, new Vector3().scale(faceArea)));\r\n\r\n            if(vertexNormals[idx1]==null){\r\n                vertexNormals[idx1] = new Vector3();\r\n            }\r\n            angle = GeomertyHelper._calcAngle(new Vector3(p2x-p1x, p2y-p1y, p2z-p1z), new Vector3(p0x-p1x, p0y-p1y, p0z-p1z));                \r\n            vertexNormals[idx1].add(Vector3.scaleTo(faceN, angle, new Vector3().scale(faceArea)));\r\n\r\n            if(vertexNormals[idx2]==null){\r\n                vertexNormals[idx2] = new Vector3();\r\n            }\r\n            angle = GeomertyHelper._calcAngle(new Vector3(p0x-p2x, p0y-p2y, p0z-p2z), new Vector3(p1x-p2x, p1y-p2y, p1z-p2z));                \r\n            vertexNormals[idx2].add(Vector3.scaleTo(faceN, angle, new Vector3().scale(faceArea)));\r\n        }\r\n\r\n        for(let i=0; i<vertexNormals.length; ++i){\r\n            let n = vertexNormals[i];                                \r\n            n.normalize();\r\n            normals.push(n.x, n.y, n.z);\r\n        }\r\n    }\r\n\r\n    static _calcFaceNormal(p0, p1, p2){\r\n        let v_10 = new Vector3(p0.x-p1.x, p0.y-p1.y, p0.z-p1.z);\r\n        let v_12 = new Vector3(p2.x-p1.x, p2.y-p1.y, p2.z-p1.z);\r\n        let normal = new Vector3();\r\n        Vector3.cross(v_12, v_10, normal);        \r\n        normal.normalize();\r\n        return normal;\r\n    }\r\n\r\n    static _calcFaceArea(p0, p1, p2){\r\n        let a = Vector3.distance(p0, p1);\r\n        let b = Vector3.distance(p1, p2);\r\n        let c = Vector3.distance(p0, p2);\r\n        let p = (a+b+c)/2;\r\n        return Math.sqrt(p*(p-a)*(p-b)*(p-c));\r\n    }\r\n\r\n    static _calcAngle(v0, v1){\r\n        v0.normalize();\r\n        v1.normalize();\r\n        return Math.acos(Vector3.dot(v0, v1));\r\n    }\r\n\r\n    // tangents ////////////\r\n    static calcMeshTangents(triangels, positions, uvs, tangents){\r\n        let triangleCount = triangels.length/3;\r\n        let vertexTangents = [];\r\n        let t = 0;\r\n        for(let i=0; i<triangleCount; ++i){                \r\n            let idx0 = triangels[t];\r\n            let idx1 = triangels[t+1];\r\n            let idx2 = triangels[t+2];\r\n            t+=3;\r\n\r\n            let p0x = positions[idx0*3];\r\n            let p0y = positions[idx0*3+1];\r\n            let p0z = positions[idx0*3+2];\r\n\r\n            let p1x = positions[idx1*3];\r\n            let p1y = positions[idx1*3+1];\r\n            let p1z = positions[idx1*3+2];\r\n\r\n            let p2x = positions[idx2*3];\r\n            let p2y = positions[idx2*3+1];\r\n            let p2z = positions[idx2*3+2];\r\n\r\n            let p0 = new Vector3(p0x, p0y, p0z);\r\n            let p1 = new Vector3(p1x, p1y, p1z);\r\n            let p2 = new Vector3(p2x, p2y, p2z);\r\n\r\n            let u0 = uvs[idx0*2];\r\n            let v0 = uvs[idx0*2+1];\r\n            let uv0 = new Vector3(u0, v0, 0);\r\n\r\n            let u1 = uvs[idx1*2];\r\n            let v1 = uvs[idx1*2+1];\r\n            let uv1 = new Vector3(u1, v1, 0);\r\n\r\n            let u2 = uvs[idx2*2];\r\n            let v2 = uvs[idx2*2+1];\r\n            let uv2 = new Vector3(u2, v2, 0);\r\n\r\n            let faceT = GeomertyHelper._calcFaceTangent(p0, p1, p2, uv0, uv1, uv2); \r\n\r\n            if(vertexTangents[idx0]==null){\r\n                vertexTangents[idx0] = new Vector3();\r\n            }              \r\n            vertexTangents[idx0].add(faceT);\r\n            vertexTangents[idx0].w = faceT.w; //hack w给顶点切线\r\n\r\n            if(vertexTangents[idx1]==null){\r\n                vertexTangents[idx1] = new Vector3();\r\n            }            \r\n            vertexTangents[idx1].add(faceT);\r\n            vertexTangents[idx1].w = faceT.w;\r\n\r\n            if(vertexTangents[idx2]==null){\r\n                vertexTangents[idx2] = new Vector3();\r\n            }\r\n            vertexTangents[idx2].add(faceT);\r\n            vertexTangents[idx2].w = faceT.w;\r\n        }\r\n\r\n        for(let i=0; i<vertexTangents.length; ++i){\r\n            let t = vertexTangents[i];                                \r\n            t.normalize();            \r\n            tangents.push(t.x, t.y, t.z, t.w);\r\n        }\r\n    }\r\n\r\n    static _calcFaceTangent(p0, p1, p2, uv0, uv1, uv2){\r\n        let edge1 = Vector3.sub(p1, p0, new Vector3());\r\n        let edge2 = Vector3.sub(p2, p0, new Vector3());\r\n        let deltaUV1 = Vector3.sub(uv1, uv0, new Vector3());\r\n        let deltaUV2 = Vector3.sub(uv2, uv0, new Vector3());\r\n        let f = 1.0 / (deltaUV1.x * deltaUV2.y - deltaUV2.x * deltaUV1.y);\r\n        let tangent = new Vector3();\r\n        tangent.x = f * (deltaUV2.y * edge1.x - deltaUV1.y * edge2.x);\r\n        tangent.y = f * (deltaUV2.y * edge1.y - deltaUV1.y * edge2.y);\r\n        tangent.z = f * (deltaUV2.y * edge1.z - deltaUV1.y * edge2.z);\r\n        tangent.normalize();\r\n\r\n        //compute binormal\r\n        let binormal = new Vector3();\r\n        binormal.x = f * (-deltaUV2.x * edge1.x + deltaUV1.x * edge2.x);\r\n        binormal.y = f * (-deltaUV2.x * edge1.y + deltaUV1.x * edge2.y);\r\n        binormal.z = f * (-deltaUV2.x * edge1.z + deltaUV1.x * edge2.z);\r\n        binormal.normalize();\r\n\r\n        //计算tangent和binormal的叉积，如果得到的向量和normal是反向的\r\n        //则将tangent.w设置为-1，在shader里面用这个w将计算出来的binormal反向\r\n        //注：这儿计算的并不会反向，但是如果是外部导入的切线，计算时的坐标系的手向不同是可能反向的\r\n        //保留这段代码主要是演示作用，此处计算的tanget的w总是1\r\n\r\n        let crossTB = new Vector3();\r\n        Vector3.cross(tangent, binormal, crossTB);\r\n        let normal = new Vector3();\r\n        Vector3.cross(edge1, edge2, normal);\r\n        if(Vector3.dot(crossTB, normal)<0){\r\n            tangent.w = -1; //由于用了Vector3，所以这里hack一个w           \r\n        } else {\r\n            tangent.w = 1;\r\n        }\r\n\r\n        return tangent;\r\n    }\r\n}\r\n\r\nexport { GeomertyHelper };\r\n","import { Mesh } from \"./mesh\";\r\nimport { VertexFormat, VertexSemantic } from \"./vertexFormat\";\r\nimport { Vector3 } from \"../math/vector3\"\r\nimport { GeomertyHelper } from \"../geometry/geometryHelper\";\r\n\r\nclass StringParser{\r\n    constructor(str){\r\n        if(str){\r\n            this.init(str);\r\n        }\r\n    }\r\n\r\n    init(str){\r\n        this.str = str.trim();        \r\n        this.index = 0;\r\n    }\r\n\r\n    getWorldLength(str, start){\r\n        let i=start;\r\n        for(let len=str.length; i<len; i++){\r\n            let c = str.charAt(i);\r\n            if (c == '\\t'|| c == ' ' || c == '(' || c == ')' || c == '\"'){ \r\n                break;\r\n            }\r\n        }\r\n        return i-start;\r\n    }\r\n\r\n    skipDelimiters(){\r\n        let i = this.index;\r\n        for(let len = this.str.length; i<len; i++){\r\n            let c = this.str.charAt(i);\r\n            //Skip TAB, Space, '(', ')'\r\n            if(c == '\\t' || c == ' ' || c == '(' || c==')' || c=='\"'){\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        this.index = i;\r\n    }\r\n\r\n    skipToNextWord(){\r\n        this.skipDelimiters();\r\n        let n = this.getWorldLength(this.str, this.index);\r\n        this.index += (n+1);\r\n    }\r\n\r\n    getWord(){\r\n        this.skipDelimiters();\r\n        let n = this.getWorldLength(this.str, this.index);\r\n        if(n == 0){\r\n            return null;\r\n        }\r\n        let word = this.str.substr(this.index, n);\r\n        this.index += (n+1);\r\n        return word;\r\n    }\r\n\r\n    getInt(){\r\n        return parseInt(this.getWord());\r\n    }\r\n\r\n    getFloat(){\r\n        return parseFloat(this.getWord());\r\n    }\r\n}\r\n\r\nclass Face{\r\n    constructor(){\r\n        this.vIndices = [];\r\n        this.nIndices = [];\r\n        this.tIndices = [];     \r\n    }\r\n}\r\n\r\nclass ObjFileLoader{\r\n    constructor(){\r\n        this.reset();\r\n    }\r\n\r\n    reset(){\r\n        this._vertices = [];\r\n        this._normals = [];\r\n        this._texcoords = [];\r\n        this._faces = [];       \r\n    }\r\n\r\n    load(fileString, scale, calcTangent=false){\r\n        this.calcTangent = calcTangent;\r\n        let lines = fileString.split('\\n');\r\n        lines.push(null);\r\n        let index = 0;\r\n\r\n        let line;\r\n        let sp = new StringParser();\r\n        while((line = lines[index++]) != null){\r\n            sp.init(line);\r\n            let command = sp.getWord();\r\n            if(command==null) continue;\r\n\r\n            switch(command){\r\n                case '#':\r\n                    continue; //Skip comments\r\n                case 'mtllib': \r\n                    continue; //Skip material chunk\r\n                case 'o':\r\n                case 'g':\r\n                    continue; //Skip Object name\r\n                case 'v': //Read vertex\r\n                {\r\n                    let vertex = this.parseVertex(sp, scale);\r\n                    this._vertices.push(vertex);\r\n                    continue;\r\n                }\r\n                case 'vn'://Read normal\r\n                {\r\n                    let normal = this.parseNormal(sp);\r\n                    this._normals.push(normal);\r\n                    continue;\r\n                }\r\n                case 'vt'://Read texture coordinates\r\n                {\r\n                    let texcoord = this.pasreTexcoord(sp);\r\n                    this._texcoords.push(texcoord);\r\n                    continue;\r\n                }\r\n                case 'f'://Read face\r\n                {\r\n                    let face = this.parseFace(sp);\r\n                    this._faces.push(face);                   \r\n                    continue;\r\n                }\r\n                    \r\n            }\r\n        }       \r\n\r\n        let mesh = this._toMesh();\r\n        this.reset();\r\n        return mesh;\r\n    }\r\n\r\n    parseVertex(sp, scale){\r\n        let x = sp.getFloat() * scale;\r\n        let y = sp.getFloat() * scale;\r\n        let z = sp.getFloat() * scale;\r\n        return {'x':x,'y':y,'z':z};\r\n    }\r\n\r\n    parseNormal(sp){\r\n        let x = sp.getFloat();\r\n        let y = sp.getFloat();\r\n        let z = sp.getFloat();\r\n        return {'x':x,'y':y,'z':z};\r\n    }\r\n\r\n    pasreTexcoord(sp){\r\n        let texcoord = [];\r\n        for(;;){\r\n            let word = sp.getWord();\r\n            if(word==null) break;\r\n            texcoord.push(word);\r\n        }\r\n        return texcoord;\r\n    }\r\n\r\n    parseFace(sp){\r\n        let face = new Face();\r\n        for(;;){\r\n            let word = sp.getWord();\r\n            if(word==null) break;\r\n            let subWords = word.split('/');\r\n            if(subWords.length >= 1){\r\n                let vi = parseInt(subWords[0]) - 1;\r\n                face.vIndices.push(vi);\r\n            }\r\n            if(subWords.length >= 3){\r\n                let ni = parseInt(subWords[2]) - 1;\r\n                face.nIndices.push(ni);\r\n                let ti = parseInt(subWords[1]);\r\n                if(!isNaN(ti)){                    \r\n                    face.tIndices.push(ti-1);\r\n                }\r\n            }\r\n        }        \r\n\r\n        // Devide to triangels if face contains over 3 points.\r\n        // 即使用三角扇表示多边形。n个顶点需要三角形n-2。\r\n        if(face.vIndices.length > 3){\r\n            let n = face.vIndices.length - 2;\r\n            let newVIndices = new Array(n * 3);\r\n            let newNIndices = new Array(n * 3);\r\n            for(let i=0; i<n; i++){\r\n                newVIndices[i*3] = face.vIndices[0];\r\n                newVIndices[i*3+1] = face.vIndices[i+1];\r\n                newVIndices[i*3+2] = face.vIndices[i+2];\r\n                if(face.nIndices.length>0){\r\n                    newNIndices[i*3] = face.nIndices[0];\r\n                    newNIndices[i*3+1] = face.nIndices[i+1];\r\n                    newNIndices[i*3+2] = face.nIndices[i+2];\r\n                }\r\n            }\r\n            face.vIndices = newVIndices;\r\n            if(face.nIndices.length>0){\r\n                face.nIndices = newNIndices;    \r\n            }            \r\n        }       \r\n\r\n        return face;\r\n    }\r\n\r\n    _toMesh(){\r\n        let format = new VertexFormat();\r\n        format.addAttrib(VertexSemantic.POSITION, 3);        \r\n        format.addAttrib(VertexSemantic.NORMAL, 3);\r\n        \r\n        let texsize = 0;\r\n        if(this._texcoords.length > 0){\r\n            texsize = this._texcoords[0].length;\r\n            format.addAttrib(VertexSemantic.UV0, texsize);\r\n        }\r\n\r\n        if(this.calcTangent){ //TODO: or tanget is load from file\r\n            format.addAttrib(VertexSemantic.TANGENT, 4);\r\n        }\r\n\r\n        let mesh = new Mesh(format);        \r\n\r\n        let triangels = [];\r\n        let positions = [];\r\n        let normals = [];\r\n        let uvs = [];\r\n        let tangents = [];\r\n\r\n        for(let i=0; i<this._vertices.length; i++){\r\n            let v = this._vertices[i];\r\n            positions.push(v.x, v.y, v.z);\r\n        }\r\n       \r\n        if(this._normals.length > 0){\r\n            if(this._normals.length !== this._vertices.length){\r\n                console.warn(\"obj file normals count not match vertices count\");\r\n            }\r\n            for(let i=0; i<this._normals.length; i++){\r\n                let n = this._normals[i];\r\n                normals.push(n.x, n.y, n.z);\r\n            }\r\n        }\r\n\r\n        if(this._texcoords.length > 0){\r\n            if(this._texcoords.length !== this._vertices.length){\r\n                console.warn(\"obj file texcoords count not match vertices count\");\r\n            }           \r\n            for(let i=0; i<this._texcoords.length; i++){\r\n                let texcoord = this._texcoords[i];\r\n                for(let j=0; j<texsize; j++){\r\n                    uvs.push(texcoord[j]);\r\n                }\r\n            }            \r\n        }\r\n\r\n        for(let i=0; i<this._faces.length; i++){\r\n            let face = this._faces[i];\r\n            for(let j=0; j<face.vIndices.length; j++){    \r\n                let vIdx = face.vIndices[j];                            \r\n                triangels.push(vIdx);                \r\n\r\n                if(face.nIndices.length > 0){\r\n                    let nIdx = face.nIndices[j];\r\n                    if(nIdx !== vIdx){\r\n                        console.warn('obj file nIdx not match vIdx');\r\n                    }                  \r\n                }                \r\n            }            \r\n        }\r\n\r\n        if(normals.length===0){            \r\n            GeomertyHelper.calcMeshNormals(triangels, positions, normals);\r\n        }\r\n\r\n        if(tangents.length===0 && this.calcTangent){\r\n            if(uvs.length==0){\r\n                console.error(\"Need uv coordinates to compute mesh tangents\");\r\n            } else {\r\n                GeomertyHelper.calcMeshTangents(triangels, positions, uvs, tangents);                \r\n            }            \r\n        }\r\n\r\n        mesh.setVertexData(VertexSemantic.POSITION, positions);\r\n        mesh.setVertexData(VertexSemantic.NORMAL, normals);\r\n        \r\n        if(uvs.length>0){\r\n            mesh.setVertexData(VertexSemantic.UV0, uvs);\r\n        }\r\n\r\n        if(tangents.length>0){\r\n            mesh.setVertexData(VertexSemantic.TANGENT, tangents);\r\n        }\r\n\r\n        mesh.setTriangles(triangels);\r\n        mesh.upload();\r\n\r\n        console.log('vertex count '+this._vertices.length);\r\n        console.log('triangle count '+triangels.length/3);\r\n\r\n        return mesh;\r\n    }\r\n}\r\n\r\nlet objFileLoader = new ObjFileLoader();\r\n\r\nexport {objFileLoader};","let SystemComponents = {\r\n    MeshRenderer:'renderer',    \r\n    Camera:'camera',\r\n    Light:'light',\r\n    Projector:'projector'\r\n}\r\n\r\nexport { SystemComponents };","\r\nlet LightMode = {\r\n    None: 0,\r\n    ForwardBase: 1,\r\n    ForwardAdd: 2,\r\n    ShadowCaster: 3\r\n}\r\n\r\nclass RenderPass {\r\n    constructor(lightMode){\r\n        this.index = 0;\r\n        this._shader = null;\r\n        this._lightMode = lightMode;\r\n    }\r\n\r\n    set shader(v){\r\n        this._shader = v;\r\n    }\r\n\r\n    get shader(){\r\n        return this._shader;\r\n    }\r\n\r\n    get lightMode(){\r\n        return this._lightMode;\r\n    }\r\n\r\n    destroy(){\r\n        if(this._shader){\r\n            this._shader.destroy();\r\n            this._shader = null;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport { LightMode, RenderPass };","import { RenderPass, LightMode } from \"./renderPass\";\r\nimport { Shader } from \"../core/shader\";\r\n\r\nlet SystemUniforms = {\r\n    MvpMatrix: 'u_mvpMatrix',    \r\n    Object2World: 'u_object2World',\r\n    World2Object: 'u_world2Object',   //normal matrix请使用World2Object，然后在shader里面矩阵放右边即可: vec3 worldNormal = normalize(a_Normal * mat3(u_world2Object));\r\n    WorldCameraPos: 'u_worldCameraPos',\r\n    WorldLightPos:'u_worldLightPos',\r\n    LightColor:'u_LightColor',\r\n    SceneAmbient:'u_ambient'\r\n}\r\n\r\nlet vs_errorReplace = `\r\nattribute vec4 a_Position;\r\nuniform mat4 u_mvpMatrix;\r\nvoid main(){\r\n    gl_Position = u_mvpMatrix * a_Position;\r\n}\r\n`;\r\n\r\nlet fs_errorReplace = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\nvoid main(){\r\n    gl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);\r\n}\r\n`;\r\n\r\nclass Material{\r\n    constructor(){          \r\n        this.renderPasses = [];\r\n    }\r\n\r\n    addRenderPass(shader, lightMode=LightMode.None){\r\n        let pass = new RenderPass(lightMode);\r\n        pass.shader = shader;\r\n        pass.index = this.renderPasses.length;\r\n        this.renderPasses.push(pass);\r\n        return pass;\r\n    }\r\n\r\n    destroy(){\r\n        for(let pass of this.renderPasses){\r\n            pass.destroy();\r\n        }\r\n        this.renderPasses = [];\r\n    }\r\n\r\n    //Override\r\n    get systemUniforms(){\r\n        return [SystemUniforms.MvpMatrix];\r\n    }\r\n        \r\n    //自动设置system uniforms (根据systemUniforms的返回值)\r\n    setSysUniformValues(pass, context){\r\n        let systemUniforms = this.systemUniforms;\r\n        for(let sysu of systemUniforms){ \r\n            if(pass.shader.hasUniform(sysu)){ //pass不一定使用材质所有的uniform，所以要判断一下\r\n                pass.shader.setUniform(sysu, context[sysu]);\r\n            }            \r\n        }                \r\n    }\r\n\r\n    //Override\r\n    //材质子类中手动设置uniform，需要重载\r\n    setCustomUniformValues(pass){\r\n\r\n    }\r\n\r\n    //Override\r\n    //渲染pass后的清理工作\r\n    afterRender(pass){\r\n\r\n    }\r\n\r\n    renderPass(mesh, context, pass){\r\n        pass.shader.use();\r\n        this.setSysUniformValues(pass, context);\r\n        this.setCustomUniformValues(pass);\r\n        mesh.render(pass.shader);\r\n        this.afterRender(pass);\r\n    }\r\n\r\n    static createShader(vs, fs, attributesMap){\r\n        let shader = new Shader();\r\n        if (!shader.create(vs, fs)) {\r\n            console.log(\"Failed to initialize shaders\");\r\n            //Set to a default error replace shader\r\n            shader.create(vs_errorReplace, fs_errorReplace);            \r\n        }\r\n        shader.setAttributesMap(attributesMap);\r\n        return shader;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport { SystemUniforms, Material };","\r\nclass Component{\r\n    constructor(){\r\n\r\n    }\r\n\r\n    setNode(node){\r\n        this.node = node;\r\n    }\r\n}\r\n\r\nexport {Component};","import { Component } from \"./component\";\r\n\r\nlet LightType = {\r\n    Directional: 0,\r\n    Point: 1\r\n};\r\n\r\nclass Light extends Component {\r\n    constructor(type){\r\n        super();\r\n        this.type = type;\r\n        this.color = [1.0, 1.0, 1.0]; \r\n        this.intensity = 1.0;       \r\n    }\r\n}\r\n\r\nexport { Light, LightType };","import { SystemUniforms } from \"../../material/material\";\r\nimport { Component } from \"./component\";\r\nimport { Matrix4 } from \"../../math/matrix4\";\r\nimport { LightType } from \"./light\";\r\nimport { gl } from \"../../core/gl\";\r\nimport { LightMode } from \"../../material/renderPass\";\r\n\r\n\r\nclass MeshRenderer extends Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.mesh = null;\r\n        this.material = null;\r\n        this.castShadow = false;\r\n        this.receiveShadow = false;\r\n\r\n        this._mvpMatrix = new Matrix4();\r\n        this._objectToWorld = new Matrix4();\r\n        this._worldToObject = new Matrix4();\r\n    }\r\n\r\n    setMaterial(material){\r\n        this.material = material;\r\n    }\r\n\r\n    setMesh(mesh){\r\n        this.mesh = mesh;\r\n    }\r\n\r\n    render(scene, camera, mainLight, addlights, projectors){\r\n\r\n        let systemUniforms = this.material.systemUniforms;\r\n        let uniformContext = {};\r\n\r\n        //TODO: PerObject uniforms 和 PerMaterial uniforms要分开，为以后batch set pass call做准备\r\n\r\n        for(let sysu of systemUniforms){\r\n            switch(sysu){\r\n                case SystemUniforms.MvpMatrix:{\r\n                    this._mvpMatrix.set(camera.getViewProjMatrix());\r\n                    this._mvpMatrix.multiply(this.node.worldMatrix);\r\n                    uniformContext[SystemUniforms.MvpMatrix] = this._mvpMatrix.elements;\r\n                    break;\r\n                }\r\n                case SystemUniforms.Object2World:{\r\n                    this._objectToWorld.set(this.node.worldMatrix);\r\n                    uniformContext[SystemUniforms.Object2World] = this._objectToWorld.elements;\r\n                    break;\r\n                }\r\n                case SystemUniforms.World2Object:{\r\n                    this._worldToObject.setInverseOf(this.node.worldMatrix);//TODO: 此矩阵缓存到node\r\n                    uniformContext[SystemUniforms.World2Object] = this._worldToObject.elements;\r\n                    break;\r\n                }\r\n                case SystemUniforms.WorldCameraPos:{\r\n                    let pos = camera.node.worldPosition;\r\n                    uniformContext[SystemUniforms.WorldCameraPos] = [pos.x, pos.y, pos.z];\r\n                    break;\r\n                }\r\n                case SystemUniforms.SceneAmbient:{\r\n                    uniformContext[SystemUniforms.SceneAmbient] = scene.ambientColor;\r\n                    break;\r\n                }\r\n\r\n            }\r\n        }        \r\n\r\n\r\n        //避免render to texture时渲染使用了该RT的材质，否则会出现错误 Feedback loop formed between Framebuffer and active Texture.\r\n        //TODO:有RT的camera的渲染要独立出来先渲染。另外要实现camera stack\r\n        if(camera.target!=null && camera.target.texture2D == this.material.mainTexture){\r\n            return;\r\n        }\r\n\r\n        //逐pass渲染，对于 ForwardAdd pass 会渲染多次叠加效果\r\n        for(let pass of this.material.renderPasses){            \r\n            if(pass.lightMode == LightMode.ForwardBase && mainLight!=null){\r\n                 //平行光的方向为Light结点的z轴朝向,但是shader里面用的光的方向是指向光源的，所以这里取反\r\n                let lightForward = mainLight.node.forward.negative();\r\n                uniformContext[SystemUniforms.WorldLightPos] = [lightForward.x, lightForward.y, lightForward.z, 0.0];\r\n                uniformContext[SystemUniforms.LightColor] = mainLight.color;\r\n                this.material.renderPass(this.mesh, uniformContext, pass);\r\n\r\n            } else if(pass.lightMode == LightMode.ForwardAdd){\r\n                let idx = 1;\r\n                for(let light of addlights){\r\n                    if(light.type == LightType.Directional){\r\n                        let lightForward = mainLight.node.forward.negative();\r\n                        uniformContext[SystemUniforms.WorldLightPos] = [lightForward.x, lightForward.y, lightForward.z, 0.0];                        \r\n                    } else {\r\n                        let pos =  light.node.worldPosition;\r\n                        uniformContext[SystemUniforms.WorldLightPos] = [pos.x, pos.y, pos.z, 1.0];\r\n                    }\r\n                    \r\n                    uniformContext[SystemUniforms.LightColor] = light.color;\r\n                    \r\n                    //让多个灯光pass混合\r\n                    //状态设置为 blend one one; ztest lequal; zwrite off;\r\n                    //TODO:全局状态管理（下同）\r\n                    if(idx==1){\r\n                        gl.enable(gl.BLEND);\r\n                        gl.blendFunc(gl.ONE, gl.ONE);\r\n                        gl.depthMask(false);\r\n                        gl.depthFunc(gl.LEQUAL);\r\n                    }\r\n                            \r\n                    this.material.renderPass(this.mesh, uniformContext, pass);              \r\n                    idx++;\r\n                }\r\n                gl.disable(gl.BLEND);                \r\n                gl.depthMask(true);   \r\n                gl.depthFunc(gl.LESS);             \r\n\r\n            } else if(pass.lightMode == LightMode.ShadowCaster){\r\n                \r\n            } else {\r\n                //非光照pass\r\n                this.material.renderPass(this.mesh, uniformContext, pass); \r\n            }\r\n        }  \r\n        \r\n        //使用projector渲染投影材质\r\n        if(projectors != null && projectors.length > 0){\r\n            gl.enable(gl.BLEND);\r\n            gl.blendFunc(gl.ONE, gl.ONE);\r\n            gl.depthMask(false);\r\n            gl.depthFunc(gl.LEQUAL);\r\n                    \r\n            let matTmp = new Matrix4();\r\n            \r\n            for(let projector of projectors){\r\n                projector.updateMatrix();\r\n                let materialProj = projector.material;\r\n                matTmp.set(projector.getProjectorMatrix());\r\n                matTmp.multiply(this.node.worldMatrix);\r\n                materialProj.projMatrix = matTmp.elements;\r\n                materialProj.renderPass(this.mesh, uniformContext, materialProj.renderPasses[0]);\r\n            }\r\n\r\n            gl.disable(gl.BLEND);\r\n            gl.depthMask(true);   \r\n            gl.depthFunc(gl.LESS);         \r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport { MeshRenderer };","\r\nclass Component{\r\n    constructor(){\r\n\r\n    }\r\n\r\n    setNode(node){\r\n        this.node = node;\r\n    }\r\n}\r\n\r\nexport {Component};","import { VertexFormat, VertexSemantic } from \"../core/vertexFormat\";\r\nimport { Mesh } from \"../core/mesh\";\r\n\r\n// Clip Space 全屏矩形，用于PostProcessing\r\n\r\nclass ScreenQuard{\r\n    static createMesh(wireframe){    \r\n        let position_data = [-1.0, 1.0, -1.0, -1.0, 1.0, -1.0,\r\n                             -1.0, 1.0,  1.0, -1.0, 1.0,  1.0];\r\n        let uv_data = [0.0, 1.0, 0.0, 0.0, 1.0, 0.0,\r\n                       0.0, 1.0, 1.0, 0.0, 1.0, 1.0];\r\n\r\n        let format = new VertexFormat();\r\n        format.addAttrib(VertexSemantic.POSITION, 2);\r\n        format.addAttrib(VertexSemantic.UV0, 2);\r\n\r\n        let mesh = new Mesh(format, wireframe); \r\n        mesh.setVertexData(VertexSemantic.POSITION, position_data);    \r\n        mesh.setVertexData(VertexSemantic.UV0, uv_data);\r\n        mesh.upload();            \r\n    \r\n        return mesh;  \r\n    }\r\n}\r\n\r\nexport { ScreenQuard };","//PostProcessing base material\r\nimport { Material } from \"../../material/material\";\r\nimport { VertexSemantic } from \"../../core/vertexFormat\";\r\nimport { LightMode } from \"../../material/renderPass\";\r\n\r\nlet vs = `\r\nattribute vec2 a_Position;\r\nattribute vec2 a_Texcoord;\r\nvarying vec2 v_texcoord;\r\nvoid main(){\r\n    gl_Position = vec4(a_Position, 0.0, 1.0);\r\n    v_texcoord = a_Texcoord;\r\n}\r\n`;\r\n\r\nlet fs = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\nuniform sampler2D u_texMain;\r\nvarying vec2 v_texcoord;\r\nvoid main(){    \r\n    gl_FragColor = texture2D(u_texMain, v_texcoord);\r\n}\r\n`;\r\n\r\nclass MatPP_Base extends Material{\r\n    constructor(fshader, vshader){\r\n        super();\r\n\r\n        fshader = fshader || fs;\r\n        vshader = vshader || vs;\r\n        \r\n        //TODO:使用shader manager管理返回对应一对vs/fs唯一的shader\r\n        this._shader = Material.createShader(vshader, fshader, [\r\n                {'semantic':VertexSemantic.POSITION, 'name':'a_Position'},\r\n                {'semantic':VertexSemantic.UV0 , 'name':'a_Texcoord'}\r\n            ]);   \r\n\r\n        this.addRenderPass(this._shader, LightMode.None);              \r\n\r\n        //default uniforms\r\n        this._mainTexture = null;\r\n    }\r\n\r\n    //Override\r\n    get systemUniforms(){\r\n        return []; \r\n    }\r\n\r\n    //Override\r\n    setCustomUniformValues(pass){                           \r\n        if(this._mainTexture){     \r\n            this._mainTexture.bind();\r\n            pass.shader.setUniformSafe('u_texMain', 0);\r\n        }\r\n    }\r\n\r\n    set mainTexture(v){\r\n        this._mainTexture = v;\r\n    }\r\n\r\n    get mainTexture(){\r\n        return this._mainTexture;\r\n    }\r\n\r\n}\r\n\r\nexport { MatPP_Base };","import { ScreenQuard } from '../geometry/screenQuard';\r\nimport { gl } from '../core/gl';\r\nimport { MatPP_Base } from './material/matPP_Base';\r\nimport { RenderTexture } from '../core/renderTexture';\r\n\r\nclass PostProcessingChain {\r\n    constructor(){\r\n        this._quardMesh = ScreenQuard.createMesh();\r\n        this._matPPBase = new MatPP_Base();\r\n        this._postEffectLayers = [];\r\n        this._tempRTPools = {};\r\n    }\r\n\r\n    destroy(){\r\n        if(this._quardMesh){\r\n            this._quardMesh.destroy();\r\n            this._quardMesh = null;\r\n        }\r\n        this.freeTempRTs();\r\n        this._matPPBase.destroy();\r\n    }\r\n\r\n    add(layer){\r\n        this._postEffectLayers.push(layer);\r\n    }\r\n\r\n    getTempRT(width, height){\r\n        let key = width+\"_\"+height;\r\n        if(this._tempRTPools[key]==null){\r\n            this._tempRTPools[key] = [];\r\n        }\r\n        let last = this._tempRTPools[key].length - 1;\r\n        if(last < 0){\r\n            return new RenderTexture(width, height, true);\r\n        } else {\r\n            let rt = this._tempRTPools[key][last];\r\n            this._tempRTPools[key].length = last;\r\n            return rt;\r\n        }\r\n    }\r\n\r\n    releaseTempRT(rt){\r\n        let key = rt.width+\"_\"+rt.height;\r\n        if(this._tempRTPools[key]==null){\r\n            this._tempRTPools[key] = [];\r\n        }\r\n        if(this._tempRTPools[key].indexOf(rt) === -1){\r\n            this._tempRTPools[key].push(rt);\r\n        }\r\n    }\r\n\r\n    freeTempRTs(){\r\n        for(let key in this._tempRTPools){\r\n            if(this._tempRTPools.hasOwnProperty(key)){\r\n                let pool = this._tempRTPools[key];\r\n                for(let i=0; i<pool.length; ++i){\r\n                    pool[i].destroy();\r\n                }\r\n            }\r\n        }\r\n        this._tempRTPools = {};\r\n    }\r\n\r\n    blit(srcRT, dstRT, material=null, passId=0){\r\n        if(dstRT){\r\n            dstRT.bind();\r\n        }\r\n        material = material || this._matPPBase;\r\n        material.mainTexture = srcRT.texture2D;\r\n        if(material.texelSize){\r\n            material.texelSize = srcRT.texture2D.texelSize;\r\n        }\r\n        material.renderPass(this._quardMesh, null, material.renderPasses[passId]);\r\n        if(dstRT){\r\n            dstRT.unbind();\r\n        }\r\n    }\r\n\r\n    render(camera){\r\n        gl.depthFunc(gl.ALWAYS);\r\n        gl.depthMask(false);\r\n\r\n        let layerCnt = this._postEffectLayers.length;\r\n        let srcTexture = camera._renderTexture;\r\n        let dstTexture = layerCnt > 1 ? camera._tempRenderTexture : null;\r\n\r\n        for(let i=0; i<layerCnt; i++){\r\n            if(i==layerCnt-1){\r\n                dstTexture = null;\r\n            }\r\n            let layer = this._postEffectLayers[i];\r\n            layer.render(this, srcTexture, dstTexture);\r\n            let tmp = srcTexture;\r\n            srcTexture = dstTexture;\r\n            dstTexture = tmp;\r\n        }\r\n\r\n        gl.depthFunc(gl.LEQUAL);\r\n        gl.depthMask(true);\r\n    }\r\n}\r\n\r\nexport { PostProcessingChain };","import { Matrix4 } from '../../math/matrix4'\r\nimport { Component } from './Component';\r\nimport { RenderTexture } from '../../core/renderTexture';\r\nimport { canvas, gl } from '../../core/gl';\r\nimport { PostProcessingChain } from '../../postprocessing/postProcessingChain';\r\n\r\nclass Camera extends Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this._fovy = 75;\r\n        this._aspect = 0.75;\r\n        this._near = 0.1;\r\n        this._far = 100.0;\r\n        this._projMatrix = new Matrix4();\r\n        this._viewMatrix = new Matrix4();\r\n        this._viewProjMatrix = new Matrix4();\r\n\r\n        this._clearColor = [0, 0, 0];\r\n        this._renderTexture = null;\r\n        this._tempRenderTexture = null;\r\n        this._postProcessingChain = null;\r\n    }\r\n\r\n    set clearColor(v){\r\n        this._clearColor = v;\r\n    }\r\n\r\n    set target(v){\r\n        this._renderTexture = v;\r\n        this._onTargetResize(this._renderTexture.width, this._renderTexture.height);\r\n    }\r\n\r\n    get target(){\r\n        return this._renderTexture;\r\n    }\r\n\r\n    getViewProjMatrix(){\r\n        return this._viewProjMatrix;\r\n    }\r\n\r\n    setPerspective(fovy, aspect, near, far){\r\n        this._fovy = fovy;\r\n        this._aspect = aspect;\r\n        this._near = near;\r\n        this._far = far; \r\n        this._projMatrix.setPerspective(this._fovy, this._aspect, this._near, this._far);\r\n    }\r\n\r\n    setOrtho(left, right, bottom, top, near, far){ \r\n        this._projMatrix.setOrtho(left, right, bottom, top, near, far);        \r\n    }\r\n\r\n    onScreenResize(width, height){\r\n        if(this._renderTexture==null){\r\n            this._onTargetResize(width, height);\r\n        } else if(this._renderTexture.isFullScreen){\r\n            this._onTargetResize(width, height);\r\n            this._renderTexture.onScreenResize(width, height);\r\n        }\r\n    }\r\n\r\n    _onTargetResize(width, height){\r\n        this._aspect = width/height;\r\n        this._projMatrix.setPerspective(this._fovy, this._aspect, this._near, this._far); \r\n    }\r\n\r\n    _updateViewProjMatrix(){\r\n        this._viewProjMatrix.set(this._projMatrix);   \r\n        this._viewProjMatrix.multiply(this._viewMatrix);\r\n    }\r\n\r\n    //TODO: 渲染相关代码从Camera中拿出来（为以后实现不同的scene renderer做准备）\r\n    //TODO: ShadowMap渲染只需要灯光矩阵和renderTexture，所以要从camera中解耦这些\r\n    beforeRender(){\r\n        if(this._renderTexture!=null){\r\n            this._renderTexture.bind();\r\n        }\r\n\r\n        this._viewMatrix.setInverseOf(this.node.worldMatrix);\r\n        \r\n        this._updateViewProjMatrix();//TODO:不需要每次渲染之前都重新计算，当proj矩阵需重新计算（例如screen resize，动态修改fov之后），或camera的world matrix变化了需要重新计算view matrix\r\n\r\n        //TODO:每个camera设置自己的clear color，并且在gl层缓存，避免重复设置相同的值\r\n        gl.clearColor(this._clearColor[0], this._clearColor[1], this._clearColor[2], 1);\r\n        gl.clearDepth(1.0);\r\n        gl.enable(gl.DEPTH_TEST);\r\n\r\n        gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);                \r\n    }\r\n\r\n    afterRender(){\r\n        if(this._renderTexture!=null){\r\n            this._renderTexture.unbind();\r\n        }\r\n\r\n        if(this._postProcessingChain){\r\n            this._postProcessingChain.render(this);\r\n        }\r\n    }\r\n\r\n    enablePostProcessing(enabled){\r\n        if(enabled){\r\n            this._tempRenderTexture = new RenderTexture(canvas.width, canvas.height, true);\r\n            this.target = new RenderTexture(canvas.width, canvas.height, true);\r\n            this._postProcessingChain = new PostProcessingChain(this);\r\n        } else {\r\n            if(this._tempRenderTexture){\r\n                this._tempRenderTexture.destroy();\r\n                this._tempRenderTexture = null;\r\n            }\r\n            if(this._renderTexture){\r\n                this._renderTexture.destroy();\r\n                this._renderTexture = null;\r\n            }\r\n            if(this._postProcessingChain){\r\n                this._postProcessingChain.destroy();\r\n                this._postProcessingChain = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    addPostProcessing(postEffectLayer){\r\n        if(this._postProcessingChain==null){\r\n            this.enablePostProcessing(true);\r\n        }\r\n        \r\n        this._postProcessingChain.add(postEffectLayer);\r\n    }\r\n\r\n}\r\n\r\nexport { Camera };","import { Material, SystemUniforms } from \"./material\";\r\nimport { VertexSemantic } from \"../core/vertexFormat\";\r\nimport { textureManager } from \"../core/textureManager\";\r\n\r\nlet vs = `\r\nattribute vec4 a_Position;\r\n\r\nuniform mat4 u_mvpMatrix;\r\nuniform mat4 u_projectorMatrix;\r\n\r\nvarying vec4 v_projTexCoord;\r\n\r\nvoid main(){\r\n    gl_Position = u_mvpMatrix * a_Position;\r\n    v_projTexCoord = u_projectorMatrix * a_Position;\r\n}\r\n\r\n`;\r\n\r\nlet fs = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\n\r\nuniform sampler2D u_texProj;\r\nvarying vec4 v_projTexCoord;\r\n\r\nvoid main(){\r\n    vec4 projTexColor = vec4(0.0);\r\n    if(v_projTexCoord.z > 0.0){\r\n        projTexColor = texture2DProj(u_texProj, v_projTexCoord);\r\n    }\r\n    gl_FragColor = projTexColor * 0.5;\r\n}\r\n\r\n`;\r\n\r\nlet g_shader = null;\r\n\r\nclass MatProjector extends Material{\r\n    constructor(){\r\n        super();\r\n\r\n        if(g_shader==null){\r\n            g_shader = Material.createShader(vs, this.getFS(), [\r\n                {'semantic':VertexSemantic.POSITION, 'name':'a_Position'}               \r\n            ]);\r\n        }\r\n\r\n        this.addRenderPass(g_shader);\r\n\r\n        //default uniforms\r\n        this._projMatrix = null;\r\n        this._projTexture = textureManager.getDefaultTexture();\r\n    }\r\n\r\n    getFS(){\r\n        let fs_common = \"\";\r\n        // if(sysConfig.gammaCorrection){\r\n        //     fs_common += \"#define GAMMA_CORRECTION\\n\";\r\n        // }\r\n        fs_common += fs;\r\n        return fs_common;\r\n    }\r\n\r\n    //Override\r\n    get systemUniforms(){\r\n        return [SystemUniforms.MvpMatrix]; \r\n    }\r\n\r\n    //Override\r\n    setCustomUniformValues(pass){\r\n        \r\n        pass.shader.setUniformSafe('u_projectorMatrix', this._projMatrix);\r\n            \r\n        if(this._projTexture){\r\n            this._projTexture.bind();\r\n            pass.shader.setUniformSafe('u_texProj', 0);\r\n        } \r\n    }\r\n\r\n    set projTexture(v){\r\n        this._projTexture = v;\r\n        this._projTexture.setClamp();\r\n    }\r\n\r\n    get projTexture(){\r\n        return this._projTexture;\r\n    }\r\n\r\n    set projMatrix(v){\r\n        this._projMatrix = v;\r\n    }\r\n\r\n}\r\n\r\nexport { MatProjector };","import { MatProjector } from '../../material/matProjector';\r\nimport { Matrix4 } from '../../math/matrix4'\r\nimport { Component } from './Component';\r\n\r\nclass Projector extends Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this._fovy = 75;\r\n        this._aspect = 0.75;\r\n        this._near = 0.1;\r\n        this._far = 100.0;\r\n        this._projMatrix = new Matrix4();\r\n        this._viewMatrix = new Matrix4();\r\n        this._scaleMatrix = new Matrix4();\r\n        this._scaleMatrix.setTranslate(0.5,0.5,0.5).scale(0.5,0.5,0.5);\r\n\r\n        this._projectorMatrix = new Matrix4();\r\n\r\n        this._material = new MatProjector();\r\n    }\r\n\r\n    get material(){\r\n        return this._material;\r\n    }\r\n\r\n    set material(v){\r\n        this._material = v;\r\n    }\r\n\r\n    getProjectorMatrix(){\r\n        return this._projectorMatrix;\r\n    }\r\n\r\n    setPerspective(fovy, aspect, near, far){\r\n        this._fovy = fovy;\r\n        this._aspect = aspect;\r\n        this._near = near;\r\n        this._far = far; \r\n        this._projMatrix.setPerspective(this._fovy, this._aspect, this._near, this._far);\r\n    }\r\n\r\n    setOrtho(left, right, bottom, top, near, far){ \r\n        this._projMatrix.setOrtho(left, right, bottom, top, near, far);        \r\n    }\r\n\r\n    _updateProjectorMatrix(){\r\n        this._projectorMatrix.set(this._scaleMatrix);   \r\n        this._projectorMatrix.multiply(this._projMatrix);\r\n        this._projectorMatrix.multiply(this._viewMatrix);\r\n    }\r\n\r\n    updateMatrix(){\r\n        this._viewMatrix.setInverseOf(this.node.worldMatrix);\r\n        this._updateProjectorMatrix();\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport { Projector };","import { Vector3 } from \"../math/vector3\";\r\nimport { Quaternion } from \"../math/quaternion\";\r\nimport { Matrix4 } from \"../math/matrix4\";\r\nimport { math } from \"../math/math\";\r\nimport { SystemComponents } from \"./systemComps\";\r\nimport { MeshRenderer } from \"./components/meshRenderer\";\r\nimport { Camera } from \"./components/camera\";\r\nimport { Light, LightType } from \"./components/light\";\r\nimport { Projector } from \"./components/projector\";\r\n\r\nlet _tempVec3 = new Vector3();\r\nlet _tempQuat = new Quaternion();\r\nlet _tempQuat2 = new Quaternion();\r\nlet _tempMat4 = new Matrix4();\r\n\r\nclass SceneNode {\r\n    constructor(){\r\n        this._isStatic = false;\r\n        this._localPosition = new Vector3();\r\n        this._localRotation = new Quaternion();\r\n        this._localScale = new Vector3(1,1,1);\r\n\r\n        this._worldPosition = new Vector3();\r\n        this._worldRotation = new Quaternion();\r\n\r\n        this.localMatrix = new Matrix4();\r\n        this.worldMatrix = new Matrix4();\r\n\r\n        this.parent = null;\r\n        this.children = [];\r\n\r\n        this.components = {};\r\n\r\n        this._worldDirty = true;\r\n\r\n        this._scene = null;\r\n    }\r\n\r\n    isStatic(){\r\n        return this._isStatic;\r\n    }\r\n    \r\n    setStatic(isStatic){\r\n        this._isStatic = isStatic;\r\n    }\r\n\r\n    setTransformDirty(){\r\n        this._worldDirty = true;\r\n    }\r\n\r\n    //注意：所有 local 的 getter 方法，调用会直接获取相应的local成员，如果直接修改这些成员，需要调用 setTransformDirty() 通知Node更新世界矩阵\r\n    //建议如果要修改local属性，调用 setter方法\r\n\r\n    get localPosition(){\r\n        return this._localPosition;\r\n    }\r\n\r\n    set localPosition(v){\r\n        this._localPosition.copyFrom(v);\r\n        this.setTransformDirty();\r\n    }\r\n\r\n    get localRotation(){\r\n        return this._localRotation;\r\n    }\r\n\r\n    set localRotation(v){\r\n        this._localRotation.copyFrom(v);\r\n        this.setTransformDirty();\r\n    }\r\n\r\n    get localScale(){\r\n        return this._localScale;\r\n    }\r\n\r\n    set localScale(v){\r\n        this._localScale.copyFrom(v);\r\n        this.setTransformDirty();\r\n    }\r\n\r\n\r\n\r\n    //注意：所有的world属性，如果要修改必须调用setter\r\n    //调用getter只能用来获取值，在getter的结果上修改是错误的 （可惜js没有const&)\r\n\r\n    get worldPosition(){        \r\n        if(this._worldDirty){\r\n            this.updateWorldMatrix();\r\n        }\r\n\r\n        return this._worldPosition;\r\n    }\r\n\r\n    set worldPosition(v){\r\n        if(this.parent==null){\r\n            this.localPosition = v;\r\n        } else {            \r\n            _tempMat4.setInverseOf(this.parent.worldMatrix);//TODO:缓存逆矩阵?\r\n            Matrix4.transformPoint(_tempMat4, v, _tempVec3);\r\n            this.localPosition = _tempVec3.clone();\r\n        }        \r\n    }\r\n\r\n    get worldRotation(){\r\n        if(this._worldDirty){\r\n            this.updateWorldMatrix();\r\n        }\r\n\r\n        return this._worldRotation;\r\n    }\r\n\r\n    set worldRotation(v){\r\n        if(this.parent==null){\r\n            this.localRotation = v;\r\n        } else {            \r\n            _tempQuat.setInverseOf(this.parent.worldRotation);\r\n            Quaternion.multiply(_tempQuat, v, _tempQuat2);\r\n            this.localRotation = _tempQuat2.clone();\r\n        }\r\n    }\r\n\r\n    get forward(){\r\n        if(this._worldDirty){\r\n            this.updateWorldMatrix();\r\n        }\r\n        let worldMat = this.worldMatrix.elements;\r\n        _tempVec3.set(worldMat[8], worldMat[9], worldMat[10]);\r\n        return _tempVec3;\r\n    }\r\n    \r\n    get up(){\r\n        if(this._worldDirty){\r\n            this.updateWorldMatrix();\r\n        }\r\n        let worldMat = this.worldMatrix.elements;\r\n        _tempVec3.set(worldMat[4], worldMat[5], worldMat[6]);\r\n        return _tempVec3;\r\n    }\r\n\r\n    get right(){\r\n        if(this._worldDirty){\r\n            this.updateWorldMatrix();\r\n        }\r\n        let worldMat = this.worldMatrix.elements;\r\n        _tempVec3.set(worldMat[0], worldMat[1], worldMat[2]);\r\n        return _tempVec3;\r\n    }\r\n\r\n    removeFromParent(){\r\n        if(this.parent){\r\n            let idx = this.parent.children.indexOf(this);\r\n            if(idx>=0){\r\n                this.parent.children.splice(idx, 1);\r\n            }\r\n            this.parent = null;\r\n            this._scene.onRemoveNode(this);\r\n            this._scene = null;\r\n        }\r\n    }\r\n\r\n    setParent(parent){\r\n        this.removeFromParent();\r\n        if(parent){\r\n            parent.children.push(this);\r\n        }\r\n        this.parent = parent;\r\n        this._scene = parent._scene;\r\n        this._scene.onAddNode(this);\r\n    }\r\n\r\n    addChild(node){\r\n        node.setParent(this);\r\n    }\r\n\r\n    addEmptyNode(){\r\n        let node = new SceneNode();\r\n        node.setParent(this);\r\n        return node;\r\n    }\r\n\r\n    addMeshNode(mesh, material){\r\n        let meshRenderer = new MeshRenderer();\r\n        meshRenderer.setMesh(mesh);\r\n        meshRenderer.setMaterial(material);\r\n        \r\n        let node = new SceneNode();\r\n        node.addComponent(SystemComponents.MeshRenderer, meshRenderer);  \r\n        node.setParent(this);        \r\n        return node;\r\n    }\r\n\r\n    addPerspectiveCamera(fovy, aspect, near, far){\r\n        let camera = new Camera();\r\n        camera.setPerspective(fovy, aspect, near, far);\r\n        \r\n        let node = new SceneNode();\r\n        node.addComponent(SystemComponents.Camera, camera);\r\n        node.setParent(this);\r\n        node.camera = camera;\r\n        return node;\r\n    }\r\n\r\n    addProjector(fovy, aspect, near, far){\r\n        let projector = new Projector();\r\n        projector.setPerspective(fovy, aspect, near, far);\r\n\r\n        let node = new SceneNode();\r\n        node.addComponent(SystemComponents.Projector, projector);\r\n        node.setParent(this);\r\n        node.projector = projector;\r\n        return node;\r\n    }\r\n\r\n    addDirectionalLight(color){\r\n        let light = new Light(LightType.Directional);\r\n        light.color = color;\r\n\r\n        let node = new SceneNode();\r\n        node.addComponent(SystemComponents.Light, light);\r\n        node.setParent(this);\r\n        node.light = light;\r\n        return node;\r\n    }\r\n\r\n    addPointLight(color, range){\r\n        let light = new Light(LightType.Point);\r\n        light.color = color;\r\n        light.range = range;\r\n\r\n        let node = new SceneNode();\r\n        node.addComponent(SystemComponents.Light, light);\r\n        node.setParent(this);\r\n        node.light = light;\r\n        return node;\r\n    }\r\n\r\n    lookAt(target, up, smoothFactor){\r\n        up = up || Vector3.Up;\r\n        let worldPos = this.worldPosition;\r\n        if(Math.abs(worldPos.x-target.x)<math.ZeroEpsilon \r\n            && Math.abs(worldPos.y-target.y)<math.ZeroEpsilon \r\n            && Math.abs(worldPos.z-target.z)<math.ZeroEpsilon){\r\n                return;\r\n        }\r\n\r\n        if(this.getComponent(SystemComponents.Camera) || \r\n            this.getComponent(SystemComponents.Projector)){\r\n            _tempQuat.setLookRotation(target, worldPos, up);//因为对于OpenGL的camera来说，LookAt是让局部的-z轴指向target，因此这儿对调一下。\r\n        } else {\r\n            _tempQuat.setLookRotation(worldPos, target, up);\r\n        }\r\n\r\n        if(smoothFactor != null){\r\n            this.worldRotation = Quaternion.slerp(this.worldRotation, _tempQuat.clone(), smoothFactor);\r\n        } else {\r\n            this.worldRotation = _tempQuat.clone();\r\n        }\r\n                       \r\n        \r\n    }\r\n\r\n    updateLocalMatrix(){        \r\n        this.localMatrix.setTranslate(this._localPosition.x, this._localPosition.y, this._localPosition.z);           \r\n        Quaternion.toMatrix4(this._localRotation, _tempMat4);\r\n        this.localMatrix.multiply(_tempMat4);        \r\n        this.localMatrix.scale(this._localScale.x, this._localScale.y, this._localScale.z);   \r\n        \r\n        //TODO:此处可优化，避免矩阵乘法，Matrix4增加fromTRS(pos, rot, scale)方法\r\n    }\r\n\r\n    updateWorldMatrix(forceUpdate=false){        \r\n        if(this._worldDirty || forceUpdate){\r\n            if(!this._isStatic){\r\n                this.updateLocalMatrix();\r\n            }\r\n    \r\n            if(this.parent==null){\r\n                this.worldMatrix.set(this.localMatrix);\r\n            } else {\r\n                Matrix4.multiply(this.parent.worldMatrix, this.localMatrix, this.worldMatrix);\r\n            }\r\n    \r\n            //从world matrix中提取出worldPosition\r\n            let worldMat = this.worldMatrix.elements;\r\n            this._worldPosition.set(worldMat[12], worldMat[13], worldMat[14]);\r\n    \r\n            //计算world rotation （或许可以像three.js的decompose那样从矩阵解出来）\r\n            if(this.parent==null){\r\n                this._worldRotation.copyFrom(this._localRotation);\r\n            } else {\r\n                Quaternion.multiply(this.parent._worldRotation, this._localRotation, this._worldRotation);\r\n            }\r\n\r\n            this._worldDirty = false;\r\n        }\r\n\r\n        \r\n        this.children.forEach(function(child){\r\n            child.updateWorldMatrix(true);\r\n        });        \r\n    }\r\n\r\n    addComponent(type, component){\r\n        this.components[type] = component;\r\n        component.setNode(this);\r\n    }\r\n\r\n    getComponent(type){\r\n        return this.components[type];\r\n    }\r\n\r\n    render(scene, camera, lights, projectors){\r\n        let renderer = this.components[SystemComponents.MeshRenderer];\r\n        if(renderer){\r\n            renderer.render(scene, camera, lights, projectors);\r\n        }\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport { SceneNode };","import { Vector3 } from \"../math/vector3\";\r\nimport { Quaternion } from \"../math/quaternion\";\r\nimport { Matrix4 } from \"../math/matrix4\";\r\nimport { math } from \"../math/math\";\r\nimport { SystemComponents } from \"./systemComps\";\r\nimport { MeshRenderer } from \"./components/meshRenderer\";\r\nimport { Camera } from \"./components/camera\";\r\nimport { Light, LightType } from \"./components/light\";\r\nimport { Projector } from \"./components/projector\";\r\n\r\nlet _tempVec3 = new Vector3();\r\nlet _tempQuat = new Quaternion();\r\nlet _tempQuat2 = new Quaternion();\r\nlet _tempMat4 = new Matrix4();\r\n\r\nclass SceneNode {\r\n    constructor(){\r\n        this._isStatic = false;\r\n        this._localPosition = new Vector3();\r\n        this._localRotation = new Quaternion();\r\n        this._localScale = new Vector3(1,1,1);\r\n\r\n        this._worldPosition = new Vector3();\r\n        this._worldRotation = new Quaternion();\r\n\r\n        this.localMatrix = new Matrix4();\r\n        this.worldMatrix = new Matrix4();\r\n\r\n        this.parent = null;\r\n        this.children = [];\r\n\r\n        this.components = {};\r\n\r\n        this._worldDirty = true;\r\n\r\n        this._scene = null;\r\n    }\r\n\r\n    isStatic(){\r\n        return this._isStatic;\r\n    }\r\n    \r\n    setStatic(isStatic){\r\n        this._isStatic = isStatic;\r\n    }\r\n\r\n    setTransformDirty(){\r\n        this._worldDirty = true;\r\n    }\r\n\r\n    //注意：所有 local 的 getter 方法，调用会直接获取相应的local成员，如果直接修改这些成员，需要调用 setTransformDirty() 通知Node更新世界矩阵\r\n    //建议如果要修改local属性，调用 setter方法\r\n\r\n    get localPosition(){\r\n        return this._localPosition;\r\n    }\r\n\r\n    set localPosition(v){\r\n        this._localPosition.copyFrom(v);\r\n        this.setTransformDirty();\r\n    }\r\n\r\n    get localRotation(){\r\n        return this._localRotation;\r\n    }\r\n\r\n    set localRotation(v){\r\n        this._localRotation.copyFrom(v);\r\n        this.setTransformDirty();\r\n    }\r\n\r\n    get localScale(){\r\n        return this._localScale;\r\n    }\r\n\r\n    set localScale(v){\r\n        this._localScale.copyFrom(v);\r\n        this.setTransformDirty();\r\n    }\r\n\r\n\r\n\r\n    //注意：所有的world属性，如果要修改必须调用setter\r\n    //调用getter只能用来获取值，在getter的结果上修改是错误的 （可惜js没有const&)\r\n\r\n    get worldPosition(){        \r\n        if(this._worldDirty){\r\n            this.updateWorldMatrix();\r\n        }\r\n\r\n        return this._worldPosition;\r\n    }\r\n\r\n    set worldPosition(v){\r\n        if(this.parent==null){\r\n            this.localPosition = v;\r\n        } else {            \r\n            _tempMat4.setInverseOf(this.parent.worldMatrix);//TODO:缓存逆矩阵?\r\n            Matrix4.transformPoint(_tempMat4, v, _tempVec3);\r\n            this.localPosition = _tempVec3.clone();\r\n        }        \r\n    }\r\n\r\n    get worldRotation(){\r\n        if(this._worldDirty){\r\n            this.updateWorldMatrix();\r\n        }\r\n\r\n        return this._worldRotation;\r\n    }\r\n\r\n    set worldRotation(v){\r\n        if(this.parent==null){\r\n            this.localRotation = v;\r\n        } else {            \r\n            _tempQuat.setInverseOf(this.parent.worldRotation);\r\n            Quaternion.multiply(_tempQuat, v, _tempQuat2);\r\n            this.localRotation = _tempQuat2.clone();\r\n        }\r\n    }\r\n\r\n    get forward(){\r\n        if(this._worldDirty){\r\n            this.updateWorldMatrix();\r\n        }\r\n        let worldMat = this.worldMatrix.elements;\r\n        _tempVec3.set(worldMat[8], worldMat[9], worldMat[10]);\r\n        return _tempVec3;\r\n    }\r\n    \r\n    get up(){\r\n        if(this._worldDirty){\r\n            this.updateWorldMatrix();\r\n        }\r\n        let worldMat = this.worldMatrix.elements;\r\n        _tempVec3.set(worldMat[4], worldMat[5], worldMat[6]);\r\n        return _tempVec3;\r\n    }\r\n\r\n    get right(){\r\n        if(this._worldDirty){\r\n            this.updateWorldMatrix();\r\n        }\r\n        let worldMat = this.worldMatrix.elements;\r\n        _tempVec3.set(worldMat[0], worldMat[1], worldMat[2]);\r\n        return _tempVec3;\r\n    }\r\n\r\n    removeFromParent(){\r\n        if(this.parent){\r\n            let idx = this.parent.children.indexOf(this);\r\n            if(idx>=0){\r\n                this.parent.children.splice(idx, 1);\r\n            }\r\n            this.parent = null;\r\n            this._scene.onRemoveNode(this);\r\n            this._scene = null;\r\n        }\r\n    }\r\n\r\n    setParent(parent){\r\n        this.removeFromParent();\r\n        if(parent){\r\n            parent.children.push(this);\r\n        }\r\n        this.parent = parent;\r\n        this._scene = parent._scene;\r\n        this._scene.onAddNode(this);\r\n    }\r\n\r\n    addChild(node){\r\n        node.setParent(this);\r\n    }\r\n\r\n    addEmptyNode(){\r\n        let node = new SceneNode();\r\n        node.setParent(this);\r\n        return node;\r\n    }\r\n\r\n    addMeshNode(mesh, material){\r\n        let meshRenderer = new MeshRenderer();\r\n        meshRenderer.setMesh(mesh);\r\n        meshRenderer.setMaterial(material);\r\n        \r\n        let node = new SceneNode();\r\n        node.addComponent(SystemComponents.MeshRenderer, meshRenderer);  \r\n        node.setParent(this);        \r\n        return node;\r\n    }\r\n\r\n    addPerspectiveCamera(fovy, aspect, near, far){\r\n        let camera = new Camera();\r\n        camera.setPerspective(fovy, aspect, near, far);\r\n        \r\n        let node = new SceneNode();\r\n        node.addComponent(SystemComponents.Camera, camera);\r\n        node.setParent(this);\r\n        node.camera = camera;\r\n        return node;\r\n    }\r\n\r\n    addProjector(fovy, aspect, near, far){\r\n        let projector = new Projector();\r\n        projector.setPerspective(fovy, aspect, near, far);\r\n\r\n        let node = new SceneNode();\r\n        node.addComponent(SystemComponents.Projector, projector);\r\n        node.setParent(this);\r\n        node.projector = projector;\r\n        return node;\r\n    }\r\n\r\n    addDirectionalLight(color){\r\n        let light = new Light(LightType.Directional);\r\n        light.color = color;\r\n\r\n        let node = new SceneNode();\r\n        node.addComponent(SystemComponents.Light, light);\r\n        node.setParent(this);\r\n        node.light = light;\r\n        return node;\r\n    }\r\n\r\n    addPointLight(color, range){\r\n        let light = new Light(LightType.Point);\r\n        light.color = color;\r\n        light.range = range;\r\n\r\n        let node = new SceneNode();\r\n        node.addComponent(SystemComponents.Light, light);\r\n        node.setParent(this);\r\n        node.light = light;\r\n        return node;\r\n    }\r\n\r\n    lookAt(target, up, smoothFactor){\r\n        up = up || Vector3.Up;\r\n        let worldPos = this.worldPosition;\r\n        if(Math.abs(worldPos.x-target.x)<math.ZeroEpsilon \r\n            && Math.abs(worldPos.y-target.y)<math.ZeroEpsilon \r\n            && Math.abs(worldPos.z-target.z)<math.ZeroEpsilon){\r\n                return;\r\n        }\r\n\r\n        if(this.getComponent(SystemComponents.Camera) || \r\n            this.getComponent(SystemComponents.Projector)){\r\n            _tempQuat.setLookRotation(target, worldPos, up);//因为对于OpenGL的camera来说，LookAt是让局部的-z轴指向target，因此这儿对调一下。\r\n        } else {\r\n            _tempQuat.setLookRotation(worldPos, target, up);\r\n        }\r\n\r\n        if(smoothFactor != null){\r\n            this.worldRotation = Quaternion.slerp(this.worldRotation, _tempQuat.clone(), smoothFactor);\r\n        } else {\r\n            this.worldRotation = _tempQuat.clone();\r\n        }\r\n                       \r\n        \r\n    }\r\n\r\n    updateLocalMatrix(){        \r\n        this.localMatrix.setTranslate(this._localPosition.x, this._localPosition.y, this._localPosition.z);           \r\n        Quaternion.toMatrix4(this._localRotation, _tempMat4);\r\n        this.localMatrix.multiply(_tempMat4);        \r\n        this.localMatrix.scale(this._localScale.x, this._localScale.y, this._localScale.z);   \r\n        \r\n        //TODO:此处可优化，避免矩阵乘法，Matrix4增加fromTRS(pos, rot, scale)方法\r\n    }\r\n\r\n    updateWorldMatrix(forceUpdate=false){        \r\n        if(this._worldDirty || forceUpdate){\r\n            if(!this._isStatic){\r\n                this.updateLocalMatrix();\r\n            }\r\n    \r\n            if(this.parent==null){\r\n                this.worldMatrix.set(this.localMatrix);\r\n            } else {\r\n                Matrix4.multiply(this.parent.worldMatrix, this.localMatrix, this.worldMatrix);\r\n            }\r\n    \r\n            //从world matrix中提取出worldPosition\r\n            let worldMat = this.worldMatrix.elements;\r\n            this._worldPosition.set(worldMat[12], worldMat[13], worldMat[14]);\r\n    \r\n            //计算world rotation （或许可以像three.js的decompose那样从矩阵解出来）\r\n            if(this.parent==null){\r\n                this._worldRotation.copyFrom(this._localRotation);\r\n            } else {\r\n                Quaternion.multiply(this.parent._worldRotation, this._localRotation, this._worldRotation);\r\n            }\r\n\r\n            this._worldDirty = false;\r\n        }\r\n\r\n        \r\n        this.children.forEach(function(child){\r\n            child.updateWorldMatrix(true);\r\n        });        \r\n    }\r\n\r\n    addComponent(type, component){\r\n        this.components[type] = component;\r\n        component.setNode(this);\r\n    }\r\n\r\n    getComponent(type){\r\n        return this.components[type];\r\n    }\r\n\r\n    render(scene, camera, lights, projectors){\r\n        let renderer = this.components[SystemComponents.MeshRenderer];\r\n        if(renderer){\r\n            renderer.render(scene, camera, lights, projectors);\r\n        }\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport { SceneNode };","\r\nimport { LightType } from \"./components/light\";\r\n\r\nclass SceneForwardRendererConfig\r\n{\r\n    constructor(){\r\n        this.MaxForwardAddLights = 5;\r\n    }\r\n}\r\n\r\nclass SceneForwardRenderer{\r\n    constructor(){\r\n        this.config = new SceneForwardRendererConfig();        \r\n        this._mainLight = null;\r\n        this._additionalLights = [];\r\n    }\r\n\r\n    //确定一个主光源和多个附加光源\r\n    //主光源是亮度最高的平行光\r\n    //附加光源是其他所有光源，包含平行光和点光源，附加光源数量不超过 MaxForwardAddLights\r\n    //主光源使用材质的forwardbase pass渲染\r\n    //每个附加光源分别使用forwardadd pass渲染一次（多pass)\r\n    //主光源阴影渲染（如果开启）则使用材质的shadow caster pass渲染到一张shadow map\r\n\r\n    //TODO: 按物体分配附加灯光（URP模式）\r\n    prepareLights(lights)\r\n    {        \r\n        let mainLight = null;\r\n        let additionalLights = [];\r\n\r\n        let maxIntensity = 0;\r\n        \r\n        for(let light of lights){                \r\n            if(light.type == LightType.Directional){\r\n                if(light.intensity > maxIntensity){\r\n                    maxIntensity = light.intensity;\r\n                    mainLight = light;\r\n                }                                \r\n            }            \r\n        }    \r\n\r\n        let addLightCount = 0;\r\n        for(let light of lights){\r\n            if(light != mainLight && addLightCount < this.config.MaxForwardAddLights){\r\n                addLightCount++;\r\n                additionalLights.push(light);\r\n            }\r\n        }  \r\n        \r\n        this._mainLight = mainLight;\r\n        this._additionalLights = additionalLights;\r\n    }\r\n\r\n    render(scene){\r\n        //TODO: 找出camera, 灯光和可渲染结点，逐camera进行forward rendering\r\n        //1. camera frustum culling\r\n        //2. 逐队列渲染\r\n        //   2-1. 不透明物体队列，按材质实例将node分组，然后排序（从前往后）\r\n        //   2-2, 透明物体队列，按z序从后往前排列\r\n\r\n        \r\n        this.prepareLights(scene.lights);           \r\n\r\n        //TODO: camera需要排序，按指定顺序渲染\r\n        for(let camera of scene.cameras){\r\n            camera.beforeRender();\r\n\r\n            \r\n\r\n            //投影Pass\r\n            for(let rnode of scene.renderNodes){\r\n                if(rnode.castShadow){\r\n                    \r\n                }\r\n            }\r\n          \r\n            for(let rnode of scene.renderNodes){\r\n                rnode.render(scene, camera, this._mainLight, this._additionalLights, scene.projectors);\r\n            }\r\n\r\n            camera.afterRender();\r\n        }\r\n\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport { SceneForwardRenderer };","import { SceneNode } from \"./SceneNode\";\r\nimport { SystemComponents } from \"./systemComps\";\r\nimport { SceneForwardRenderer } from \"./sceneForwardRenderer\";\r\n\r\nclass Scene{\r\n    constructor(){\r\n        this._root = new SceneNode();\r\n        this._root._scene = this;\r\n        this.cameras = [];\r\n        this.lights = [];\r\n        this.projectors = [];\r\n        this.renderNodes = [];\r\n\r\n        this._ambientColor = [0.1,0.1,0.1];\r\n\r\n        this._sceneRenderer = new SceneForwardRenderer();\r\n    }\r\n\r\n    set ambientColor(v){\r\n        this._ambientColor = v;\r\n    }\r\n\r\n    get ambientColor(){\r\n        return this._ambientColor;\r\n    }\r\n\r\n    get root(){\r\n        return this._root;\r\n    }\r\n\r\n    onAddNode(node){\r\n        let camera = node.getComponent(SystemComponents.Camera);\r\n        if(camera!=null){\r\n            this.cameras.push(camera);\r\n            return;\r\n        }  \r\n\r\n        let light = node.getComponent(SystemComponents.Light);\r\n        if(light!=null){\r\n            this.lights.push(light);\r\n            return;\r\n        }\r\n\r\n        let projector = node.getComponent(SystemComponents.Projector);\r\n        if(projector!=null){\r\n            this.projectors.push(projector);\r\n            return;\r\n        }\r\n\r\n        this.renderNodes.push(node);        \r\n    }\r\n\r\n    onRemoveNode(node){\r\n        let camera = node.getComponent(SystemComponents.Camera);\r\n        if(camera!=null){\r\n            node.camera = null;\r\n            let idx = this.cameras.indexOf(camera);\r\n            if(idx>=0){\r\n                this.cameras.splice(idx, 1);\r\n            }\r\n            return;\r\n        } \r\n\r\n        let projector = node.getComponent(SystemComponents.Projector);\r\n        if(projector!=null){\r\n            node.projector = null;\r\n            let idx = this.projectors.indexOf(projector);\r\n            if(idx>=0){\r\n                this.projectors.splice(idx, 1);\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let light = node.getComponent(SystemComponents.Light);\r\n        if(light!=null){\r\n            node.light = null;\r\n            let idx = this.lights.indexOf(light);\r\n            if(idx>=0){\r\n                this.lights.splice(idx, 1);\r\n            }\r\n            return;\r\n        }\r\n                \r\n        let idx = this.renderNodes.indexOf(node);\r\n        if(idx>=0){\r\n            this.renderNodes.splice(idx, 1);\r\n        }                \r\n    }\r\n\r\n    onScreenResize(width, height){\r\n        for(let camera of this.cameras){\r\n            camera.onScreenResize(width, height);\r\n        }\r\n    }\r\n\r\n    update(){\r\n        this.root.updateWorldMatrix();\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        this._sceneRenderer.render(this);        \r\n    }\r\n\r\n}\r\n\r\nexport { Scene };","import { GeomertyHelper } from \"./geometryHelper\";\r\nimport { VertexFormat, VertexSemantic } from \"../core/vertexFormat\";\r\nimport { Mesh } from \"../core/mesh\";\r\n\r\nclass Cube{\r\n    static createMesh(){\r\n\r\n        let format = new VertexFormat();\r\n        format.addAttrib(VertexSemantic.POSITION, 3);\r\n        format.addAttrib(VertexSemantic.NORMAL, 3);\r\n        format.addAttrib(VertexSemantic.TANGENT, 4);\r\n        format.addAttrib(VertexSemantic.UV0, 2);\r\n    \r\n        // cube\r\n        //       ^ Y\r\n        //       | \r\n        //       |\r\n        //       / -------> X \r\n        //      /\r\n        //     v\r\n        //    Z\r\n        //\r\n        //    v6----- v5\r\n        //   /|      /|\r\n        //  v1------v0|\r\n        //  | |     | |\r\n        //  | |v7---|-|v4\r\n        //  |/      |/\r\n        //  v2------v3\r\n    \r\n        let mesh = new Mesh(format);  \r\n        //6个面（12个三角形），24个顶点  \r\n        let position_data = [\r\n            //v0-v1-v2-v3 front (0,1,2,3)\r\n            1.0, 1.0, 1.0,  -1.0, 1.0, 1.0,  -1.0, -1.0, 1.0,  1.0, -1.0, 1.0,\r\n            //v0-v3-v4-v5 right (4,5,6,7)\r\n            1.0, 1.0, 1.0,  1.0, -1.0, 1.0,  1.0, -1.0, -1.0,  1.0, 1.0, -1.0,\r\n            //v0-v5-v6-v1 top (8,9,10,11)\r\n            1.0, 1.0, 1.0,  1.0, 1.0, -1.0,  -1.0, 1.0, -1.0, -1.0, 1.0, 1.0,\r\n            //v1-v6-v7-v2 left (12,13,14,15)\r\n            -1.0, 1.0, 1.0,  -1.0, 1.0, -1.0,  -1.0, -1.0, -1.0,  -1.0, -1.0, 1.0,\r\n            //v7-v4-v3-v2 bottom (16,17,18,19)\r\n            -1.0, -1.0, -1.0,  1.0, -1.0, -1.0,  1.0, -1.0, 1.0,  -1.0, -1.0, 1.0,\r\n            //v4-v7-v6-v5 back (20,21,22,23)\r\n            1.0, -1.0, -1.0,  -1.0, -1.0, -1.0,  -1.0, 1.0, -1.0,  1.0, 1.0, -1.0        \r\n        ];\r\n        let normal_data = [\r\n            //v0-v1-v2-v3 front\r\n            0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\r\n            //v0-v3-v4-v5 right\r\n            1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0,            \r\n            //v0-v5-v6-v1 top\r\n            0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0,\r\n            //v1-v6-v7-v2 left\r\n            -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0,\r\n            //v7-v4-v3-v2 bottom\r\n            0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0,\r\n            //v4-v7-v6-v5 back\r\n            0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0\r\n        ];\r\n        let uv_data = [\r\n            //v0-v1-v2-v3 front\r\n            1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0,\r\n            //v0-v3-v4-v5 right\r\n            0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0,\r\n            //v0-v5-v6-v1 top\r\n            1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0,\r\n            //v1-v6-v7-v2 left\r\n            1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0,\r\n            //v7-v4-v3-v2 bottom\r\n            0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0,\r\n            //v4-v7-v6-v5 back\r\n            0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0\r\n        ]\r\n    \r\n        let triangels = [\r\n            0,1,2, 0,2,3,       //front\r\n            4,5,6, 4,6,7,       //right\r\n            8,9,10, 8,10,11,    //top\r\n            12,13,14, 12,14,15, //left\r\n            16,17,18, 16,18,19, //bottom\r\n            20,21,22, 20,22,23  //back\r\n        ];\r\n\r\n        let tangent_data = [];\r\n        GeomertyHelper.calcMeshTangents(triangels, position_data, uv_data, tangent_data);\r\n    \r\n        mesh.setVertexData(VertexSemantic.POSITION, position_data);    \r\n        mesh.setVertexData(VertexSemantic.NORMAL, normal_data); \r\n        mesh.setVertexData(VertexSemantic.TANGENT, tangent_data);   \r\n        mesh.setVertexData(VertexSemantic.UV0, uv_data);\r\n        mesh.setTriangles(triangels);\r\n        mesh.upload();            \r\n    \r\n        return mesh;   \r\n    }\r\n}\r\n\r\nexport { Cube };","import { GeomertyHelper } from \"./geometryHelper\";\r\nimport { VertexFormat, VertexSemantic } from \"../core/vertexFormat\";\r\nimport { Mesh } from \"../core/mesh\";\r\n\r\n// A plane on XZ plane and up is Y\r\n\r\nclass Plane{\r\n    static createMesh(lengthX, lengthZ, xSegments, zSegments, wireframe){    \r\n        if(xSegments<=1){\r\n            xSegments = 1;\r\n        }    \r\n        if(zSegments<=1){\r\n            zSegments = 1;\r\n        }\r\n\r\n        let position_data = [];\r\n        let normal_data = [];\r\n        let uv_data = [];\r\n        let tangent_data = [];\r\n        let triangels = [];\r\n\r\n        const anchorX = 0.5;\r\n        const anchorZ = 0.5;\r\n\r\n        let hwx = lengthX * anchorX;\r\n        let hwz = lengthZ * anchorZ;\r\n    \r\n        for(let iz=0; iz<=zSegments; ++iz){\r\n\r\n            let v = iz / zSegments;\r\n            let z = lengthZ*v - hwz;\r\n\r\n            for(let ix=0; ix<=xSegments; ++ix){\r\n                let u = ix / xSegments;\r\n                let x = lengthX*u - hwx;                \r\n                \r\n                position_data.push(x,0,z);\r\n                normal_data.push(0, 1, 0);\r\n                uv_data.push(u, v);                \r\n\r\n                if(ix<xSegments && iz<zSegments){\r\n                    let line_verts = xSegments + 1;\r\n                    let a = ix + iz * line_verts; //x0z0\r\n                    let b = ix + (iz+1)*line_verts; //x0z1\r\n                    let c = (ix+1) + iz*line_verts; //x1z0\r\n                    let d = (ix+1) + (iz+1)*line_verts; //x1z1\r\n                    \r\n                    triangels.push(b,d,a);\r\n                    triangels.push(a,d,c);\r\n                }\r\n            }\r\n        }\r\n\r\n        //计算切线\r\n        GeomertyHelper.calcMeshTangents(triangels, position_data, uv_data, tangent_data);\r\n\r\n        let format = new VertexFormat();\r\n        format.addAttrib(VertexSemantic.POSITION, 3);\r\n        format.addAttrib(VertexSemantic.NORMAL, 3);\r\n        format.addAttrib(VertexSemantic.TANGENT, 4);\r\n        format.addAttrib(VertexSemantic.UV0, 2);\r\n\r\n        let mesh = new Mesh(format, wireframe); \r\n        mesh.setVertexData(VertexSemantic.POSITION, position_data);    \r\n        mesh.setVertexData(VertexSemantic.NORMAL, normal_data);\r\n        mesh.setVertexData(VertexSemantic.TANGENT, tangent_data);   \r\n        mesh.setVertexData(VertexSemantic.UV0, uv_data);\r\n        mesh.setTriangles(triangels);\r\n        mesh.upload();            \r\n    \r\n        return mesh;  \r\n    }\r\n}\r\n\r\nexport { Plane };","//逐顶点光照材质，支持 diffuse 贴图和color tint, 使用blinn-phong高光\r\n\r\nimport { Material, SystemUniforms } from \"./material\";\r\nimport { VertexSemantic } from \"../core/vertexFormat\";\r\nimport { LightMode } from \"./renderPass\";\r\nimport { textureManager } from \"../core/textureManager\";\r\nimport { sysConfig } from \"../core/gl\";\r\n\r\nlet vs = `\r\nattribute vec4 a_Position;\r\nattribute vec3 a_Normal;\r\nattribute vec2 a_Texcoord;\r\n    \r\nuniform mat4 u_mvpMatrix;\r\nuniform mat4 u_world2Object;\r\nuniform mat4 u_object2World;\r\n\r\nuniform vec3 u_worldCameraPos; // world space camera position\r\nuniform vec3 u_LightColor; // Light color\r\nuniform vec4 u_worldLightPos;   // World space light direction or position, if w==0 the light is directional\r\n\r\nuniform vec3 u_specular; // specular;\r\nuniform float u_gloss; //gloss\r\n\r\nuniform vec4 u_texMain_ST; // Main texture tiling and offset\r\n\r\nvarying vec3 v_diffuse;\r\nvarying vec3 v_specular;\r\nvarying float v_atten;\r\nvarying vec2 v_texcoord;\r\n\r\nvoid main(){\r\n    gl_Position = u_mvpMatrix * a_Position;   \r\n    \r\n    vec4 worldPos = u_object2World*a_Position;\r\n    \r\n    vec3 worldNormal = normalize(a_Normal * mat3(u_world2Object));\r\n    vec3 worldLightDir;\r\n    v_atten = 1.0;    \r\n\r\n    if(u_worldLightPos.w==1.0){ //点光源\r\n        vec3 lightver = u_worldLightPos.xyz-worldPos.xyz;\r\n        float dis = length(lightver);\r\n        worldLightDir = normalize(lightver);\r\n        vec3 a = vec3(0.01);\r\n        v_atten = 1.0/(a.x + a.y*dis + a.z*dis*dis);\r\n    } else {\r\n        worldLightDir = normalize(u_worldLightPos.xyz);\r\n    }\r\n    \r\n    v_diffuse = u_LightColor * max(0.0, dot(worldLightDir, worldNormal));\r\n    \r\n    vec3 viewDir = normalize(u_worldCameraPos - worldPos.xyz);\r\n\r\n#ifdef LIGHT_MODEL_PHONG\r\n    vec3 reflectDir = normalize(reflect(-worldLightDir, worldNormal));\r\n    v_specular = u_specular * u_LightColor * pow(max(0.0, dot(reflectDir,viewDir)), u_gloss);     \r\n#else    \r\n    vec3 halfDir = normalize(worldLightDir + viewDir);\r\n    v_specular = u_specular * u_LightColor * pow(max(0.0, dot(worldNormal,halfDir)), u_gloss);     \r\n#endif\r\n    \r\n    v_texcoord = a_Texcoord.xy * u_texMain_ST.xy + u_texMain_ST.zw;\r\n}\r\n\r\n`;\r\n\r\nlet fs = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\n\r\nuniform sampler2D u_texMain;\r\nuniform vec3 u_colorTint;\r\n#ifdef USE_AMBIENT\r\nuniform vec3 u_ambient; // scene ambient\r\n#endif\r\n\r\nvarying vec3 v_diffuse;\r\nvarying vec3 v_specular;\r\nvarying float v_atten;\r\nvarying vec2 v_texcoord;\r\n\r\n\r\nvoid main(){\r\n    vec3 albedo = texture2D(u_texMain, v_texcoord.xy).rgb;\r\n    #ifdef GAMMA_CORRECTION\r\n        albedo = pow(albedo, vec3(2.2));\r\n    #endif\r\n        albedo = albedo * u_colorTint;\r\n        \r\n    vec3 diffuse = v_diffuse * albedo;\r\n\r\n#ifdef USE_AMBIENT\r\n    vec3 ambient = u_ambient * albedo;\r\n    gl_FragColor = vec4(ambient + (diffuse + v_specular) * v_atten, 1.0);\r\n#else\r\n    gl_FragColor = vec4((diffuse + v_specular) * v_atten, 1.0);\r\n#endif\r\n\r\n#ifdef GAMMA_CORRECTION\r\n    gl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1.0/2.2));\r\n#endif\r\n}\r\n`;\r\n\r\nlet g_shaderForwardBase = null;\r\nlet g_shaderForwardAdd = null;\r\n\r\nclass MatVertexLight extends Material{\r\n    constructor(){\r\n        super();\r\n        \r\n        if(g_shaderForwardBase==null){\r\n            g_shaderForwardBase = Material.createShader(this.getVS_forwardbase(), this.getFS_forwardbase(), [\r\n                {'semantic':VertexSemantic.POSITION, 'name':'a_Position'},\r\n                {'semantic':VertexSemantic.NORMAL , 'name':'a_Normal'},\r\n                {'semantic':VertexSemantic.UV0 , 'name':'a_Texcoord'}\r\n            ]);\r\n        }\r\n        if(g_shaderForwardAdd==null){\r\n            g_shaderForwardAdd = Material.createShader(this.getVS_forwardadd(), this.getFS_forwardadd(), [\r\n                {'semantic':VertexSemantic.POSITION, 'name':'a_Position'},\r\n                {'semantic':VertexSemantic.NORMAL , 'name':'a_Normal'},\r\n                {'semantic':VertexSemantic.UV0 , 'name':'a_Texcoord'}\r\n            ]);\r\n        }        \r\n\r\n        this.addRenderPass(g_shaderForwardBase, LightMode.ForwardBase);  \r\n        this.addRenderPass(g_shaderForwardAdd, LightMode.ForwardAdd);                \r\n\r\n        //default uniforms\r\n        this._mainTexture = textureManager.getDefaultTexture();\r\n        this._mainTexture_ST = [1,1,0,0];\r\n        this._specular = [1.0, 1.0, 1.0];\r\n        this._gloss = 20.0;  \r\n        this._colorTint = [1.0, 1.0, 1.0];  \r\n    }\r\n\r\n    getVS_Common(){\r\n        return vs;\r\n    }\r\n\r\n    getFS_Common(){\r\n        let fs_common = \"#define LIGHT_MODEL_PHONG\\n\";\r\n        if(sysConfig.gammaCorrection){\r\n            fs_common += \"#define GAMMA_CORRECTION\\n\";\r\n        }\r\n        fs_common += fs;\r\n        return fs_common;\r\n    }\r\n\r\n    getVS_forwardbase(){\r\n        return this.getVS_Common();\r\n    }\r\n\r\n    getFS_forwardbase(){\r\n        let fs_forwardbase = \"#define USE_AMBIENT\\n\" + this.getFS_Common();\r\n        return fs_forwardbase;\r\n    }\r\n\r\n    getVS_forwardadd(){\r\n        return this.getVS_Common();\r\n    }\r\n\r\n    getFS_forwardadd(){\r\n        // fs和forwardbase的区别只是fs里面没有加ambient\r\n        return this.getFS_Common();\r\n    }\r\n\r\n    //Override\r\n    get systemUniforms(){\r\n        return [SystemUniforms.MvpMatrix,\r\n            SystemUniforms.World2Object,\r\n            SystemUniforms.Object2World,\r\n            SystemUniforms.WorldCameraPos,\r\n            SystemUniforms.SceneAmbient,\r\n            SystemUniforms.LightColor, SystemUniforms.WorldLightPos]; \r\n    }\r\n\r\n    //Override\r\n    setCustomUniformValues(pass){                           \r\n        pass.shader.setUniformSafe('u_specular', this._specular);\r\n        pass.shader.setUniformSafe('u_gloss', this._gloss);\r\n        pass.shader.setUniformSafe('u_colorTint', this._colorTint);\r\n        pass.shader.setUniformSafe('u_texMain_ST', this._mainTexture_ST);   \r\n        if(this._mainTexture){     \r\n            this._mainTexture.bind();\r\n            pass.shader.setUniformSafe('u_texMain', 0);\r\n        }\r\n    }\r\n\r\n    set specular(v){\r\n        this._specular = v;\r\n    }\r\n\r\n    set gloss(v){\r\n        this._gloss = v;\r\n    }\r\n\r\n    set colorTint(v){\r\n        this._colorTint = v;\r\n    }\r\n\r\n    set mainTexture(v){\r\n        this._mainTexture = v;\r\n    }\r\n\r\n    get mainTexture(){\r\n        return this._mainTexture;\r\n    }\r\n\r\n    set mainTextureST(v){\r\n        this._mainTexture_ST = v;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport { MatVertexLight };","//逐像素光照材质，支持 diffuse 贴图和color tint, 使用blinn-phong高光\r\n\r\nimport { Material, SystemUniforms } from \"./material\";\r\nimport { VertexSemantic } from \"../core/vertexFormat\";\r\nimport { LightMode } from \"./renderPass\";\r\nimport { textureManager } from \"../core/textureManager\";\r\nimport { sysConfig } from \"../core/gl\";\r\n\r\nlet vs = `\r\nattribute vec4 a_Position;\r\nattribute vec3 a_Normal;\r\nattribute vec2 a_Texcoord;\r\n    \r\nuniform mat4 u_mvpMatrix;\r\nuniform mat4 u_object2World;\r\nuniform mat4 u_world2Object;\r\nuniform vec4 u_texMain_ST; // Main texture tiling and offset\r\n\r\nvarying vec4 v_worldPos;\r\nvarying vec3 v_worldNormal;\r\nvarying vec2 v_texcoord;\r\n\r\nvoid main(){\r\n    gl_Position = u_mvpMatrix * a_Position;   \r\n    \r\n    v_worldPos = u_object2World*a_Position;\r\n    v_worldNormal = normalize(a_Normal * mat3(u_world2Object));\r\n    v_texcoord = a_Texcoord.xy * u_texMain_ST.xy + u_texMain_ST.zw;            \r\n}\r\n\r\n`;\r\n\r\nlet fs = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\n\r\nuniform vec3 u_worldCameraPos; // world space camera position\r\nuniform vec3 u_LightColor; // Light color\r\nuniform vec4 u_worldLightPos;   // World space light direction or position, if w==0 the light is directional\r\n\r\nuniform sampler2D u_texMain;\r\nuniform vec3 u_colorTint;\r\n#ifdef USE_AMBIENT\r\nuniform vec3 u_ambient; // scene ambient\r\n#endif\r\nuniform vec3 u_specular; // specular\r\nuniform float u_gloss; //gloss\r\n\r\nvarying vec4 v_worldPos;\r\nvarying vec3 v_worldNormal;\r\nvarying vec2 v_texcoord;\r\n\r\n\r\nvoid main(){    \r\n    vec3 worldLightDir;\r\n    float atten = 1.0;    \r\n\r\n    if(u_worldLightPos.w==1.0){ //点光源\r\n        vec3 lightver = u_worldLightPos.xyz - v_worldPos.xyz;\r\n        float dis = length(lightver);\r\n        worldLightDir = normalize(lightver);\r\n        vec3 a = vec3(0.01);\r\n        atten = 1.0/(a.x + a.y*dis + a.z*dis*dis);\r\n    } else {\r\n        worldLightDir = normalize(u_worldLightPos.xyz);\r\n    }\r\n    \r\n    vec3 albedo = texture2D(u_texMain, v_texcoord.xy).rgb;\r\n    #ifdef GAMMA_CORRECTION\r\n        albedo = pow(albedo, vec3(2.2));\r\n    #endif\r\n        albedo = albedo * u_colorTint;\r\n\r\n    vec3 diffuse = u_LightColor * albedo * max(0.0, dot(v_worldNormal, worldLightDir));\r\n    \r\n    vec3 viewDir = normalize(u_worldCameraPos - v_worldPos.xyz);\r\n#ifdef LIGHT_MODEL_PHONG\r\n    vec3 reflectDir = normalize(reflect(-worldLightDir, v_worldNormal));\r\n    vec3 specular = u_specular * u_LightColor * pow(max(0.0, dot(reflectDir,viewDir)), u_gloss);\r\n#else\r\n    vec3 halfDir = normalize(worldLightDir + viewDir);\r\n    vec3 specular = u_specular * u_LightColor * pow(max(0.0, dot(v_worldNormal,halfDir)), u_gloss); \r\n#endif\r\n\r\n#ifdef USE_AMBIENT\r\n    vec3 ambient = u_ambient * albedo;\r\n    gl_FragColor = vec4(ambient + (diffuse + specular) * atten, 1.0);\r\n#else\r\n    gl_FragColor = vec4((diffuse + specular) * atten, 1.0);\r\n#endif   \r\n\r\n#ifdef GAMMA_CORRECTION\r\n    gl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1.0/2.2));\r\n#endif\r\n}\r\n`;\r\n\r\nlet g_shaderForwardBase = null;\r\nlet g_shaderForwardAdd = null;\r\n\r\nclass MatPixelLight extends Material{\r\n    constructor(){\r\n        super();\r\n        \r\n        if(g_shaderForwardBase==null){\r\n            g_shaderForwardBase = Material.createShader(this.getVS_forwardbase(), this.getFS_forwardbase(), [\r\n                {'semantic':VertexSemantic.POSITION, 'name':'a_Position'},\r\n                {'semantic':VertexSemantic.NORMAL , 'name':'a_Normal'},\r\n                {'semantic':VertexSemantic.UV0 , 'name':'a_Texcoord'}\r\n            ]);\r\n        }\r\n        if(g_shaderForwardAdd==null){\r\n            g_shaderForwardAdd = Material.createShader(this.getVS_forwardadd(), this.getFS_forwardadd(), [\r\n                {'semantic':VertexSemantic.POSITION, 'name':'a_Position'},\r\n                {'semantic':VertexSemantic.NORMAL , 'name':'a_Normal'},\r\n                {'semantic':VertexSemantic.UV0 , 'name':'a_Texcoord'}\r\n            ]);\r\n        }        \r\n\r\n        this.addRenderPass(g_shaderForwardBase, LightMode.ForwardBase);  \r\n        this.addRenderPass(g_shaderForwardAdd, LightMode.ForwardAdd);                \r\n\r\n        //default uniforms\r\n        this._mainTexture = textureManager.getDefaultTexture();\r\n        this._mainTexture_ST = [1,1,0,0];\r\n        this._specular = [1.0, 1.0, 1.0];\r\n        this._gloss = 20.0;  \r\n        this._colorTint = [1.0, 1.0, 1.0];  \r\n    }\r\n\r\n    getVS_Common(){\r\n        return vs;\r\n    }\r\n\r\n    getFS_Common(){\r\n        let fs_common = \"#define LIGHT_MODEL_PHONG\\n\";\r\n        if(sysConfig.gammaCorrection){\r\n            fs_common += \"#define GAMMA_CORRECTION\\n\";\r\n        }\r\n        fs_common += fs;\r\n        return fs_common;\r\n    }\r\n\r\n    getVS_forwardbase(){\r\n        return this.getVS_Common();\r\n    }\r\n\r\n    getFS_forwardbase(){\r\n        let fs_forwardbase = \"#define USE_AMBIENT\\n\" + this.getFS_Common();\r\n        return fs_forwardbase;\r\n    }\r\n\r\n    getVS_forwardadd(){\r\n        return this.getVS_Common();\r\n    }\r\n\r\n    getFS_forwardadd(){\r\n        // fs和forwardbase的区别只是fs里面没有加ambient\r\n        return this.getFS_Common();\r\n    }\r\n\r\n    //Override\r\n    get systemUniforms(){\r\n        return [SystemUniforms.MvpMatrix,\r\n            SystemUniforms.World2Object,\r\n            SystemUniforms.Object2World,\r\n            SystemUniforms.WorldCameraPos,\r\n            SystemUniforms.SceneAmbient,\r\n            SystemUniforms.LightColor, SystemUniforms.WorldLightPos]; \r\n    }\r\n\r\n    //Override\r\n    setCustomUniformValues(pass){                           \r\n        pass.shader.setUniformSafe('u_specular', this._specular);\r\n        pass.shader.setUniformSafe('u_gloss', this._gloss);\r\n        pass.shader.setUniformSafe('u_colorTint', this._colorTint);\r\n        pass.shader.setUniformSafe('u_texMain_ST', this._mainTexture_ST);      \r\n        if(this._mainTexture){\r\n            this._mainTexture.bind();\r\n            pass.shader.setUniformSafe('u_texMain', 0);\r\n        }  \r\n        \r\n    }\r\n\r\n    set specular(v){\r\n        this._specular = v;\r\n    }\r\n\r\n    set gloss(v){\r\n        this._gloss = v;\r\n    }\r\n\r\n    set colorTint(v){\r\n        this._colorTint = v;\r\n    }\r\n\r\n    set mainTexture(v){\r\n        this._mainTexture = v;\r\n    }\r\n\r\n    get mainTexture(){\r\n        return this._mainTexture;\r\n    }\r\n\r\n    set mainTextureST(v){\r\n        this._mainTexture_ST = v;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport { MatPixelLight };","import { Material, SystemUniforms } from \"./material\";\r\nimport { VertexSemantic } from \"../core/vertexFormat\";\r\nimport { sysConfig } from \"../core/gl\";\r\n\r\nlet vs = `\r\nattribute vec4 a_Position;\r\n\r\nuniform mat4 u_mvpMatrix;\r\n\r\nvoid main(){\r\n    gl_Position = u_mvpMatrix * a_Position;\r\n}\r\n\r\n`;\r\n\r\nlet fs = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\n\r\nuniform vec3 u_Color;\r\n\r\nvoid main(){\r\n    gl_FragColor = vec4(u_Color, 1.0);\r\n\r\n#ifdef GAMMA_CORRECTION\r\n    gl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1.0/2.2));\r\n#endif\r\n}\r\n\r\n`;\r\n\r\nlet g_shader = null;\r\n\r\nclass MatSolidColor extends Material{\r\n    constructor(color=null){\r\n        super();\r\n\r\n        if(g_shader==null){\r\n            g_shader = Material.createShader(vs, this.getFS(), [\r\n                {'semantic':VertexSemantic.POSITION, 'name':'a_Position'}               \r\n            ]);\r\n        }\r\n\r\n        this.addRenderPass(g_shader);\r\n\r\n        //default uniforms\r\n        if(color){\r\n            this.color = color;\r\n        } else {\r\n            this.color = [1.0, 1.0, 1.0];\r\n        }\r\n    }\r\n\r\n    getFS(){\r\n        let fs_common = \"\";\r\n        if(sysConfig.gammaCorrection){\r\n            fs_common += \"#define GAMMA_CORRECTION\\n\";\r\n        }\r\n        fs_common += fs;\r\n        return fs_common;\r\n    }\r\n\r\n    //Override\r\n    get systemUniforms(){\r\n        return [SystemUniforms.MvpMatrix]; \r\n    }\r\n\r\n    //Override\r\n    setCustomUniformValues(pass){\r\n        pass.shader.setUniform('u_Color', this.color);\r\n    }\r\n\r\n    setColor(color){\r\n        this.color = color;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport { MatSolidColor };","//逐像素光照+法线贴图材质 （切线空间计算光照）\r\n\r\nimport { Material, SystemUniforms } from \"./material\";\r\nimport { VertexSemantic } from \"../core/vertexFormat\";\r\nimport { LightMode } from \"./renderPass\";\r\nimport { textureManager } from \"../core/textureManager\";\r\nimport { sysConfig } from \"../core/gl\";\r\n\r\nlet vs = `\r\nattribute vec4 a_Position;\r\nattribute vec3 a_Normal;\r\nattribute vec4 a_Tangent;\r\nattribute vec2 a_Texcoord;\r\n    \r\nuniform mat4 u_mvpMatrix;\r\nuniform mat4 u_object2World;\r\nuniform mat4 u_world2Object;\r\nuniform vec4 u_texMain_ST; // Main texture tiling and offset\r\nuniform vec4 u_normalMap_ST; // Normal map tiling and offset\r\nuniform vec3 u_worldCameraPos; // world space camera position\r\nuniform vec4 u_worldLightPos;   // World space light direction or position, if w==0 the light is directional\r\n\r\nvarying vec3 v_tangentLightDir; // tangent space light dir\r\nvarying vec3 v_tangentViewDir; // tangent space view dir\r\nvarying vec4 v_texcoord;\r\nvarying float v_atten;\r\n\r\nvoid main(){\r\n    gl_Position = u_mvpMatrix * a_Position;   \r\n    v_texcoord.xy = a_Texcoord.xy * u_texMain_ST.xy + u_texMain_ST.zw;\r\n    v_texcoord.zw = a_Texcoord.xy * u_normalMap_ST.xy + u_normalMap_ST.zw;\r\n\r\n    vec3 worldNormal = normalize(a_Normal * mat3(u_world2Object));\r\n    vec3 worldTangent = normalize(u_object2World*a_Tangent).xyz;\r\n    vec3 worldBinormal = cross(worldNormal, worldTangent) * a_Tangent.w;\r\n\r\n    //将TBN向量按行放入矩阵，构造出worldToTangent矩阵\r\n    //注意glsl中mat3是列主的\r\n    mat3 worldToTangent = mat3(worldTangent.x, worldBinormal.x, worldNormal.x,\r\n                               worldTangent.y, worldBinormal.y, worldNormal.y, \r\n                               worldTangent.z, worldBinormal.z, worldNormal.z);\r\n\r\n    vec4 worldPos = u_object2World*a_Position;\r\n    vec3 worldViewDir = normalize(u_worldCameraPos - worldPos.xyz);\r\n    v_tangentViewDir = worldToTangent * worldViewDir;\r\n\r\n    vec3 worldLightDir;\r\n    v_atten = 1.0;\r\n    if(u_worldLightPos.w==1.0){ //点光源\r\n        vec3 lightver = u_worldLightPos.xyz - worldPos.xyz;\r\n        float dis = length(lightver);\r\n        worldLightDir = normalize(lightver);\r\n        vec3 a = vec3(0.01);\r\n        v_atten = 1.0/(a.x + a.y*dis + a.z*dis*dis);\r\n    } else {\r\n        worldLightDir = normalize(u_worldLightPos.xyz);\r\n    }\r\n    v_tangentLightDir = worldToTangent * worldLightDir;\r\n}\r\n`;\r\n\r\nlet fs = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\n\r\nuniform vec3 u_LightColor; // Light color\r\n\r\nuniform sampler2D u_texMain;\r\nuniform sampler2D u_normalMap;\r\n\r\nuniform vec3 u_colorTint;\r\n#ifdef USE_AMBIENT\r\nuniform vec3 u_ambient; // scene ambient\r\n#endif\r\nuniform vec3 u_specular; // specular\r\nuniform float u_gloss; //gloss\r\n\r\nvarying vec3 v_tangentLightDir; // tangent space light dir\r\nvarying vec3 v_tangentViewDir; // tangent space view dir\r\nvarying vec4 v_texcoord;\r\nvarying float v_atten;\r\n\r\nvoid main(){        \r\n    vec3 tangentLightDir = normalize(v_tangentLightDir);\r\n    vec3 tangentViewDir = normalize(v_tangentViewDir);\r\n\r\n#ifdef PACK_NORMAL_MAP\r\n    vec4 packedNormal = texture2D(u_normalMap, v_texcoord.zw);\r\n    vec3 tangentNormal;\r\n    tangentNormal.xy = packedNormal.xy * 2.0 - 1.0;\r\n    tangentNormal.z = sqrt(1.0 - clamp(dot(tangentNormal.xy, tangentNormal.xy), 0.0, 1.0));\r\n#else\r\n    vec3 tangentNormal = texture2D(u_normalMap, v_texcoord.zw).xyz * 2.0 - 1.0;\r\n#endif\r\n    \r\n    vec3 albedo = texture2D(u_texMain, v_texcoord.xy).rgb;\r\n#ifdef GAMMA_CORRECTION\r\n    albedo = pow(albedo, vec3(2.2));\r\n#endif\r\n    albedo = albedo * u_colorTint;\r\n\r\n    vec3 diffuse = u_LightColor * albedo * max(0.0, dot(tangentNormal, tangentLightDir));\r\n\r\n#ifdef LIGHT_MODEL_PHONG\r\n    vec3 reflectDir = normalize(reflect(-tangentLightDir, tangentNormal));\r\n    vec3 specular = u_LightColor * u_specular * pow(max(0.0, dot(reflectDir,tangentViewDir)), u_gloss);\r\n#else\r\n    vec3 halfDir = normalize(tangentLightDir + tangentViewDir);\r\n    vec3 specular = u_LightColor * u_specular * pow(max(0.0, dot(tangentNormal,halfDir)), u_gloss);\r\n#endif    \r\n\r\n#ifdef USE_AMBIENT\r\n    vec3 ambient = u_ambient * albedo;\r\n    gl_FragColor = vec4(ambient + (diffuse + specular) * v_atten, 1.0);\r\n#else\r\n    gl_FragColor = vec4((diffuse + specular) * v_atten, 1.0);\r\n#endif\r\n\r\n#ifdef GAMMA_CORRECTION\r\n    gl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1.0/2.2));\r\n#endif\r\n}\r\n`;\r\n\r\n\r\nlet g_shaderForwardBase = null;\r\nlet g_shaderForwardAdd = null;\r\n\r\nclass MatNormalMap extends Material{\r\n    constructor(){\r\n        super();\r\n        \r\n        if(g_shaderForwardBase==null){\r\n            g_shaderForwardBase = Material.createShader(this.getVS_forwardbase(), this.getFS_forwardbase(), [\r\n                {'semantic':VertexSemantic.POSITION, 'name':'a_Position'},\r\n                {'semantic':VertexSemantic.NORMAL , 'name':'a_Normal'},\r\n                {'semantic':VertexSemantic.TANGENT , 'name':'a_Tangent'},\r\n                {'semantic':VertexSemantic.UV0 , 'name':'a_Texcoord'}\r\n            ]);\r\n        }\r\n        if(g_shaderForwardAdd==null){\r\n            g_shaderForwardAdd = Material.createShader(this.getVS_forwardadd(), this.getFS_forwardadd(), [\r\n                {'semantic':VertexSemantic.POSITION, 'name':'a_Position'},\r\n                {'semantic':VertexSemantic.NORMAL , 'name':'a_Normal'},\r\n                {'semantic':VertexSemantic.TANGENT , 'name':'a_Tangent'},\r\n                {'semantic':VertexSemantic.UV0 , 'name':'a_Texcoord'}\r\n            ]);\r\n        }        \r\n\r\n        this.addRenderPass(g_shaderForwardBase, LightMode.ForwardBase);  \r\n        this.addRenderPass(g_shaderForwardAdd, LightMode.ForwardAdd);                \r\n\r\n        //default uniforms\r\n        this._mainTexture = textureManager.getDefaultTexture();\r\n        this._mainTexture_ST = [1,1,0,0];\r\n        this._normalMap = textureManager.getDefaultBumpTexture();\r\n        this._normalMap_ST = [1,1,0,0];\r\n        this._specular = [1.0, 1.0, 1.0];\r\n        this._gloss = 20.0;  \r\n        this._colorTint = [1.0, 1.0, 1.0];  \r\n    }\r\n\r\n    getVS_Common(){\r\n        return vs;\r\n    }\r\n\r\n    getFS_Common(){\r\n        let fs_common = \"#define LIGHT_MODEL_PHONG\\n\";\r\n        if(sysConfig.gammaCorrection){\r\n            fs_common += \"#define GAMMA_CORRECTION\\n\";\r\n        }\r\n        fs_common += fs;\r\n        return fs_common;\r\n    }\r\n\r\n    getVS_forwardbase(){\r\n        return this.getVS_Common();\r\n    }\r\n\r\n    getFS_forwardbase(){\r\n        let fs_forwardbase = \"#define USE_AMBIENT\\n\" + this.getFS_Common();\r\n        return fs_forwardbase;\r\n    }\r\n\r\n    getVS_forwardadd(){\r\n        return this.getVS_Common();\r\n    }\r\n\r\n    getFS_forwardadd(){\r\n        // fs和forwardbase的区别只是fs里面没有加ambient\r\n        return this.getFS_Common();\r\n    }\r\n\r\n    //Override\r\n    get systemUniforms(){\r\n        return [SystemUniforms.MvpMatrix,\r\n            SystemUniforms.World2Object,\r\n            SystemUniforms.Object2World,\r\n            SystemUniforms.WorldCameraPos,\r\n            SystemUniforms.SceneAmbient,\r\n            SystemUniforms.LightColor, SystemUniforms.WorldLightPos]; \r\n    }\r\n\r\n    //Override\r\n    setCustomUniformValues(pass){                           \r\n        pass.shader.setUniformSafe('u_specular', this._specular);\r\n        pass.shader.setUniformSafe('u_gloss', this._gloss);\r\n        pass.shader.setUniformSafe('u_colorTint', this._colorTint);\r\n        pass.shader.setUniformSafe('u_texMain_ST', this._mainTexture_ST); \r\n        pass.shader.setUniformSafe('u_normalMap_ST', this._normalMap_ST);     \r\n        if(this._mainTexture){\r\n            this._mainTexture.bind(0);\r\n            pass.shader.setUniformSafe('u_texMain', 0);\r\n        }  \r\n        if(this._normalMap){\r\n            this._normalMap.bind(1);\r\n            pass.shader.setUniformSafe('u_normalMap', 1);\r\n        }\r\n        \r\n    }\r\n\r\n    set specular(v){\r\n        this._specular = v;\r\n    }\r\n\r\n    set gloss(v){\r\n        this._gloss = v;\r\n    }\r\n\r\n    set colorTint(v){\r\n        this._colorTint = v;\r\n    }\r\n\r\n    set mainTexture(v){\r\n        this._mainTexture = v;\r\n    }\r\n\r\n    get mainTexture(){\r\n        return this._mainTexture;\r\n    }\r\n\r\n    set mainTextureST(v){\r\n        this._mainTexture_ST = v;\r\n    }\r\n\r\n    set normalMap(v){\r\n        this._normalMap = v;\r\n    }\r\n\r\n    get normalMap(){\r\n        return this._normalMap;\r\n    }\r\n\r\n    set normalMapST(v){\r\n        this._normalMap_ST = v;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport { MatNormalMap };","//逐像素光照+法线贴图材质 （世界空间计算光照）\r\n\r\nimport { Material, SystemUniforms } from \"./material\";\r\nimport { VertexSemantic } from \"../core/vertexFormat\";\r\nimport { LightMode } from \"./renderPass\";\r\nimport { textureManager } from \"../core/textureManager\";\r\nimport { sysConfig } from \"../core/gl\";\r\n\r\nlet vs = `\r\nattribute vec4 a_Position;\r\nattribute vec3 a_Normal;\r\nattribute vec4 a_Tangent;\r\nattribute vec2 a_Texcoord;\r\n    \r\nuniform mat4 u_mvpMatrix;\r\nuniform mat4 u_object2World;\r\nuniform mat4 u_world2Object;\r\nuniform vec4 u_texMain_ST; // Main texture tiling and offset\r\nuniform vec4 u_normalMap_ST; // Normal map tiling and offset\r\n\r\n// Tangent to World 3x3 matrix and worldPos\r\n// 每个vec4的xyz是矩阵的一行，w存放了worldPos\r\nvarying vec4 v_TtoW0;\r\nvarying vec4 v_TtoW1;\r\nvarying vec4 v_TtoW2;\r\nvarying vec4 v_texcoord;\r\n\r\nvoid main(){\r\n    gl_Position = u_mvpMatrix * a_Position;   \r\n    v_texcoord.xy = a_Texcoord.xy * u_texMain_ST.xy + u_texMain_ST.zw;\r\n    v_texcoord.zw = a_Texcoord.xy * u_normalMap_ST.xy + u_normalMap_ST.zw;\r\n\r\n    vec3 worldNormal = normalize(a_Normal * mat3(u_world2Object));\r\n    vec3 worldTangent = normalize(u_object2World*a_Tangent).xyz;\r\n    vec3 worldBinormal = cross(worldNormal, worldTangent) * a_Tangent.w;    \r\n    vec4 worldPos = u_object2World*a_Position;\r\n    \r\n    //TBN向量按列放入矩阵，构造出 TangentToWorld矩阵,使用三个向量保存矩阵的三行，传入fs\r\n    //同时将worldPos存入三个向量的w中\r\n    v_TtoW0 = vec4(worldTangent.x, worldBinormal.x, worldNormal.x, worldPos.x);\r\n    v_TtoW1 = vec4(worldTangent.y, worldBinormal.y, worldNormal.y, worldPos.y);\r\n    v_TtoW2 = vec4(worldTangent.z, worldBinormal.z, worldNormal.z, worldPos.z);\r\n}\r\n`;\r\n\r\nlet fs = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\n\r\nuniform vec3 u_LightColor; // Light color\r\n\r\nuniform sampler2D u_texMain;\r\nuniform sampler2D u_normalMap;\r\n\r\nuniform vec3 u_worldCameraPos; // world space camera position\r\nuniform vec4 u_worldLightPos;   // World space light direction or position, if w==0 the light is directional\r\n\r\nuniform vec3 u_colorTint;\r\n#ifdef USE_AMBIENT\r\nuniform vec3 u_ambient; // scene ambient\r\n#endif\r\nuniform vec3 u_specular; // specular\r\nuniform float u_gloss; //gloss\r\n\r\nvarying vec4 v_TtoW0;\r\nvarying vec4 v_TtoW1;\r\nvarying vec4 v_TtoW2;\r\nvarying vec4 v_texcoord;\r\n\r\nvoid main(){    \r\n    vec3 worldPos = vec3(v_TtoW0.w, v_TtoW1.w, v_TtoW2.w);\r\n\r\n    vec3 worldViewDir = normalize(u_worldCameraPos - worldPos.xyz);\r\n\r\n    vec3 worldLightDir;\r\n    float atten = 1.0;\r\n    if(u_worldLightPos.w==1.0){ //点光源\r\n        vec3 lightver = u_worldLightPos.xyz - worldPos.xyz;\r\n        float dis = length(lightver);\r\n        worldLightDir = normalize(lightver);\r\n        vec3 a = vec3(0.01);\r\n        atten = 1.0/(a.x + a.y*dis + a.z*dis*dis);\r\n    } else {\r\n        worldLightDir = normalize(u_worldLightPos.xyz);\r\n    }\r\n\r\n#ifdef PACK_NORMAL_MAP\r\n    vec4 packedNormal = texture2D(u_normalMap, v_texcoord.zw);\r\n    vec3 normal;\r\n    normal.xy = packedNormal.xy * 2.0 - 1.0;\r\n    normal.z = sqrt(1.0 - clamp(dot(normal.xy, normal.xy), 0.0, 1.0));\r\n#else\r\n    vec3 normal = texture2D(u_normalMap, v_texcoord.zw).xyz * 2.0 - 1.0;\r\n#endif\r\n    //Transform the normal from tangent space to world space\r\n    normal = normalize(vec3(dot(v_TtoW0.xyz, normal), dot(v_TtoW1.xyz, normal), dot(v_TtoW2.xyz, normal)));\r\n    \r\n    vec3 albedo = texture2D(u_texMain, v_texcoord.xy).rgb;\r\n#ifdef GAMMA_CORRECTION\r\n    albedo = pow(albedo, vec3(2.2));\r\n#endif\r\n    albedo = albedo * u_colorTint;\r\n    \r\n    vec3 diffuse = u_LightColor * albedo * max(0.0, dot(normal, worldLightDir));\r\n\r\n#ifdef LIGHT_MODEL_PHONG\r\n    vec3 reflectDir = normalize(reflect(-worldLightDir, normal));\r\n    vec3 specular = u_LightColor * u_specular * pow(max(0.0, dot(reflectDir,worldViewDir)), u_gloss);\r\n#else\r\n    vec3 halfDir = normalize(worldLightDir + worldViewDir);\r\n    vec3 specular = u_LightColor * u_specular * pow(max(0.0, dot(normal,halfDir)), u_gloss);\r\n#endif    \r\n\r\n#ifdef USE_AMBIENT\r\n    vec3 ambient = u_ambient * albedo;\r\n    gl_FragColor = vec4(ambient + (diffuse + specular) * atten, 1.0);\r\n#else\r\n    gl_FragColor = vec4((diffuse + specular) * atten, 1.0);\r\n#endif\r\n\r\n#ifdef GAMMA_CORRECTION\r\n    gl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1.0/2.2));\r\n#endif\r\n}\r\n`;\r\n\r\nlet g_shaderForwardBase = null;\r\nlet g_shaderForwardAdd = null;\r\n\r\nclass MatNormalMapW extends Material{\r\n    constructor(){\r\n        super();\r\n        \r\n        if(g_shaderForwardBase==null){\r\n            g_shaderForwardBase = Material.createShader(this.getVS_forwardbase(), this.getFS_forwardbase(), [\r\n                {'semantic':VertexSemantic.POSITION, 'name':'a_Position'},\r\n                {'semantic':VertexSemantic.NORMAL , 'name':'a_Normal'},\r\n                {'semantic':VertexSemantic.TANGENT , 'name':'a_Tangent'},\r\n                {'semantic':VertexSemantic.UV0 , 'name':'a_Texcoord'}\r\n            ]);\r\n        }\r\n        if(g_shaderForwardAdd==null){\r\n            g_shaderForwardAdd = Material.createShader(this.getVS_forwardadd(), this.getFS_forwardadd(), [\r\n                {'semantic':VertexSemantic.POSITION, 'name':'a_Position'},\r\n                {'semantic':VertexSemantic.NORMAL , 'name':'a_Normal'},\r\n                {'semantic':VertexSemantic.TANGENT , 'name':'a_Tangent'},\r\n                {'semantic':VertexSemantic.UV0 , 'name':'a_Texcoord'}\r\n            ]);\r\n        }        \r\n\r\n        this.addRenderPass(g_shaderForwardBase, LightMode.ForwardBase);  \r\n        this.addRenderPass(g_shaderForwardAdd, LightMode.ForwardAdd);                \r\n\r\n        //default uniforms\r\n        this._mainTexture = textureManager.getDefaultTexture();\r\n        this._mainTexture_ST = [1,1,0,0];\r\n        this._normalMap = textureManager.getDefaultBumpTexture();\r\n        this._normalMap_ST = [1,1,0,0];\r\n        this._specular = [1.0, 1.0, 1.0];\r\n        this._gloss = 20.0;  \r\n        this._colorTint = [1.0, 1.0, 1.0];  \r\n    }\r\n\r\n    getVS_Common(){\r\n        return vs;\r\n    }\r\n\r\n    getFS_Common(){\r\n        let fs_common = \"#define LIGHT_MODEL_PHONG\\n\";\r\n        if(sysConfig.gammaCorrection){\r\n            fs_common += \"#define GAMMA_CORRECTION\\n\";\r\n        }\r\n        fs_common += fs;\r\n        return fs_common;\r\n    }\r\n\r\n    getVS_forwardbase(){\r\n        return this.getVS_Common();\r\n    }\r\n\r\n    getFS_forwardbase(){\r\n        let fs_forwardbase = \"#define USE_AMBIENT\\n\" + this.getFS_Common();\r\n        return fs_forwardbase;\r\n    }\r\n\r\n    getVS_forwardadd(){\r\n        return this.getVS_Common();\r\n    }\r\n\r\n    getFS_forwardadd(){\r\n        // fs和forwardbase的区别只是fs里面没有加ambient\r\n        return this.getFS_Common();\r\n    }\r\n\r\n    //Override\r\n    get systemUniforms(){\r\n        return [SystemUniforms.MvpMatrix,\r\n            SystemUniforms.World2Object,\r\n            SystemUniforms.Object2World,\r\n            SystemUniforms.WorldCameraPos,\r\n            SystemUniforms.SceneAmbient,\r\n            SystemUniforms.LightColor, SystemUniforms.WorldLightPos]; \r\n    }\r\n\r\n    //Override\r\n    setCustomUniformValues(pass){                           \r\n        pass.shader.setUniformSafe('u_specular', this._specular);\r\n        pass.shader.setUniformSafe('u_gloss', this._gloss);\r\n        pass.shader.setUniformSafe('u_colorTint', this._colorTint);\r\n        pass.shader.setUniformSafe('u_texMain_ST', this._mainTexture_ST); \r\n        pass.shader.setUniformSafe('u_normalMap_ST', this._normalMap_ST);     \r\n        if(this._mainTexture){\r\n            this._mainTexture.bind(0);\r\n            pass.shader.setUniformSafe('u_texMain', 0);\r\n        }  \r\n        if(this._normalMap){\r\n            this._normalMap.bind(1);\r\n            pass.shader.setUniformSafe('u_normalMap', 1);\r\n        }\r\n        \r\n    }\r\n\r\n    set specular(v){\r\n        this._specular = v;\r\n    }\r\n\r\n    set gloss(v){\r\n        this._gloss = v;\r\n    }\r\n\r\n    set colorTint(v){\r\n        this._colorTint = v;\r\n    }\r\n\r\n    set mainTexture(v){\r\n        this._mainTexture = v;\r\n    }\r\n\r\n    get mainTexture(){\r\n        return this._mainTexture;\r\n    }\r\n\r\n    set mainTextureST(v){\r\n        this._mainTexture_ST = v;\r\n    }\r\n\r\n    set normalMap(v){\r\n        this._normalMap = v;\r\n    }\r\n\r\n    get normalMap(){\r\n        return this._normalMap;\r\n    }\r\n\r\n    set normalMapST(v){\r\n        this._normalMap_ST = v;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport { MatNormalMapW };","//镜子材质\r\nimport { Material, SystemUniforms } from \"./material\";\r\nimport { VertexSemantic } from \"../core/vertexFormat\";\r\nimport { LightMode } from \"./renderPass\";\r\n\r\nlet vs = `\r\nattribute vec4 a_Position;\r\nattribute vec2 a_Texcoord;\r\nuniform mat4 u_mvpMatrix;\r\nvarying vec2 v_texcoord;\r\nvoid main(){\r\n    gl_Position = u_mvpMatrix * a_Position;\r\n    v_texcoord = a_Texcoord.xy;\r\n    v_texcoord.x = 1.0 - v_texcoord.x;\r\n    v_texcoord.y = 1.0 - v_texcoord.y;\r\n}\r\n`;\r\n\r\nlet fs = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\nuniform sampler2D u_texMain;\r\nvarying vec2 v_texcoord;\r\nvoid main(){    \r\n    gl_FragColor = texture2D(u_texMain, v_texcoord);\r\n}\r\n`;\r\n\r\nlet g_shader = null;\r\n\r\nclass MatMirror extends Material{\r\n    constructor(){\r\n        super();\r\n        \r\n        if(g_shader==null){\r\n            g_shader = Material.createShader(vs, fs, [\r\n                {'semantic':VertexSemantic.POSITION, 'name':'a_Position'},\r\n                {'semantic':VertexSemantic.UV0 , 'name':'a_Texcoord'}\r\n            ]);\r\n        }     \r\n\r\n        this.addRenderPass(g_shader, LightMode.None);              \r\n\r\n        //default uniforms\r\n        this._mainTexture = null;\r\n    }\r\n\r\n    //Override\r\n    get systemUniforms(){\r\n        return [SystemUniforms.MvpMatrix]; \r\n    }\r\n\r\n    //Override\r\n    setCustomUniformValues(pass){                           \r\n        if(this._mainTexture){     \r\n            this._mainTexture.bind();\r\n            pass.shader.setUniformSafe('u_texMain', 0);\r\n        }\r\n    }\r\n\r\n    set mainTexture(v){\r\n        this._mainTexture = v;\r\n    }\r\n\r\n    get mainTexture(){\r\n        return this._mainTexture;\r\n    }\r\n\r\n}\r\n\r\nexport { MatMirror };","\r\nclass PostEffectLayer {\r\n    constructor(material){\r\n        this._material = material;\r\n    }\r\n\r\n    //override\r\n    render(chain, srcRT, dstRT){\r\n    }\r\n}\r\n\r\nexport { PostEffectLayer };","import { PostEffectLayer } from \"./postEffectLayer\";\r\n\r\n\r\nclass PostEffectLayerOnePass extends PostEffectLayer{\r\n    render(chain, srcRT, dstRT){\r\n        chain.blit(srcRT, dstRT, this._material, 0);\r\n    }\r\n}\r\n\r\nexport { PostEffectLayerOnePass };","//PostProcessing: gaussian blur\r\nimport { MatPP_Base } from \"./matPP_Base\";\r\nimport { Material } from \"../../material/material\";\r\nimport { VertexSemantic } from \"../../core/vertexFormat\";\r\nimport { LightMode } from \"../../material/renderPass\";\r\n\r\n// vs: 竖直方向模糊\r\nlet vs_vertical = `\r\nattribute vec2 a_Position;\r\nattribute vec2 a_Texcoord;\r\nuniform vec2 u_texelSize;\r\nuniform float u_blurSize;\r\nvarying vec2 v_uvs[5];\r\n\r\nvoid main(){\r\n    gl_Position = vec4(a_Position, 0.0, 1.0);\r\n    vec2 uv = a_Texcoord;\r\n\r\n    v_uvs[0] = uv;\r\n    v_uvs[1] = uv + vec2(0.0, u_texelSize.y) * u_blurSize;\r\n    v_uvs[2] = uv - vec2(0.0, u_texelSize.y) * u_blurSize;\r\n    v_uvs[3] = uv + vec2(0.0, u_texelSize.y * 2.0) * u_blurSize;\r\n    v_uvs[4] = uv - vec2(0.0, u_texelSize.y * 2.0) * u_blurSize;\r\n}\r\n`;\r\n\r\n// vs: 水平方向模糊\r\nlet vs_horizontal = `\r\nattribute vec2 a_Position;\r\nattribute vec2 a_Texcoord;\r\nuniform vec2 u_texelSize;\r\nuniform float u_blurSize;\r\nvarying vec2 v_uvs[5];\r\n\r\nvoid main(){\r\n    gl_Position = vec4(a_Position, 0.0, 1.0);\r\n    vec2 uv = a_Texcoord;\r\n\r\n    v_uvs[0] = uv;\r\n    v_uvs[1] = uv + vec2(u_texelSize.x, 0.0) * u_blurSize;\r\n    v_uvs[2] = uv - vec2(u_texelSize.x, 0.0) * u_blurSize;\r\n    v_uvs[3] = uv + vec2(u_texelSize.x * 2.0, 0.0) * u_blurSize;\r\n    v_uvs[4] = uv - vec2(u_texelSize.x * 2.0, 0.0) * u_blurSize;\r\n}\r\n`;\r\n\r\nlet fs = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\nuniform sampler2D u_texMain;\r\n\r\nvarying vec2 v_uvs[5];\r\n\r\nvoid main(){  \r\n    float weights[3];\r\n    weights[0] = 0.4026;\r\n    weights[1] = 0.2442;\r\n    weights[2] = 0.0545;\r\n    \r\n    vec3 sum = texture2D(u_texMain, v_uvs[0]).rgb * weights[0];\r\n    for(int i=1; i<3; i++){\r\n        sum += texture2D(u_texMain, v_uvs[i*2-1]).rgb * weights[i];\r\n        sum += texture2D(u_texMain, v_uvs[i*2]).rgb * weights[i];\r\n    }\r\n    \r\n    gl_FragColor = vec4(sum, 1.0);\r\n}\r\n`;\r\n\r\nclass MatPP_Blur extends MatPP_Base{\r\n    constructor(){ \r\n        super(fs, vs_vertical); // pass0 create in super constructor\r\n        \r\n        this._shaderPass1 = Material.createShader(vs_horizontal, fs, [\r\n            {'semantic':VertexSemantic.POSITION, 'name':'a_Position'},\r\n            {'semantic':VertexSemantic.UV0 , 'name':'a_Texcoord'}\r\n        ]); \r\n        this.addRenderPass(this._shaderPass1, LightMode.None);              \r\n\r\n        //default uniforms\r\n        this.texelSize = [1.0/512.0, 1.0/512.0];\r\n        this._blurSize = 1.0;\r\n        \r\n    }\r\n\r\n    //Override\r\n    setCustomUniformValues(pass){                           \r\n        super.setCustomUniformValues(pass);\r\n        pass.shader.setUniformSafe('u_texelSize', this.texelSize);\r\n        pass.shader.setUniformSafe('u_blurSize', this._blurSize);\r\n    }\r\n\r\n    set blurSize(v){\r\n        this._blurSize = v;\r\n    }\r\n}\r\n\r\nexport { MatPP_Blur };","import { PostEffectLayer } from \"./postEffectLayer\";\r\nimport { MatPP_Blur } from \"./material/matPP_Blur\";\r\n\r\n\r\nclass PostEffectBlur extends PostEffectLayer{\r\n    constructor(){\r\n        super(new MatPP_Blur());\r\n\r\n        //模糊迭代次数（每次迭代分别执行一次竖直和水平方向高斯模糊）\r\n        this._iterations = 3;   //0~4\r\n\r\n        //每迭代一次的模糊尺寸扩散速度（值越大越模糊）\r\n        this._blurSpread = 0.6; //0.2~3\r\n\r\n        //RT缩小系数，值越大越模糊\r\n        this._downSample = 2; //1~8\r\n    }\r\n\r\n    set iterations(v){\r\n        this._iterations = v;\r\n    }\r\n\r\n    set blurSpread(v){\r\n        this._blurSpread = v;\r\n    }\r\n\r\n    set downSample(v){\r\n        this._downSample = v;\r\n    }\r\n\r\n    render(chain, srcRT, dstRT){\r\n        let rtW = srcRT.width / this._downSample;\r\n        let rtH = srcRT.height / this._downSample;\r\n\r\n        let buffer0 = chain.getTempRT(rtW, rtH);\r\n        chain.blit(srcRT, buffer0);\r\n\r\n        for(let i=0; i<this._iterations; ++i){\r\n            this._material.blurSize = 1.0 + i * this._blurSpread;\r\n            let buffer1 = chain.getTempRT(rtW, rtH);\r\n\r\n            // render the vertical pass\r\n            chain.blit(buffer0, buffer1, this._material, 0);\r\n            chain.releaseTempRT(buffer0);\r\n            \r\n            buffer0 = buffer1;\r\n            buffer1 = chain.getTempRT(rtW, rtH);\r\n\r\n            // render the horizontal pass\r\n            chain.blit(buffer0, buffer1, this._material, 1);\r\n            chain.releaseTempRT(buffer0);\r\n            buffer0 = buffer1;\r\n        }\r\n\r\n        chain.blit(buffer0, dstRT);\r\n        chain.releaseTempRT(buffer0);\r\n    }\r\n}\r\n\r\nexport { PostEffectBlur };","//PostProcessing: bloom\r\nimport { MatPP_Base } from \"./matPP_Base\";\r\nimport { Material } from \"../../material/material\";\r\nimport { VertexSemantic } from \"../../core/vertexFormat\";\r\nimport { LightMode } from \"../../material/renderPass\";\r\n\r\n// vs: extract bright\r\nlet vs_extractBright = `\r\nattribute vec2 a_Position;\r\nattribute vec2 a_Texcoord;\r\nvarying vec2 v_texcoord;\r\n\r\nvoid main(){\r\n    gl_Position = vec4(a_Position, 0.0, 1.0);\r\n    v_texcoord = a_Texcoord;\r\n}\r\n`;\r\n\r\n// fs: extract bright\r\nlet fs_extractBright = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\nuniform sampler2D u_texMain;\r\nuniform float u_brightThreshold;\r\nvarying vec2 v_texcoord;\r\n\r\nfloat luminance(vec4 color){\r\n    return dot(color.rgb, vec3(0.2125, 0.7154, 0.0721));\r\n}\r\n\r\nvoid main(){    \r\n    vec4 c = texture2D(u_texMain, v_texcoord);\r\n    float brightness = luminance(c);\r\n    float factor = clamp(brightness - u_brightThreshold, 0.0, 1.0);\r\n    gl_FragColor = c * factor;\r\n}\r\n`\r\n\r\n// vs: 竖直方向模糊\r\nlet vs_verticalBlur = `\r\nattribute vec2 a_Position;\r\nattribute vec2 a_Texcoord;\r\nuniform vec2 u_texelSize;\r\nuniform float u_blurSize;\r\nvarying vec2 v_uvs[5];\r\n\r\nvoid main(){\r\n    gl_Position = vec4(a_Position, 0.0, 1.0);\r\n    vec2 uv = a_Texcoord;\r\n\r\n    v_uvs[0] = uv;\r\n    v_uvs[1] = uv + vec2(0.0, u_texelSize.y) * u_blurSize;\r\n    v_uvs[2] = uv - vec2(0.0, u_texelSize.y) * u_blurSize;\r\n    v_uvs[3] = uv + vec2(0.0, u_texelSize.y * 2.0) * u_blurSize;\r\n    v_uvs[4] = uv - vec2(0.0, u_texelSize.y * 2.0) * u_blurSize;\r\n}\r\n`;\r\n\r\n// vs: 水平方向模糊\r\nlet vs_horizontalBlur = `\r\nattribute vec2 a_Position;\r\nattribute vec2 a_Texcoord;\r\nuniform vec2 u_texelSize;\r\nuniform float u_blurSize;\r\nvarying vec2 v_uvs[5];\r\n\r\nvoid main(){\r\n    gl_Position = vec4(a_Position, 0.0, 1.0);\r\n    vec2 uv = a_Texcoord;\r\n\r\n    v_uvs[0] = uv;\r\n    v_uvs[1] = uv + vec2(u_texelSize.x, 0.0) * u_blurSize;\r\n    v_uvs[2] = uv - vec2(u_texelSize.x, 0.0) * u_blurSize;\r\n    v_uvs[3] = uv + vec2(u_texelSize.x * 2.0, 0.0) * u_blurSize;\r\n    v_uvs[4] = uv - vec2(u_texelSize.x * 2.0, 0.0) * u_blurSize;\r\n}\r\n`;\r\n\r\nlet fs_blur = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\nuniform sampler2D u_texMain;\r\n\r\nvarying vec2 v_uvs[5];\r\n\r\nvoid main(){  \r\n    float weights[3];\r\n    weights[0] = 0.4026;\r\n    weights[1] = 0.2442;\r\n    weights[2] = 0.0545;\r\n    \r\n    vec3 sum = texture2D(u_texMain, v_uvs[0]).rgb * weights[0];\r\n    for(int i=1; i<3; i++){\r\n        sum += texture2D(u_texMain, v_uvs[i*2-1]).rgb * weights[i];\r\n        sum += texture2D(u_texMain, v_uvs[i*2]).rgb * weights[i];\r\n    }\r\n    \r\n    gl_FragColor = vec4(sum, 1.0);\r\n}\r\n`;\r\n\r\n// vs: bloom\r\nlet vs_bloom = `\r\nattribute vec2 a_Position;\r\nattribute vec2 a_Texcoord;\r\nvarying vec4 v_uv;\r\n\r\nvoid main(){\r\n    gl_Position = vec4(a_Position, 0.0, 1.0);\r\n    v_uv.xy = a_Texcoord;\r\n    v_uv.zw = a_Texcoord;\r\n}\r\n`;\r\n\r\n// fs: bloom\r\nlet fs_bloom = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\nuniform sampler2D u_texMain;\r\nuniform sampler2D u_texBloom;\r\nvarying vec4 v_uv;\r\n\r\nvoid main(){    \r\n    vec4 c = texture2D(u_texMain, v_uv.xy);\r\n    vec4 bloom = texture2D(u_texBloom, v_uv.zw);\r\n    gl_FragColor = c + bloom;\r\n}\r\n`\r\n\r\nclass MatPP_Bloom extends MatPP_Base{\r\n    constructor(){ \r\n        super(fs_extractBright, vs_extractBright); // pass0 create in super constructor\r\n        \r\n        this._shaderPass1 = Material.createShader(vs_verticalBlur, fs_blur, [\r\n            {'semantic':VertexSemantic.POSITION, 'name':'a_Position'},\r\n            {'semantic':VertexSemantic.UV0 , 'name':'a_Texcoord'}\r\n        ]); \r\n        this.addRenderPass(this._shaderPass1, LightMode.None);  \r\n        \r\n        this._shaderPass2 = Material.createShader(vs_horizontalBlur, fs_blur, [\r\n            {'semantic':VertexSemantic.POSITION, 'name':'a_Position'},\r\n            {'semantic':VertexSemantic.UV0 , 'name':'a_Texcoord'}\r\n        ]); \r\n        this.addRenderPass(this._shaderPass2, LightMode.None);  \r\n\r\n        this._shaderPass3 = Material.createShader(vs_bloom, fs_bloom, [\r\n            {'semantic':VertexSemantic.POSITION, 'name':'a_Position'},\r\n            {'semantic':VertexSemantic.UV0 , 'name':'a_Texcoord'}\r\n        ]); \r\n        this.addRenderPass(this._shaderPass3, LightMode.None);  \r\n\r\n        //default uniforms\r\n        this._brightThreshold = 0.5;\r\n        this.texelSize = [1.0/512.0, 1.0/512.0];\r\n        this._blurSize = 1.0;\r\n        this._bloomTexture = null;\r\n        \r\n    }\r\n\r\n    //Override\r\n    setCustomUniformValues(pass){                           \r\n        super.setCustomUniformValues(pass);\r\n        pass.shader.setUniformSafe('u_brightThreshold', this._brightThreshold);\r\n        pass.shader.setUniformSafe('u_texelSize', this.texelSize);\r\n        pass.shader.setUniformSafe('u_blurSize', this._blurSize);\r\n\r\n        if(pass.index === 3 && this._bloomTexture){     \r\n            this._bloomTexture.bind(1);\r\n            pass.shader.setUniformSafe('u_texBloom', 1);\r\n        }\r\n    }\r\n\r\n    set brightThreshold(v){\r\n        this._brightThreshold = v;\r\n    }\r\n\r\n    set blurSize(v){\r\n        this._blurSize = v;\r\n    }\r\n    \r\n    set bloomTexture(v){\r\n        this._bloomTexture = v;\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport { MatPP_Bloom };","import { PostEffectLayer } from \"./postEffectLayer\";\r\nimport { MatPP_Bloom } from \"./material/matPP_Bloom\";\r\n\r\n\r\nclass PostEffectBloom extends PostEffectLayer{\r\n    constructor(){\r\n        super(new MatPP_Bloom());\r\n\r\n        //亮度阈值\r\n        this._brightThreshold = 0.6;\r\n\r\n        //模糊迭代次数（每次迭代分别执行一次竖直和水平方向高斯模糊）\r\n        this._iterations = 3;   //0~4\r\n\r\n        //每迭代一次的模糊尺寸扩散速度（值越大越模糊）\r\n        this._blurSpread = 0.6; //0.2~3\r\n\r\n        //RT缩小系数，值越大越模糊\r\n        this._downSample = 2; //1~8\r\n    }\r\n\r\n    set brightThreshold(v){\r\n        this._brightThreshold = v;\r\n    }\r\n\r\n    set iterations(v){\r\n        this._iterations = v;\r\n    }\r\n\r\n    set blurSpread(v){\r\n        this._blurSpread = v;\r\n    }\r\n\r\n    set downSample(v){\r\n        this._downSample = v;\r\n    }\r\n\r\n    render(chain, srcRT, dstRT){\r\n        this._material.brightThreshold = this._brightThreshold;\r\n\r\n        let rtW = srcRT.width / this._downSample;\r\n        let rtH = srcRT.height / this._downSample;\r\n\r\n        let buffer0 = chain.getTempRT(rtW, rtH);\r\n        chain.blit(srcRT, buffer0, this._material, 0); //Pass0: extract brightness\r\n\r\n        for(let i=0; i<this._iterations; ++i){\r\n            this._material.blurSize = 1.0 + i * this._blurSpread;\r\n            let buffer1 = chain.getTempRT(rtW, rtH);\r\n\r\n            // render the vertical pass\r\n            chain.blit(buffer0, buffer1, this._material, 1);\r\n            chain.releaseTempRT(buffer0);\r\n            \r\n            buffer0 = buffer1;\r\n            buffer1 = chain.getTempRT(rtW, rtH);\r\n\r\n            // render the horizontal pass\r\n            chain.blit(buffer0, buffer1, this._material, 2);\r\n            chain.releaseTempRT(buffer0);\r\n            buffer0 = buffer1;\r\n        }\r\n\r\n        this._material.bloomTexture = buffer0.texture2D;\r\n        chain.blit(srcRT, dstRT, this._material, 3); //Pass3: merge bloom\r\n\r\n        chain.releaseTempRT(buffer0);\r\n    }\r\n}\r\n\r\nexport { PostEffectBloom };","//PostProcessing: 简单的波动特效（可以将系数开放出来）\r\nimport { MatPP_Base } from \"./matPP_Base\";\r\n\r\nlet fs = `\r\n#ifdef GL_ES\r\nprecision highp float;\r\n#endif\r\nuniform sampler2D u_texMain;\r\nuniform float u_time;\r\nvarying vec2 v_texcoord;\r\nvoid main(){\r\n    vec2 dv = v_texcoord - vec2(0.5);\r\n    float dis = length(dv);\r\n    float dis_factor = 2.5; //波峰数\r\n    float time_factor = 1.0;\r\n    float wave_factor = 0.01; //振幅系数\r\n    vec2 offset = sin((dis * dis_factor + u_time * time_factor)*3.1415926*2.0) * wave_factor * normalize(dv);\r\n    gl_FragColor = texture2D(u_texMain, v_texcoord+offset);\r\n}\r\n`;\r\n\r\nclass MatPP_Wave extends MatPP_Base{\r\n    constructor(){\r\n        super(fs);              \r\n        this._time = 0;\r\n    }\r\n\r\n    //Override\r\n    setCustomUniformValues(pass){                           \r\n        super.setCustomUniformValues(pass);\r\n        pass.shader.setUniformSafe('u_time', this._time);\r\n    }\r\n\r\n    set time(v){\r\n        this._time = v%10;\r\n    }\r\n}\r\n\r\nexport { MatPP_Wave };","//PostProcessing: Grayscale\r\nimport { MatPP_Base } from \"./matPP_Base\";\r\n\r\nlet fs = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\nuniform sampler2D u_texMain;\r\nvarying vec2 v_texcoord;\r\nvoid main(){  \r\n    vec3 color = texture2D(u_texMain, v_texcoord).rgb;\r\n    float gray = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;  \r\n    gl_FragColor = vec4(gray, gray, gray, 1.0);\r\n}\r\n`;\r\n\r\nclass MatPP_Grayscale extends MatPP_Base{\r\n    constructor(){\r\n        super(fs);              \r\n    }\r\n}\r\n\r\nexport { MatPP_Grayscale };","//PostProcessing: Modify brightness, saturation and contrast\r\nimport { MatPP_Base } from \"./matPP_Base\";\r\n\r\nlet fs = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\nuniform sampler2D u_texMain;\r\nuniform float u_brightness;\r\nuniform float u_saturation;\r\nuniform float u_contrast;\r\n\r\nvarying vec2 v_texcoord;\r\nvoid main(){  \r\n    vec4 tex = texture2D(u_texMain, v_texcoord);\r\n    \r\n    //Apply brightness\r\n    vec3 final = tex.rgb * u_brightness;\r\n\r\n    //Apply saturation\r\n    float luminance = 0.2125 * tex.r + 0.7154 * tex.g + 0.0721 * tex.b;  \r\n    vec3 luminanceColor = vec3(luminance,luminance,luminance);\r\n    final = mix(luminanceColor, final, u_saturation);\r\n\r\n    //Apply contrast\r\n    vec3 avgColor = vec3(0.5, 0.5, 0.5);\r\n    final = mix(avgColor, final, u_contrast);\r\n\r\n    gl_FragColor = vec4(final, tex.a);\r\n}\r\n`;\r\n\r\nclass MatPP_ColorBSC extends MatPP_Base{\r\n    constructor(){\r\n        super(fs);  \r\n        \r\n        this._brightness = 1.0;\r\n        this._saturation = 1.0;\r\n        this._contrast = 1.0;\r\n    }\r\n\r\n    //Override\r\n    setCustomUniformValues(pass){                           \r\n        super.setCustomUniformValues(pass);\r\n        pass.shader.setUniformSafe('u_brightness', this._brightness);\r\n        pass.shader.setUniformSafe('u_saturation', this._saturation);\r\n        pass.shader.setUniformSafe('u_contrast', this._contrast);\r\n    }\r\n\r\n    set brightness(v){\r\n        this._brightness = v;\r\n    }\r\n\r\n    get brightness(){\r\n        return this._brightness;\r\n    }\r\n\r\n    set saturation(v){\r\n        this._saturation = v;\r\n    }\r\n\r\n    get saturation(){\r\n        return this._saturation;\r\n    }\r\n\r\n    set contrast(v){\r\n        this._contrast = v;\r\n    }\r\n\r\n    get contrast(){\r\n        return this._contrast;\r\n    }\r\n}\r\n\r\nexport { MatPP_ColorBSC };","//PostProcessing: Vignette 简单的晕影效果\r\nimport { MatPP_Base } from \"./matPP_Base\";\r\n\r\nlet fs = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\nuniform sampler2D u_texMain;\r\nuniform float u_intensity;\r\nuniform vec3 u_color;\r\nvarying vec2 v_texcoord;\r\nvoid main(){\r\n    vec2 coords = (v_texcoord - 0.5)*2.0; //uv转换到[-1,1]\r\n    float coordDot = dot(coords, coords);//边缘是1，中间是0\r\n    float mask = 1.0 - coordDot * u_intensity * 0.1;\r\n    vec4 tex = texture2D(u_texMain, v_texcoord);\r\n    vec3 color = mix(u_color, tex.rgb, mask);\r\n    gl_FragColor = vec4(color * mask, tex.a);\r\n}\r\n`;\r\n\r\nclass MatPP_Vignette extends MatPP_Base{\r\n    constructor(){\r\n        super(fs);  \r\n        this._intensity = 3.0; \r\n        this._color = [0.0, 0.0, 0.0];\r\n    }\r\n\r\n    //Override\r\n    setCustomUniformValues(pass){                           \r\n        super.setCustomUniformValues(pass);\r\n        pass.shader.setUniformSafe('u_intensity', this._intensity);\r\n        pass.shader.setUniformSafe('u_color', this._color);\r\n    }\r\n\r\n    set intensity(v){\r\n        this._intensity = v;\r\n    }\r\n\r\n    set color(v){\r\n        this._color = v;\r\n    }\r\n}\r\n\r\nexport { MatPP_Vignette };","//PostProcessing: edge detection\r\nimport { MatPP_Base } from \"./matPP_Base\";\r\n\r\nlet vs = `\r\nattribute vec2 a_Position;\r\nattribute vec2 a_Texcoord;\r\nuniform vec2 u_texelSize;\r\nvarying vec2 v_uvs[9];\r\n\r\nvoid main(){\r\n    gl_Position = vec4(a_Position, 0.0, 1.0);\r\n    vec2 uv = a_Texcoord;\r\n\r\n    v_uvs[0] = uv + u_texelSize * vec2(-1.0, 1.0);\r\n    v_uvs[1] = uv + u_texelSize * vec2(0.0, 1.0);\r\n    v_uvs[2] = uv + u_texelSize * vec2(1.0, 1.0);\r\n    v_uvs[3] = uv + u_texelSize * vec2(-1.0, 0.0);\r\n    v_uvs[4] = uv;\r\n    v_uvs[5] = uv + u_texelSize * vec2(1.0, 0.0);\r\n    v_uvs[6] = uv + u_texelSize * vec2(-1.0, -1.0);\r\n    v_uvs[7] = uv + u_texelSize * vec2(0.0, -1.0);\r\n    v_uvs[8] = uv + u_texelSize * vec2(1.0, -1.0);\r\n}\r\n`;\r\n\r\nlet fs = `\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\nuniform sampler2D u_texMain;\r\nuniform float u_edgeOnly;\r\nuniform vec3 u_colorEdge;\r\nuniform vec3 u_colorBg;\r\n\r\nvarying vec2 v_uvs[9];\r\n\r\nfloat luminance(vec4 color){\r\n    return dot(color.rgb, vec3(0.2125, 0.7154, 0.0721));\r\n}\r\n\r\nfloat sobel(){  \r\n    float Gx[9];\r\n    Gx[0] = -1.0;\r\n    Gx[1] = 0.0;\r\n    Gx[2] = 1.0;\r\n    Gx[3] = -2.0;\r\n    Gx[4] = 0.0;\r\n    Gx[5] = 2.0;\r\n    Gx[6] = -1.0;\r\n    Gx[7] = 0.0;\r\n    Gx[8] = 1.0;\r\n        \r\n    float Gy[9];\r\n    Gy[0] = 1.0;\r\n    Gy[1] = 2.0;\r\n    Gy[2] = 1.0;\r\n    Gy[3] = 0.0;\r\n    Gy[4] = 0.0;\r\n    Gy[5] = 0.0;\r\n    Gy[6] = -1.0;\r\n    Gy[7] = -2.0;\r\n    Gy[8] = -1.0;\r\n\r\n    float texColor;\r\n    float edgeX = 0.0;\r\n    float edgeY = 0.0;\r\n    for(int i=0; i<9; i++){\r\n        texColor = luminance(texture2D(u_texMain, v_uvs[i]));\r\n        edgeX += texColor * Gx[i];\r\n        edgeY += texColor * Gy[i];\r\n    }\r\n    float edge = 1.0 - abs(edgeX) - abs(edgeY);\r\n    return edge;\r\n}\r\n    \r\n    \r\nvoid main(){  \r\n    float edge = sobel();\r\n    vec3 withEdgeColor = mix(u_colorEdge, texture2D(u_texMain, v_uvs[4]).rgb, edge);\r\n    vec3 onlyEdgeColor = mix(u_colorEdge, u_colorBg, edge);\r\n    gl_FragColor = vec4(mix(withEdgeColor, onlyEdgeColor, u_edgeOnly), 1.0);\r\n}\r\n`;\r\n\r\nclass MatPP_EdgeDetection extends MatPP_Base{\r\n    constructor(){\r\n        super(fs, vs);  \r\n        \r\n        this.texelSize = [1.0/512.0, 1.0/512.0];\r\n        this._edgeOnly = 1.0;\r\n        this._colorEdge = [0.0, 0.0, 0.0];\r\n        this._colorBg = [1.0, 1.0, 1.0];\r\n    }\r\n\r\n    //Override\r\n    setCustomUniformValues(pass){                           \r\n        super.setCustomUniformValues(pass);\r\n        pass.shader.setUniformSafe('u_texelSize', this.texelSize);\r\n        pass.shader.setUniformSafe('u_edgeOnly', this._edgeOnly);\r\n        pass.shader.setUniformSafe('u_colorEdge', this._colorEdge);\r\n        pass.shader.setUniformSafe('u_colorBg', this._colorBg);\r\n    }\r\n\r\n    set edgeOnly(v){\r\n        this._edgeOnly = v;\r\n    }\r\n\r\n    set colorEdge(c){\r\n        this._colorEdge = c;\r\n    }\r\n\r\n    set colorBg(c){\r\n        this._colorBg = c;\r\n    }\r\n\r\n}\r\n\r\nexport { MatPP_EdgeDetection };"],"names":["gl","canvas","sysConfig","Component","vs","fs","_tempVec3","_tempQuat","_tempQuat2","_tempMat4","SceneNode","g_shaderForwardBase","g_shaderForwardAdd","g_shader"],"mappings":"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B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5E,QAAQ,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC3E,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,QAAQ,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC3E,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,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C,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzE,QAAQ,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACzE,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzE,QAAQ,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACzE,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzE,QAAQ,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE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"}